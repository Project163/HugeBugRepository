diff --git a/pom.xml b/pom.xml
index d7ce872..fefb0af 100644
--- a/pom.xml
+++ b/pom.xml
@@ -46,7 +46,7 @@
 
   <properties>
     <slf4j.version>1.6.4</slf4j.version>
-    <logback.version>1.0.13</logback.version>
+    <logback.version>1.1.0</logback.version>
     <sling.java.version>6</sling.java.version>
     <pax-exam.version>3.0.0</pax-exam.version>
 
@@ -105,7 +105,7 @@
             <_exportcontents>
               org.slf4j.impl;version=${slf4j.version},
               ch.qos.logback.classic*;
-              ch.qos.logback.core*;version=${logback.version}
+              ch.qos.logback.core*;
             </_exportcontents>
             <Import-Package>
               !org.slf4j.impl,
diff --git a/src/main/java/ch/qos/logback/classic/util/LoggerNameUtil.java b/src/main/java/ch/qos/logback/classic/util/LoggerNameUtil.java
deleted file mode 100644
index ec0797e..0000000
--- a/src/main/java/ch/qos/logback/classic/util/LoggerNameUtil.java
+++ /dev/null
@@ -1,64 +0,0 @@
-/**
-* Logback: the reliable, generic, fast and flexible logging framework.
-* Copyright (C) 1999-2013, QOS.ch. All rights reserved.
-*
-* This program and the accompanying materials are dual-licensed under
-* either the terms of the Eclipse Public License v1.0 as published by
-* the Eclipse Foundation
-*
-* or (per the licensee's choosing)
-*
-* under the terms of the GNU Lesser General Public License version 2.1
-* as published by the Free Software Foundation.
-*/
-package ch.qos.logback.classic.util;
-
-import java.util.ArrayList;
-import java.util.List;
-
-import ch.qos.logback.core.CoreConstants;
-
-/**
- * Utility class for analysing logger names.
- * Locally overriding the class for SLING-3037
- */
-public class LoggerNameUtil {
-
-
-  public static int getFirstSeparatorIndexOf(String name) {
-    return getSeparatorIndexOf(name, 0);
-  }
-
-  /**
-   * Get the position of the separator character, if any, starting at position
-   * 'fromIndex'.
-   *
-   * @param name
-   * @param fromIndex
-   * @return
-   */
-  public static int getSeparatorIndexOf(String name, int fromIndex) {
-      int dotIndex = name.indexOf(CoreConstants.DOT, fromIndex);
-      int dollarIndex = name.indexOf(CoreConstants.DOLLAR, fromIndex);
-      if (dotIndex == -1 && dollarIndex == -1) return -1;
-      if (dotIndex == -1) return dollarIndex;
-      if (dollarIndex == -1) return dotIndex;
-      return dotIndex < dollarIndex ? dotIndex : dollarIndex;
-  }
-
-  public static List<String> computeNameParts(String loggerName) {
-    List<String> partList = new ArrayList<String>();
-
-    int fromIndex = 0;
-    while(true) {
-      int index = getSeparatorIndexOf(loggerName, fromIndex);
-      if(index == -1) {
-       partList.add(loggerName.substring(fromIndex));
-       break;
-      }
-      partList.add(loggerName.substring(fromIndex, index));
-      fromIndex = index+1;
-    }
-    return partList;
-  }
-}
