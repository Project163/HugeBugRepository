diff --git a/core/src/main/java/org/apache/commons/vfs/provider/ram/RamFileData.java b/core/src/main/java/org/apache/commons/vfs/provider/ram/RamFileData.java
index c1b19913..869659f4 100644
--- a/core/src/main/java/org/apache/commons/vfs/provider/ram/RamFileData.java
+++ b/core/src/main/java/org/apache/commons/vfs/provider/ram/RamFileData.java
@@ -63,6 +63,7 @@ class RamFileData implements Serializable
     public RamFileData(FileName name)
     {
         super();
+        this.children = Collections.synchronizedCollection(new ArrayList());
         this.clear();
         if (name == null)
         {
@@ -130,7 +131,7 @@ class RamFileData implements Serializable
         this.buffer = new byte[0];
         updateLastModified();
         this.type = FileType.IMAGINARY;
-        this.children = Collections.synchronizedCollection(new ArrayList());
+        this.children.clear();
         this.name = null;
     }
 
diff --git a/core/src/main/java/org/apache/commons/vfs/provider/ram/RamFileSystem.java b/core/src/main/java/org/apache/commons/vfs/provider/ram/RamFileSystem.java
index 6dec95f3..de6a88b8 100644
--- a/core/src/main/java/org/apache/commons/vfs/provider/ram/RamFileSystem.java
+++ b/core/src/main/java/org/apache/commons/vfs/provider/ram/RamFileSystem.java
@@ -44,7 +44,7 @@ public class RamFileSystem extends AbstractFileSystem implements Serializable
     /**
      * Cache of RAM File Data
      */
-    private Map cache;
+    private final Map cache;
 
     /**
      * @param rootName The root file name.
@@ -95,16 +95,19 @@ public class RamFileSystem extends AbstractFileSystem implements Serializable
             return null;
         }
         Collection children = data.getChildren();
+        String[] names;
 
-        String[] names = new String[children.size()];
+        synchronized(children) {
+            names = new String[children.size()];
 
-        int pos = 0;
-        Iterator iter = children.iterator();
-        while (iter.hasNext())
-        {
-            RamFileData childData = (RamFileData) iter.next();
-            names[pos] = childData.getName().getBaseName();
-            pos++;
+            int pos = 0;
+            Iterator iter = children.iterator();
+            while (iter.hasNext())
+            {
+                RamFileData childData = (RamFileData) iter.next();
+                names[pos] = childData.getName().getBaseName();
+                pos++;
+            }
         }
 
         return names;
@@ -293,11 +296,13 @@ public class RamFileSystem extends AbstractFileSystem implements Serializable
     int size()
     {
         int size = 0;
-        Iterator iter = cache.values().iterator();
-        while (iter.hasNext())
-        {
-            RamFileData data = (RamFileData) iter.next();
-            size += data.size();
+        synchronized(cache) {
+            Iterator iter = cache.values().iterator();
+            while (iter.hasNext())
+            {
+                RamFileData data = (RamFileData) iter.next();
+                size += data.size();
+            }
         }
         return size;
     }
@@ -307,7 +312,7 @@ public class RamFileSystem extends AbstractFileSystem implements Serializable
      */
     public void close()
     {
-        this.cache = null;
+        this.cache.clear();
         super.close();
     }
 }
diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 794b7b5a..57fe4661 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -23,6 +23,9 @@
 
   <body>
     <release version="2.0" date="in SVN" description="">
+       <action dev="rgoers" type="fix" issue="VFS-324" due-to="sebb">
+        Clear the cache in RamFileSystem and the children in RamFileData.
+      </action>
       <action dev="sebb" type="fix" issue="VFS-319" due-to="sebb">
         Typo in FtpsFileSystemConfigBuilder.setFtpsType
       </action>
