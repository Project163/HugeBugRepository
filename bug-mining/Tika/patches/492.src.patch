diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/BoilerpipeContentHandler.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/BoilerpipeContentHandler.java
index e8130fb4a..7d1c5230e 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/html/BoilerpipeContentHandler.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/html/BoilerpipeContentHandler.java
@@ -283,6 +283,7 @@ public class BoilerpipeContentHandler extends BoilerpipeHTMLContentHandler {
             // Now have bits set for all valid character runs. Replay our recorded elements,
             // but only emit character runs flagged as valid.
             int curCharsIndex = headerCharOffset;
+
             for (RecordedElement element : elements) {
                 switch (element.getElementType()) {
                     case START:
@@ -297,6 +298,14 @@ public class BoilerpipeContentHandler extends BoilerpipeHTMLContentHandler {
 
                             if (validCharacterRuns.get(curCharsIndex)) {
                                 delegate.characters(chars, 0, chars.length);
+
+                                // https://issues.apache.org/jira/browse/TIKA-961
+                                if (!Character.isWhitespace(chars[chars.length - 1])) {
+                                    // Only add whitespace for certain elements
+                                    if (XHTMLContentHandler.ENDLINE.contains(element.getLocalName())) {
+                                        delegate.ignorableWhitespace(NL, 0, NL.length);
+                                    }
+                                }
                             }
                         }
                         break;
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/html/HtmlParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/html/HtmlParserTest.java
index 981e5f1ea..1ff44562c 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/html/HtmlParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/html/HtmlParserTest.java
@@ -103,15 +103,15 @@ public class HtmlParserTest extends TestCase {
                 HtmlParserTest.class.getResourceAsStream(path), metadata);
 
         assertTrue("Did not contain expected text:"
-                + "Title : Tilte with UTF-8 chars öäå", content
-                .contains("Title : Tilte with UTF-8 chars öäå"));
+                + "Title : Tilte with UTF-8 chars √∂√§√•", content
+                .contains("Title : Tilte with UTF-8 chars √∂√§√•"));
 
         assertTrue("Did not contain expected text:"
                 + "Content with UTF-8 chars", content
                 .contains("Content with UTF-8 chars"));
 
-        assertTrue("Did not contain expected text:" + "åäö", content
-                .contains("åäö"));
+        assertTrue("Did not contain expected text:" + "√•√§√∂", content
+                .contains("√•√§√∂"));
     }
 
     public void testXhtmlParsing() throws Exception {
@@ -782,6 +782,35 @@ public class HtmlParserTest extends TestCase {
         assertTrue(Pattern.matches("\tone\n\n", result));
     }
 
+    /**
+     * Test case for TIKA-961
+     * @see <a href="https://issues.apache.org/jira/browse/TIKA-961">TIKA-961</a>
+     */
+    public void testBoilerplateWhitespace() throws Exception {
+        String path = "/test-documents/boilerplate-whitespace.html";
+        
+        Metadata metadata = new Metadata();
+        BodyContentHandler handler = new BodyContentHandler();
+        
+        BoilerpipeContentHandler bpHandler = new BoilerpipeContentHandler(handler);
+        bpHandler.setIncludeMarkup(true);
+        
+        new HtmlParser().parse(
+                HtmlParserTest.class.getResourceAsStream(path),
+                bpHandler,  metadata, new ParseContext());
+        
+        String content = handler.toString();
+
+        // Should not contain item_aitem_b
+        assertFalse(content.contains("item_aitem_b"));
+
+        // Should contain the two list items with a newline in between.
+        assertTrue(content.contains("item_a\nitem_b"));
+
+        // Should contain 有什么需要我帮你的 (can i help you) without whitespace
+        assertTrue(content.contains("有什么需要我帮你的"));
+    }
+
     /**
      * Test case for TIKA-983:  HTML parser should add Open Graph meta tag data to Metadata returned by parser
      *
diff --git a/tika-parsers/src/test/resources/test-documents/boilerplate-whitespace.html b/tika-parsers/src/test/resources/test-documents/boilerplate-whitespace.html
new file mode 100644
index 000000000..bd38b895a
--- /dev/null
+++ b/tika-parsers/src/test/resources/test-documents/boilerplate-whitespace.html
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
+        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
+<head>
+        <meta http-equiv="content-type" content="text/html; charset=utf-8" />
+        <title>Title</title>
+</head>
+<body>
+
+<p>The following unordered list must contain whitespace between both items:
+<ul>
+ <li>item_a</li><li>item_b</li>
+</ul>
+Whitespace should not be added around elements like anchors, em or string etc. This
+breaks CJK: 有什<strong>么需</strong>要我帮你的?
+</p>
+
+<p>
+Here's another paragraph of text.
+This is the end of the text.
+</p>
+
+<p><a href="Footer.html">footer</a></p>
+
+</body>
+</html>
