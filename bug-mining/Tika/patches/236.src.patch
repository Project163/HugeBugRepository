diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java
index 786ea6ea7..90de33bb7 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java
@@ -35,6 +35,7 @@ import org.apache.tika.exception.TikaException;
 import org.apache.tika.io.TikaInputStream;
 import org.apache.tika.metadata.Metadata;
 import org.apache.tika.parser.ParseContext;
+import org.apache.tika.sax.EndDocumentShieldingContentHandler;
 import org.apache.xmlbeans.XmlException;
 import org.xml.sax.ContentHandler;
 import org.xml.sax.SAXException;
@@ -46,7 +47,7 @@ import org.xml.sax.SAXException;
 public class OOXMLExtractorFactory {
 
     public static void parse(
-            InputStream stream, ContentHandler handler,
+            InputStream stream, ContentHandler baseHandler,
             Metadata metadata, ParseContext context)
             throws IOException, SAXException, TikaException {
         Locale locale = context.get(Locale.class, Locale.getDefault());
@@ -83,9 +84,18 @@ public class OOXMLExtractorFactory {
             } else {
                 extractor = new POIXMLTextExtractorDecorator(context, poiExtractor);
             }
-
+            
+            // We need to get the content first, but not end 
+            //  the document just yet
+            EndDocumentShieldingContentHandler handler = 
+               new EndDocumentShieldingContentHandler(baseHandler);
             extractor.getXHTML(handler, metadata, context);
+
+            // Now we can get the metadata
             extractor.getMetadataExtractor().extract(metadata);
+            
+            // Then finish up
+            handler.reallyEndDocument();
         } catch (IllegalArgumentException e) {
             if (e.getMessage().startsWith("No supported documents found")) {
                 throw new TikaException(
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParser.java
index efa5b3ecb..80c44f53a 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParser.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParser.java
@@ -33,10 +33,13 @@ import org.xml.sax.SAXException;
 
 /**
  * Office Open XML (OOXML) parser.
- * 
  */
 public class OOXMLParser extends AbstractParser {
-
+    /**
+     * Serial version UID 
+     */
+    private static final long serialVersionUID = 6535995710857776481L;
+   
     private static final Set<MediaType> SUPPORTED_TYPES =
         Collections.unmodifiableSet(new HashSet<MediaType>(Arrays.asList(
                 MediaType.application("x-tika-ooxml"),
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java
index 799f8ba6f..18623d0a8 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java
@@ -32,6 +32,7 @@ import org.apache.tika.mime.MediaType;
 import org.apache.tika.parser.AbstractParser;
 import org.apache.tika.parser.ParseContext;
 import org.apache.tika.parser.Parser;
+import org.apache.tika.sax.EndDocumentShieldingContentHandler;
 import org.xml.sax.ContentHandler;
 import org.xml.sax.SAXException;
 import org.xml.sax.helpers.DefaultHandler;
@@ -102,9 +103,16 @@ public class OpenDocumentParser extends AbstractParser {
     }
 
     public void parse(
-            InputStream stream, ContentHandler handler,
+            InputStream stream, ContentHandler baseHandler,
             Metadata metadata, ParseContext context)
             throws IOException, SAXException, TikaException {
+       
+        // As we don't know which of the metadata or the content
+        //  we'll hit first, catch the endDocument call initially
+        EndDocumentShieldingContentHandler handler = 
+          new EndDocumentShieldingContentHandler(baseHandler);
+       
+        // Process the file in turn
         ZipInputStream zip = new ZipInputStream(stream);
         ZipEntry entry = zip.getNextEntry();
         while (entry != null) {
@@ -118,6 +126,11 @@ public class OpenDocumentParser extends AbstractParser {
             }
             entry = zip.getNextEntry();
         }
+        
+        // Only now call the end document
+        if(handler.getEndDocumentWasCalled()) {
+           handler.reallyEndDocument();
+        }
     }
 
 }
