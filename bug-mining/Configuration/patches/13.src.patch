diff --git a/src/java/org/apache/commons/configuration/SubsetConfiguration.java b/src/java/org/apache/commons/configuration/SubsetConfiguration.java
index 0225ac58..9ddf8691 100644
--- a/src/java/org/apache/commons/configuration/SubsetConfiguration.java
+++ b/src/java/org/apache/commons/configuration/SubsetConfiguration.java
@@ -236,7 +236,7 @@ public class SubsetConfiguration extends AbstractConfiguration
     /**
      * {@inheritDoc}
      */
-    protected String interpolate(String base)
+    protected Object interpolate(Object base)
     {
         if (delimiter == null && "".equals(prefix))
         {
diff --git a/src/test/org/apache/commons/configuration/TestBaseConfiguration.java b/src/test/org/apache/commons/configuration/TestBaseConfiguration.java
index 97c28b8e..51b219c2 100644
--- a/src/test/org/apache/commons/configuration/TestBaseConfiguration.java
+++ b/src/test/org/apache/commons/configuration/TestBaseConfiguration.java
@@ -661,6 +661,19 @@ public class TestBaseConfiguration extends TestCase
         fail("IllegalStateException should have been thrown for looped property references");
     }
 
+    /**
+     * Tests interpolation when a subset configuration is involved.
+     */
+    public void testInterpolationSubset()
+    {
+        config.addProperty("test.a", new Integer(42));
+        config.addProperty("test.b", "${test.a}");
+        assertEquals("Wrong interpolated value", 42, config.getInt("test.b"));
+        Configuration subset = config.subset("test");
+        assertEquals("Wrong string property", "42", subset.getString("b"));
+        assertEquals("Wrong int property", 42, subset.getInt("b"));
+    }
+
     public void testGetHexadecimalValue()
     {
         config.setProperty("number", "0xFF");
diff --git a/xdocs/changes.xml b/xdocs/changes.xml
index 38c2801d..ab03e46b 100644
--- a/xdocs/changes.xml
+++ b/xdocs/changes.xml
@@ -23,6 +23,10 @@
 
   <body>
     <release version="1.4-dev" date="in SVN">
+      <action dev="oheger" type="update" issue="CONFIGURATION-235">
+        Interpolation of non string values did not work when SubsetConfiguration
+        was involved. This has now been fixed.
+      </action>
       <action dev="oheger" type="update" issue="CONFIGURATION-227">
         The compatibility of ConfigurationDynaBean with other configuration types
         than those that inherit from BaseConfiguration was improved.
