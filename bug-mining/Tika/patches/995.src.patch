diff --git a/CHANGES.txt b/CHANGES.txt
index 1804eb541..b9386c2a4 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -5,6 +5,9 @@ Release 2.0.0 - ???
 
    Other changes
 
+   * Extract xlsx files embedded in OLE objects within PPT and PPTX
+     via Brian McColgan (TIKA-2588).
+
    * Extract files embedded in HTML and javascript inside HTML
      that are stored in the Data URI scheme (TIKA-2563).
 
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java
index d0a1abe54..02665e57d 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java
@@ -487,7 +487,8 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {
                             MediaType mt = getTikaConfig().getDetector().detect(stream, new Metadata());
                             mediaType = mt.toString();
                         }
-                        if (mediaType.equals("application/x-tika-msoffice-embedded; format=comp_obj")) {
+                        if (mediaType.equals("application/x-tika-msoffice-embedded; format=comp_obj")
+                                || mediaType.equals("application/x-tika-msoffice")) {
                             try(NPOIFSFileSystem npoifs = new NPOIFSFileSystem(new CloseShieldInputStream(stream))) {
                                 handleEmbeddedOfficeDoc(npoifs.getRoot(), objID, xhtml);
                             }
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java
index 610ddd925..6fd678e33 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java
@@ -25,6 +25,7 @@ import java.io.InputStream;
 import java.net.URI;
 import java.util.HashMap;
 import java.util.HashSet;
+import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
 import java.util.Set;
@@ -40,6 +41,8 @@ import org.apache.poi.openxml4j.opc.PackageRelationshipTypes;
 import org.apache.poi.openxml4j.opc.TargetMode;
 import org.apache.poi.openxml4j.opc.internal.FileHelper;
 import org.apache.poi.poifs.filesystem.DirectoryNode;
+import org.apache.poi.poifs.filesystem.DocumentEntry;
+import org.apache.poi.poifs.filesystem.Entry;
 import org.apache.poi.poifs.filesystem.NPOIFSFileSystem;
 import org.apache.poi.poifs.filesystem.Ole10Native;
 import org.apache.poi.poifs.filesystem.Ole10NativeException;
@@ -299,15 +302,25 @@ public abstract class AbstractOOXMLExtractor implements OOXMLExtractor {
             DirectoryNode root = fs.getRoot();
             POIFSDocumentType type = POIFSDocumentType.detectType(root);
 
-            if (root.hasEntry("CONTENTS")
-                    && root.hasEntry("\u0001Ole")
-                    && root.hasEntry("\u0001CompObj")) {
+            if (root.hasEntry("\u0001Ole")
+                    && root.hasEntry("\u0001CompObj")
+                    && (
+                            root.hasEntry("CONTENTS") || root.hasEntry("Package")
+                    )) {
                 // TIKA-704: OLE 2.0 embedded non-Office document?
                 //TODO: figure out if the equivalent of OLE 1.0's
                 //getCommand() and getFileName() exist for OLE 2.0 to populate
                 //TikaCoreProperties.ORIGINAL_RESOURCE_NAME
-                stream = TikaInputStream.get(
-                        fs.createDocumentInputStream("CONTENTS"));
+                if (root.hasEntry("CONTENTS")) {
+                    stream = TikaInputStream.get(
+                            fs.createDocumentInputStream("CONTENTS"));
+                } else if (root.hasEntry("Package")) {
+                    //TIKA-2588
+                    stream = TikaInputStream.get(
+                            fs.createDocumentInputStream("Package"));
+                } else {
+                    throw new IllegalStateException("Shouldn't ever arrive here; please open a ticket on our jira");
+                }
                 if (embeddedExtractor.shouldParseEmbedded(metadata)) {
                     embeddedExtractor.parseEmbedded(
                             stream, new EmbeddedContentHandler(handler),
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/PowerPointParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/PowerPointParserTest.java
index 4ad6bd7e5..2d1ea3169 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/PowerPointParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/PowerPointParserTest.java
@@ -343,4 +343,17 @@ public class PowerPointParserTest extends TikaTest {
         String content = getXML("testPPT_groups.ppt").xml;
         assertContains("href=\"http://tika.apache.org", content);
     }
+
+    @Test
+    public void testEmbeddedXLSInOLEObject() throws Exception {
+        List<Metadata> metadataList = getRecursiveMetadata("testPPT_oleWorkbook.ppt");
+        debug(metadataList);
+        assertEquals(3, metadataList.size());
+        Metadata xlsx = metadataList.get(1);
+        assertContains("<h1>Sheet1</h1>", xlsx.get(RecursiveParserWrapper.TIKA_CONTENT));
+        assertContains("<td>1</td>", xlsx.get(RecursiveParserWrapper.TIKA_CONTENT));
+        assertEquals("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
+                xlsx.get(Metadata.CONTENT_TYPE));
+
+    }
 }
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParserTest.java
index f860e0a7d..a235278f8 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParserTest.java
@@ -1804,6 +1804,17 @@ public class OOXMLParserTest extends TikaTest {
         assertEquals("image/png", metadataList.get(2).get(Metadata.CONTENT_TYPE));
         assertEquals("image/jpeg", metadataList.get(3).get(Metadata.CONTENT_TYPE));
     }
+
+    @Test
+    public void testEmbeddedXLSInOLEObject() throws Exception {
+        List<Metadata> metadataList = getRecursiveMetadata("testPPT_oleWorkbook.pptx");
+        assertEquals(4, metadataList.size());
+        Metadata xlsx = metadataList.get(2);
+        assertContains("<h1>Sheet1</h1>", xlsx.get(RecursiveParserWrapper.TIKA_CONTENT));
+        assertContains("<td>1</td>", xlsx.get(RecursiveParserWrapper.TIKA_CONTENT));
+        assertEquals("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
+                xlsx.get(Metadata.CONTENT_TYPE));
+    }
 }
 
 
diff --git a/tika-parsers/src/test/resources/test-documents/testPPT_oleWorkbook.ppt b/tika-parsers/src/test/resources/test-documents/testPPT_oleWorkbook.ppt
new file mode 100644
index 000000000..b0c9cc8af
Binary files /dev/null and b/tika-parsers/src/test/resources/test-documents/testPPT_oleWorkbook.ppt differ
diff --git a/tika-parsers/src/test/resources/test-documents/testPPT_oleWorkbook.pptx b/tika-parsers/src/test/resources/test-documents/testPPT_oleWorkbook.pptx
new file mode 100644
index 000000000..5d7096afa
Binary files /dev/null and b/tika-parsers/src/test/resources/test-documents/testPPT_oleWorkbook.pptx differ
