diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java
index 65361f033..00145d2ff 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java
@@ -16,6 +16,8 @@
  */
 package org.apache.tika.parser.odf;
 
+import static java.nio.charset.StandardCharsets.UTF_8;
+
 import java.io.IOException;
 import java.io.InputStream;
 import java.util.Arrays;
@@ -41,8 +43,6 @@ import org.xml.sax.ContentHandler;
 import org.xml.sax.SAXException;
 import org.xml.sax.helpers.DefaultHandler;
 
-import static java.nio.charset.StandardCharsets.UTF_8;
-
 /**
  * OpenOffice parser
  */
@@ -146,28 +146,20 @@ public class OpenDocumentParser extends AbstractParser {
         EndDocumentShieldingContentHandler handler =
                 new EndDocumentShieldingContentHandler(xhtml);
 
-        // If we can, process the metadata first, then the
-        //  rest of the file afterwards
-        // Only possible to guarantee that when opened from a file not a stream
-        ZipEntry entry = null;
         if (zipFile != null) {
-            entry = zipFile.getEntry(META_NAME);
-            handleZipEntry(entry, zipFile.getInputStream(entry), metadata, context, handler);
-
-            Enumeration<? extends ZipEntry> entries = zipFile.entries();
-            while (entries.hasMoreElements()) {
-                entry = entries.nextElement();
-                if (!META_NAME.equals(entry.getName())) {
-                    handleZipEntry(entry, zipFile.getInputStream(entry), metadata, context, handler);
-                }
+            try {
+                handleZipFile(zipFile, metadata, context, handler);
+            } finally {
+                //Do we want to close silently == catch an exception here?
+                zipFile.close();
             }
-            zipFile.close();
         } else {
-            do {
-                entry = zipStream.getNextEntry();
-                handleZipEntry(entry, zipStream, metadata, context, handler);
-            } while (entry != null);
-            zipStream.close();
+            try {
+                handleZipStream(zipStream, metadata, context, handler);
+            } finally {
+                //Do we want to close silently == catch an exception here?
+                zipStream.close();
+            }
         }
 
         // Only now call the end document
@@ -176,6 +168,34 @@ public class OpenDocumentParser extends AbstractParser {
         }
     }
 
+    private void handleZipStream(ZipInputStream zipStream, Metadata metadata, ParseContext context, EndDocumentShieldingContentHandler handler) throws IOException, TikaException, SAXException {
+        ZipEntry entry = zipStream.getNextEntry();
+        while (entry != null) {
+            handleZipEntry(entry, zipStream, metadata, context, handler);
+            entry = zipStream.getNextEntry();
+        }
+    }
+
+    private void handleZipFile(ZipFile zipFile, Metadata metadata,
+                               ParseContext context, EndDocumentShieldingContentHandler handler)
+            throws IOException, TikaException, SAXException {
+        // If we can, process the metadata first, then the
+        //  rest of the file afterwards (TIKA-1353)
+        // Only possible to guarantee that when opened from a file not a stream
+
+        ZipEntry entry = zipFile.getEntry(META_NAME);
+        if (entry != null) {
+            handleZipEntry(entry, zipFile.getInputStream(entry), metadata, context, handler);
+        }
+
+        Enumeration<? extends ZipEntry> entries = zipFile.entries();
+        while (entries.hasMoreElements()) {
+            entry = entries.nextElement();
+            if (!META_NAME.equals(entry.getName())) {
+                handleZipEntry(entry, zipFile.getInputStream(entry), metadata, context, handler);
+            }
+        }
+    }
     private void handleZipEntry(ZipEntry entry, InputStream zip, Metadata metadata,
                                 ParseContext context, EndDocumentShieldingContentHandler handler)
             throws IOException, SAXException, TikaException {
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/odf/ODFParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/odf/ODFParserTest.java
index 9ef5d4431..d20f3e991 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/odf/ODFParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/odf/ODFParserTest.java
@@ -137,7 +137,7 @@ public class ODFParserTest extends TikaTest {
    }
 
    /**
-    * Similar to {@link #testXMLParser()}, but using a different
+    * Similar to {@link #testOO2()}, but using a different
     *  OO2 file with different metadata in it
     */
     @Test
@@ -197,7 +197,7 @@ public class ODFParserTest extends TikaTest {
    }
 
    /**
-    * Similar to {@link #testXMLParser()}, but using an OO3 file
+    * Similar to {@link #testOO2()} )}, but using an OO3 file
     */
     @Test
    public void testOO3Metadata() throws Exception {
@@ -375,4 +375,10 @@ public class ODFParserTest extends TikaTest {
             assertContains("La page dâ€™accueil permet de faire une recherche simple", content);
         }
     }
+
+    @Test  //TIKA-1916
+    public void testMissingMeta() throws Exception {
+        String xml = getXML("testODTNoMeta.odt").xml;
+        assertContains("Test text", xml);
+    }
 }
diff --git a/tika-parsers/src/test/resources/test-documents/testODTNoMeta.odt b/tika-parsers/src/test/resources/test-documents/testODTNoMeta.odt
new file mode 100644
index 000000000..220c5b968
Binary files /dev/null and b/tika-parsers/src/test/resources/test-documents/testODTNoMeta.odt differ
