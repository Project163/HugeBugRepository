diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/BoilerpipeContentHandler.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/BoilerpipeContentHandler.java
index 69efec252..8d57e6cbb 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/html/BoilerpipeContentHandler.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/html/BoilerpipeContentHandler.java
@@ -21,8 +21,10 @@ import java.io.Writer;
 import org.apache.tika.metadata.Metadata;
 import org.apache.tika.sax.WriteOutContentHandler;
 import org.apache.tika.sax.XHTMLContentHandler;
+import org.xml.sax.Attributes;
 import org.xml.sax.ContentHandler;
 import org.xml.sax.SAXException;
+import org.xml.sax.helpers.AttributesImpl;
 
 import de.l3s.boilerpipe.BoilerpipeExtractor;
 import de.l3s.boilerpipe.BoilerpipeProcessingException;
@@ -96,11 +98,28 @@ public class BoilerpipeContentHandler extends BoilerpipeHTMLContentHandler {
             throw new SAXException(e);
         }
         
+        Attributes emptyAttrs = new AttributesImpl();
+
         delegate.startDocument();
+        delegate.startPrefixMapping("", XHTMLContentHandler.XHTML);
+
+        delegate.startElement(XHTMLContentHandler.XHTML, "html", "html", emptyAttrs);
+        delegate.startElement(XHTMLContentHandler.XHTML, "head", "head", emptyAttrs);
+        delegate.startElement(XHTMLContentHandler.XHTML, "title", "title", emptyAttrs);
+        
+        if (td.getTitle() != null) {
+            char[] titleChars = td.getTitle().toCharArray();
+            delegate.characters(titleChars, 0, titleChars.length);
+        }
         
+        delegate.endElement(XHTMLContentHandler.XHTML, "title", "title");
+        delegate.endElement(XHTMLContentHandler.XHTML, "head", "head");
+        
+        delegate.startElement(XHTMLContentHandler.XHTML, "body", "body", emptyAttrs);
+
         for (TextBlock block : td.getTextBlocks()) {
             if (block.isContent()) {
-                delegate.startElement(XHTMLContentHandler.XHTML, "p", "p", null);
+                delegate.startElement(XHTMLContentHandler.XHTML, "p", "p", emptyAttrs);
                 char[] chars = block.getText().toCharArray();
                 delegate.characters(chars, 0, chars.length);
                 delegate.endElement(XHTMLContentHandler.XHTML, "p", "p");
@@ -108,6 +127,11 @@ public class BoilerpipeContentHandler extends BoilerpipeHTMLContentHandler {
             }
         }
         
+        delegate.endElement(XHTMLContentHandler.XHTML, "body", "body");
+        delegate.endElement(XHTMLContentHandler.XHTML, "html", "html");
+        
+        delegate.endPrefixMapping("");
+
         delegate.endDocument();
     }
 }
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/html/HtmlParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/html/HtmlParserTest.java
index f091e61f1..54dffea34 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/html/HtmlParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/html/HtmlParserTest.java
@@ -554,6 +554,31 @@ public class HtmlParserTest extends TestCase {
         assertFalse(Pattern.matches("(?s).*<body>.*$", result));
     }
 
+    /**
+     * Test case for TIKA-480: fix NPE when using BodyContentHandler or HtmlTransformer
+     * as delegate for BoilerpipeContentHandler
+     * @see <a href="https://issues.apache.org/jira/browse/TIKA-480">TIKA-480</a>
+     */
+    public void testBoilerplateDelegation() throws Exception {
+        String path = "/test-documents/boilerplate.html";
+        
+        Metadata metadata = new Metadata();
+        StringWriter sw = new StringWriter();
+        new HtmlParser().parse(
+                HtmlParserTest.class.getResourceAsStream(path),
+                makeHtmlTransformer(sw),  metadata, new ParseContext());
+        
+        String content = sw.toString();
+        
+        // Should have <html>, <head>, <title>, <body> elements
+        assertTrue(Pattern.matches("(?s).*<html xmlns=\"http://www.w3.org/1999/xhtml\">.*</html>.*$", content));
+        assertTrue(Pattern.matches("(?s).*<head>.*</head>.*$", content));
+        assertTrue(Pattern.matches("(?s).*<title>Title</title>.*$", content));
+        assertTrue(Pattern.matches("(?s).*<body>.*</body>.*$", content));
+    }
+    
+    
+
     /**
      * Create ContentHandler that transforms SAX events into textual HTML output,
      * and writes it out to <writer> - typically this is a StringWriter.
