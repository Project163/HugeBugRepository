diff --git a/src/share/org/apache/commons/validator/UrlValidator.java b/src/share/org/apache/commons/validator/UrlValidator.java
index 86d1d882..a0f34f6e 100644
--- a/src/share/org/apache/commons/validator/UrlValidator.java
+++ b/src/share/org/apache/commons/validator/UrlValidator.java
@@ -355,7 +355,16 @@ public class UrlValidator implements Serializable {
 
 //rightmost hostname will never start with a digit.
         if (hostname) {
-            String[] domainSegment = new String[10];
+            // LOW-TECH FIX FOR VALIDATOR-202
+            // TODO: Rewrite to use ArrayList and .add semantics: see VALIDATOR-203
+            char[] chars = hostIP.toCharArray();
+            int size = 1;
+            for(int i=0; i<chars.length; i++) {
+                if(chars[i] == '.') {
+                    size++;
+                }
+            }
+            String[] domainSegment = new String[size];
             boolean match = true;
             int segmentCount = 0;
             int segmentLength = 0;
diff --git a/src/test/org/apache/commons/validator/UrlTest.java b/src/test/org/apache/commons/validator/UrlTest.java
index c2113054..ebd4e8b9 100644
--- a/src/test/org/apache/commons/validator/UrlTest.java
+++ b/src/test/org/apache/commons/validator/UrlTest.java
@@ -135,6 +135,12 @@ public class UrlTest extends TestCase {
       }
    }
 
+   public void testValidator202() {
+       String[] schemes = {"http","https"};
+       UrlValidator urlValidator = new UrlValidator(schemes, UrlValidator.NO_FRAGMENTS);
+       urlValidator.isValid("http://www.logoworks.comwww.logoworks.comwww.logoworks.comwww.logoworks.comwww.logoworks.comwww.logoworks.comwww.logoworks.comwww.logoworks.comwww.logoworks.comwww.logoworks.comwww.logoworks.comwww.logoworks.comwww.logoworks.comwww.logoworks.comwww.logoworks.comwww.logoworks.comwww.logoworks.comwww.logoworks.comwww.logoworks.comwww.logoworks.comwww.logoworks.comwww.logoworks.comwww.logoworks.comwww.logoworks.comwww.logoworks.comwww.logoworks.comwww.logoworks.comwww.logoworks.comwww.logoworks.comwww.log");
+   }
+
    static boolean incrementTestPartsIndex(int[] testPartsIndex, Object[] testParts) {
       boolean carry = true;  //add 1 to lowest order part.
       boolean maxIndex = true;
@@ -278,4 +284,4 @@ public class UrlTest extends TestCase {
                             new TestPair("telnet", false)};
 
 
-}
\ No newline at end of file
+}
