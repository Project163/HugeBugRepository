diff --git a/CHANGES.txt b/CHANGES.txt
index b5b8f2f2b..f770182e9 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -1,5 +1,8 @@
 Release 1.15.1 - ??/??/????
 
+  * Extract text from diagrams in .docx, .pptx, .xlsx and .xlsb
+    (TIKA-1945).
+
   * Fix bug in tika-server that led to an attempt to close the
     input stream twice (TIKA-2384).
 
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java
index ff586baf6..67c5f15d9 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java
@@ -56,7 +56,9 @@ import org.apache.tika.parser.microsoft.OfficeParser;
 import org.apache.tika.parser.microsoft.OfficeParser.POIFSDocumentType;
 import org.apache.tika.parser.microsoft.OfficeParserConfig;
 import org.apache.tika.sax.EmbeddedContentHandler;
+import org.apache.tika.sax.OfflineContentHandler;
 import org.apache.tika.sax.XHTMLContentHandler;
+import org.apache.tika.utils.ExceptionUtils;
 import org.apache.xmlbeans.XmlException;
 import org.xml.sax.ContentHandler;
 import org.xml.sax.SAXException;
@@ -80,6 +82,8 @@ public abstract class AbstractOOXMLExtractor implements OOXMLExtractor {
     static final String RELATION_PACKAGE = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/package";
     static final String RELATION_MACRO = "http://schemas.microsoft.com/office/2006/relationships/vbaProject";
     static final String RELATION_OFFICE_DOCUMENT = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument";
+    static final String RELATION_DIAGRAM_DATA = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/diagramData";
+
     private static final String TYPE_OLE_OBJECT =
             "application/vnd.openxmlformats-officedocument.oleObject";
 
@@ -87,7 +91,8 @@ public abstract class AbstractOOXMLExtractor implements OOXMLExtractor {
             RELATION_AUDIO,
             RELATION_IMAGE,
             RELATION_PACKAGE,
-            RELATION_OFFICE_DOCUMENT
+            RELATION_OFFICE_DOCUMENT,
+            RELATION_DIAGRAM_DATA
     };
 
 
@@ -100,7 +105,7 @@ public abstract class AbstractOOXMLExtractor implements OOXMLExtractor {
         this.context = context;
         this.extractor = extractor;
         embeddedExtractor = EmbeddedDocumentUtil.getEmbeddedDocumentExtractor(context);
-        
+
         // This has already been set by OOXMLParser's call to configure()
         // We can rely on this being non-null.
         this.config = context.get(OfficeParserConfig.class);
@@ -460,4 +465,53 @@ public abstract class AbstractOOXMLExtractor implements OOXMLExtractor {
         }
         return linkedRelationships;
     }
+
+    /**
+     * This should handle the comments, master, notes, with the streaming "general docx/pptx handler"
+     *
+     * @param contentType
+     * @param xhtmlClassLabel
+     * @param parentPart
+     * @param contentHandler
+     */
+    void handleGeneralTextContainingPart(String contentType, String xhtmlClassLabel,
+                                         PackagePart parentPart, Metadata parentMetadata,
+                                         ContentHandler contentHandler) throws SAXException {
+
+        PackageRelationshipCollection relatedPartPRC = null;
+
+        try {
+            relatedPartPRC = parentPart.getRelationshipsByType(contentType);
+        } catch (InvalidFormatException e) {
+            parentMetadata.add(TikaCoreProperties.TIKA_META_EXCEPTION_WARNING,
+                    ExceptionUtils.getStackTrace(e));
+        }
+        if (relatedPartPRC != null && relatedPartPRC.size() > 0) {
+            AttributesImpl attributes = new AttributesImpl();
+
+            attributes.addAttribute("", "class", "class", "CDATA", xhtmlClassLabel);
+            contentHandler.startElement("", "div", "div", attributes);
+            for (int i = 0; i < relatedPartPRC.size(); i++) {
+                PackageRelationship relatedPartPackageRelationship = relatedPartPRC.getRelationship(i);
+                try {
+                    PackagePart relatedPartPart = parentPart.getRelatedPart(relatedPartPackageRelationship);
+                    try (InputStream stream = relatedPartPart.getInputStream()) {
+                        context.getSAXParser().parse(stream,
+                                new OfflineContentHandler(new EmbeddedContentHandler(contentHandler)));
+
+                    } catch (IOException|TikaException e) {
+                        parentMetadata.add(TikaCoreProperties.TIKA_META_EXCEPTION_WARNING,
+                                ExceptionUtils.getStackTrace(e));
+                    }
+
+                } catch (InvalidFormatException e) {
+                    parentMetadata.add(TikaCoreProperties.TIKA_META_EXCEPTION_WARNING,
+                            ExceptionUtils.getStackTrace(e));
+                }
+            }
+            contentHandler.endElement("", "div", "div");
+        }
+
+    }
+
 }
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java
index f4366ccae..63fd60fd9 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java
@@ -127,7 +127,7 @@ public class OOXMLExtractorFactory {
                 extractor = new XSLFPowerPointExtractorDecorator(
                         context, (org.apache.poi.xslf.extractor.XSLFPowerPointExtractor) poiExtractor);
             } else if (document instanceof XWPFDocument) {
-                extractor = new XWPFWordExtractorDecorator(
+                extractor = new XWPFWordExtractorDecorator( metadata,
                         context, (XWPFWordExtractor) poiExtractor);
             } else {
                 extractor = new POIXMLTextExtractorDecorator(context, poiExtractor);
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/SXSLFPowerPointExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/SXSLFPowerPointExtractorDecorator.java
index 76d7bf01c..69526f9cc 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/SXSLFPowerPointExtractorDecorator.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/SXSLFPowerPointExtractorDecorator.java
@@ -47,7 +47,6 @@ import org.apache.tika.utils.ExceptionUtils;
 import org.xml.sax.Attributes;
 import org.xml.sax.ContentHandler;
 import org.xml.sax.SAXException;
-import org.xml.sax.helpers.AttributesImpl;
 import org.xml.sax.helpers.DefaultHandler;
 
 /**
@@ -120,15 +119,17 @@ public class SXSLFPowerPointExtractorDecorator extends AbstractOOXMLExtractor {
             }
         }
 
-        handleBasicRelatedParts(XSLFRelation.SLIDE_MASTER.getRelation(),
+        handleGeneralTextContainingPart(XSLFRelation.SLIDE_MASTER.getRelation(),
                 "slide-master",
                 mainDocument,
+                metadata,
                 new PlaceHolderSkipper(new OOXMLWordAndPowerPointTextHandler(
                         new OOXMLTikaBodyPartHandler(xhtml), new HashMap<String, String>())));
 
-        handleBasicRelatedParts(HANDOUT_MASTER,
+        handleGeneralTextContainingPart(HANDOUT_MASTER,
                 "slide-handout-master",
                 mainDocument,
+                metadata,
                 new OOXMLWordAndPowerPointTextHandler(
                         new OOXMLTikaBodyPartHandler(xhtml), new HashMap<String, String>())
         );
@@ -149,7 +150,7 @@ public class SXSLFPowerPointExtractorDecorator extends AbstractOOXMLExtractor {
         for (int i = 0; i < prc.size(); i++) {
             PackagePart commentAuthorsPart = null;
             try {
-                commentAuthorsPart = commentAuthorsPart = mainDocument.getRelatedPart(prc.getRelationship(i));
+                commentAuthorsPart = mainDocument.getRelatedPart(prc.getRelationship(i));
             } catch (InvalidFormatException e) {
                 metadata.add(TikaCoreProperties.TIKA_META_EXCEPTION_WARNING,
                         ExceptionUtils.getStackTrace(e));
@@ -190,72 +191,35 @@ public class SXSLFPowerPointExtractorDecorator extends AbstractOOXMLExtractor {
         xhtml.endElement("div");
 
 
-        handleBasicRelatedParts(XSLFRelation.SLIDE_LAYOUT.getRelation(),
+        handleGeneralTextContainingPart(XSLFRelation.SLIDE_LAYOUT.getRelation(),
                 "slide-master-content", slidePart,
+                metadata,
                 new PlaceHolderSkipper(new OOXMLWordAndPowerPointTextHandler(
                         new OOXMLTikaBodyPartHandler(xhtml), linkedRelationships))
                 );
 
-        handleBasicRelatedParts(XSLFRelation.NOTES.getRelation(),
+        handleGeneralTextContainingPart(XSLFRelation.NOTES.getRelation(),
                 "slide-notes", slidePart,
+                metadata,
                 new OOXMLWordAndPowerPointTextHandler(
                         new OOXMLTikaBodyPartHandler(xhtml), linkedRelationships));
 
-        handleBasicRelatedParts(XSLFRelation.NOTES_MASTER.getRelation(),
+        handleGeneralTextContainingPart(XSLFRelation.NOTES_MASTER.getRelation(),
                 "slide-notes-master", slidePart,
+                metadata,
                 new OOXMLWordAndPowerPointTextHandler(
                         new OOXMLTikaBodyPartHandler(xhtml), linkedRelationships));
 
-        handleBasicRelatedParts(XSLFRelation.COMMENTS.getRelation(),
+        handleGeneralTextContainingPart(XSLFRelation.COMMENTS.getRelation(),
                 null, slidePart,
+                metadata,
                 new XSLFCommentsHandler(xhtml));
 
-    }
-
-    /**
-     * This should handle the comments, master, notes, etc
-     *
-     * @param contentType
-     * @param xhtmlClassLabel
-     * @param parentPart
-     * @param contentHandler
-     */
-    private void handleBasicRelatedParts(String contentType, String xhtmlClassLabel,
-                                         PackagePart parentPart, ContentHandler contentHandler) throws SAXException {
-
-        PackageRelationshipCollection relatedPartPRC = null;
-
-        try {
-            relatedPartPRC = parentPart.getRelationshipsByType(contentType);
-        } catch (InvalidFormatException e) {
-            metadata.add(TikaCoreProperties.TIKA_META_EXCEPTION_WARNING,
-                    ExceptionUtils.getStackTrace(e));
-        }
-        if (relatedPartPRC != null && relatedPartPRC.size() > 0) {
-            AttributesImpl attributes = new AttributesImpl();
-
-            attributes.addAttribute("", "class", "class", "CDATA", xhtmlClassLabel);
-            contentHandler.startElement("", "div", "div", attributes);
-            for (int i = 0; i < relatedPartPRC.size(); i++) {
-                PackageRelationship relatedPartPackageRelationship = relatedPartPRC.getRelationship(i);
-                try {
-                    PackagePart relatedPartPart = parentPart.getRelatedPart(relatedPartPackageRelationship);
-                    try (InputStream stream = relatedPartPart.getInputStream()) {
-                        context.getSAXParser().parse(stream,
-                                new OfflineContentHandler(new EmbeddedContentHandler(contentHandler)));
-
-                    } catch (IOException|TikaException e) {
-                        metadata.add(TikaCoreProperties.TIKA_META_EXCEPTION_WARNING,
-                                ExceptionUtils.getStackTrace(e));
-                    }
-
-                } catch (InvalidFormatException e) {
-                    metadata.add(TikaCoreProperties.TIKA_META_EXCEPTION_WARNING,
-                            ExceptionUtils.getStackTrace(e));
-                }
-            }
-            contentHandler.endElement("", "div", "div");
-        }
+        handleGeneralTextContainingPart(AbstractOOXMLExtractor.RELATION_DIAGRAM_DATA,
+                "diagram-data", slidePart,
+                metadata,
+                new OOXMLWordAndPowerPointTextHandler(
+                        new OOXMLTikaBodyPartHandler(xhtml), linkedRelationships));
 
     }
 
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/SXWPFWordExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/SXWPFWordExtractorDecorator.java
index 0ae497750..3525794b2 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/SXWPFWordExtractorDecorator.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/SXWPFWordExtractorDecorator.java
@@ -152,14 +152,15 @@ public class SXWPFWordExtractorDecorator extends AbstractOOXMLExtractor {
                     ExceptionUtils.getStackTrace(e));
         }
         //for now, just dump other components at end
-        for (XWPFRelation rel : new XWPFRelation[]{
-                XWPFRelation.FOOTNOTE,
-                XWPFRelation.COMMENT,
-                XWPFRelation.FOOTER,
-                XWPFRelation.ENDNOTE
+        for (String rel : new String[]{
+                XWPFRelation.FOOTNOTE.getRelation(),
+                XWPFRelation.COMMENT.getRelation(),
+                XWPFRelation.FOOTER.getRelation(),
+                XWPFRelation.ENDNOTE.getRelation(),
+                AbstractOOXMLExtractor.RELATION_DIAGRAM_DATA
         }) {
             try {
-                PackageRelationshipCollection prc = documentPart.getRelationshipsByType(rel.getRelation());
+                PackageRelationshipCollection prc = documentPart.getRelationshipsByType(rel);
                 if (prc != null) {
                     for (int i = 0; i < prc.size(); i++) {
                         PackagePart packagePart = documentPart.getRelatedPart(prc.getRelationship(i));
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java
index d2bacb3f2..159ec0039 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java
@@ -19,6 +19,7 @@ package org.apache.tika.parser.microsoft.ooxml;
 import javax.xml.namespace.QName;
 import java.io.IOException;
 import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.List;
 
 import org.apache.poi.common.usermodel.Hyperlink;
@@ -31,8 +32,29 @@ import org.apache.poi.openxml4j.opc.PackagingURIHelper;
 import org.apache.poi.openxml4j.opc.TargetMode;
 import org.apache.poi.sl.usermodel.Placeholder;
 import org.apache.poi.xslf.extractor.XSLFPowerPointExtractor;
-import org.apache.poi.xslf.usermodel.*;
+import org.apache.poi.xslf.usermodel.XMLSlideShow;
+import org.apache.poi.xslf.usermodel.XSLFCommentAuthors;
+import org.apache.poi.xslf.usermodel.XSLFComments;
+import org.apache.poi.xslf.usermodel.XSLFGraphicFrame;
+import org.apache.poi.xslf.usermodel.XSLFGroupShape;
+import org.apache.poi.xslf.usermodel.XSLFHyperlink;
+import org.apache.poi.xslf.usermodel.XSLFNotes;
+import org.apache.poi.xslf.usermodel.XSLFNotesMaster;
+import org.apache.poi.xslf.usermodel.XSLFPictureShape;
+import org.apache.poi.xslf.usermodel.XSLFRelation;
+import org.apache.poi.xslf.usermodel.XSLFShape;
+import org.apache.poi.xslf.usermodel.XSLFSheet;
+import org.apache.poi.xslf.usermodel.XSLFSlide;
+import org.apache.poi.xslf.usermodel.XSLFSlideLayout;
+import org.apache.poi.xslf.usermodel.XSLFSlideShow;
+import org.apache.poi.xslf.usermodel.XSLFTable;
+import org.apache.poi.xslf.usermodel.XSLFTableCell;
+import org.apache.poi.xslf.usermodel.XSLFTableRow;
+import org.apache.poi.xslf.usermodel.XSLFTextParagraph;
+import org.apache.poi.xslf.usermodel.XSLFTextRun;
+import org.apache.poi.xslf.usermodel.XSLFTextShape;
 import org.apache.tika.exception.TikaException;
+import org.apache.tika.metadata.Metadata;
 import org.apache.tika.parser.ParseContext;
 import org.apache.tika.sax.XHTMLContentHandler;
 import org.apache.xmlbeans.XmlException;
@@ -49,9 +71,21 @@ public class XSLFPowerPointExtractorDecorator extends AbstractOOXMLExtractor {
 
     private final static String HANDOUT_MASTER = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/handoutMaster";
 
+    private Metadata metadata;
 
-    public XSLFPowerPointExtractorDecorator(ParseContext context, XSLFPowerPointExtractor extractor) {
+    public XSLFPowerPointExtractorDecorator(Metadata metadata, ParseContext context, XSLFPowerPointExtractor extractor) {
         super(context, extractor);
+        this.metadata = metadata;
+    }
+
+    /**
+     * use {@link XSLFPowerPointExtractorDecorator#XSLFPowerPointExtractorDecorator(Metadata, ParseContext, XSLFPowerPointExtractor)}
+     * @param context
+     * @param extractor
+     */
+    @Deprecated
+    public XSLFPowerPointExtractorDecorator(ParseContext context, XSLFPowerPointExtractor extractor) {
+        this(new Metadata(),context, extractor);
     }
 
     /**
@@ -133,6 +167,18 @@ public class XSLFPowerPointExtractorDecorator extends AbstractOOXMLExtractor {
                     xhtml.endElement("p");
                 }
             }
+            //now dump diagram data
+            handleGeneralTextContainingPart(
+                    RELATION_DIAGRAM_DATA,
+                    "diagram-data",
+                    slide.getPackagePart(),
+                    metadata,
+                    new OOXMLWordAndPowerPointTextHandler(
+                            new OOXMLTikaBodyPartHandler(xhtml),
+                            new HashMap<String, String>()//empty
+                    )
+            );
+
         }
     }
 
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java
index 374fcb666..13eb6b432 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFBExcelExtractorDecorator.java
@@ -38,6 +38,7 @@ import org.apache.poi.xssf.binary.XSSFBStylesTable;
 import org.apache.poi.xssf.eventusermodel.XSSFBReader;
 import org.apache.poi.xssf.eventusermodel.XSSFSheetXMLHandler.SheetContentsHandler;
 import org.apache.poi.xssf.extractor.XSSFBEventBasedExcelExtractor;
+import org.apache.poi.xssf.usermodel.XSSFDrawing;
 import org.apache.poi.xssf.usermodel.XSSFRelation;
 import org.apache.poi.xssf.usermodel.XSSFShape;
 import org.apache.poi.xssf.usermodel.XSSFSimpleShape;
@@ -136,6 +137,7 @@ public class XSSFBExcelExtractorDecorator extends XSSFExcelExtractorDecorator {
                 extractHeaderFooter(footer, xhtml);
             }
             List<XSSFShape> shapes = iter.getShapes();
+
             processShapes(shapes, xhtml);
 
             //for now dump sheet hyperlinks at bottom of page
@@ -148,6 +150,7 @@ public class XSSFBExcelExtractorDecorator extends XSSFExcelExtractorDecorator {
         }
     }
 
+
     @Override
     protected void extractHeaderFooter(String hf, XHTMLContentHandler xhtml)
             throws SAXException {
@@ -180,6 +183,17 @@ public class XSSFBExcelExtractorDecorator extends XSSFExcelExtractorDecorator {
                 }
                 extractHyperLinksFromShape(((XSSFSimpleShape)shape).getCTShape(), xhtml);
             }
+            XSSFDrawing drawing = shape.getDrawing();
+            if (drawing != null) {
+                //dump diagram data
+                handleGeneralTextContainingPart(
+                        AbstractOOXMLExtractor.RELATION_DIAGRAM_DATA,
+                        "diagram-data",
+                        drawing.getPackagePart(),
+                        metadata,
+                        xhtml
+                );
+            }
         }
     }
 
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java
index de45e284e..ccfaf6f1f 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java
@@ -46,6 +46,7 @@ import org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor;
 import org.apache.poi.xssf.model.CommentsTable;
 import org.apache.poi.xssf.model.StylesTable;
 import org.apache.poi.xssf.usermodel.XSSFComment;
+import org.apache.poi.xssf.usermodel.XSSFDrawing;
 import org.apache.poi.xssf.usermodel.XSSFRelation;
 import org.apache.poi.xssf.usermodel.XSSFShape;
 import org.apache.poi.xssf.usermodel.XSSFSimpleShape;
@@ -254,6 +255,17 @@ public class XSSFExcelExtractorDecorator extends AbstractOOXMLExtractor {
                 }
                 extractHyperLinksFromShape(((XSSFSimpleShape)shape).getCTShape(), xhtml);
             }
+            XSSFDrawing drawing = shape.getDrawing();
+            if (drawing != null) {
+                //dump diagram data
+                handleGeneralTextContainingPart(
+                        AbstractOOXMLExtractor.RELATION_DIAGRAM_DATA,
+                        "diagram-data",
+                        drawing.getPackagePart(),
+                        metadata,
+                        xhtml
+                );
+            }
         }
     }
 
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java
index 39a72c6a2..7e658a390 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java
@@ -19,6 +19,7 @@ package org.apache.tika.parser.microsoft.ooxml;
 import javax.xml.namespace.QName;
 import java.io.IOException;
 import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.List;
 
 import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
@@ -49,6 +50,7 @@ import org.apache.poi.xwpf.usermodel.XWPFStyles;
 import org.apache.poi.xwpf.usermodel.XWPFTable;
 import org.apache.poi.xwpf.usermodel.XWPFTableCell;
 import org.apache.poi.xwpf.usermodel.XWPFTableRow;
+import org.apache.tika.metadata.Metadata;
 import org.apache.tika.parser.ParseContext;
 import org.apache.tika.parser.microsoft.WordExtractor;
 import org.apache.tika.parser.microsoft.WordExtractor.TagAndStyle;
@@ -75,20 +77,32 @@ public class XWPFWordExtractorDecorator extends AbstractOOXMLExtractor {
             XWPFRelation.FOOTER.getRelation(),
             XWPFRelation.FOOTNOTE.getRelation(),
             "http://schemas.openxmlformats.org/officeDocument/2006/relationships/endnotes",
-            "http://schemas.openxmlformats.org/officeDocument/2006/relationships/comments"
+            "http://schemas.openxmlformats.org/officeDocument/2006/relationships/comments",
+            AbstractOOXMLExtractor.RELATION_DIAGRAM_DATA
     };
 
 
     private XWPFDocument document;
     private XWPFStyles styles;
+    private Metadata metadata;
 
-    public XWPFWordExtractorDecorator(ParseContext context, XWPFWordExtractor extractor) {
+    public XWPFWordExtractorDecorator(Metadata metadata, ParseContext context, XWPFWordExtractor extractor) {
         super(context, extractor);
-
+        this.metadata = metadata;
         document = (XWPFDocument) extractor.getDocument();
         styles = document.getStyles();
     }
 
+    /**
+     * @deprecated use {@link XWPFWordExtractorDecorator#XWPFWordExtractorDecorator(Metadata, ParseContext, XWPFWordExtractor)}
+     * @param context
+     * @param extractor
+     */
+    @Deprecated
+    public XWPFWordExtractorDecorator(ParseContext context, XWPFWordExtractor extractor) {
+        this(new Metadata(), context, extractor);
+    }
+
     /**
      * @see org.apache.poi.xwpf.extractor.XWPFWordExtractor#getText()
      */
@@ -105,7 +119,19 @@ public class XWPFWordExtractorDecorator extends AbstractOOXMLExtractor {
         // process text in the order that it occurs in
         extractIBodyText(document, listManager, xhtml);
 
-        // then all document tables
+        //handle the diagram data
+        handleGeneralTextContainingPart(
+                RELATION_DIAGRAM_DATA,
+                "diagram-data",
+                document.getPackagePart(),
+                metadata,
+                new OOXMLWordAndPowerPointTextHandler(
+                        new OOXMLTikaBodyPartHandler(xhtml),
+                        new HashMap<String, String>()//empty
+                )
+        );
+
+        // then all document footers
         if (hfPolicy != null) {
             extractFooters(xhtml, hfPolicy, listManager);
         }
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParserTest.java
index d2ec7b6b1..ee66e5a62 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParserTest.java
@@ -1558,6 +1558,28 @@ public class OOXMLParserTest extends TikaTest {
 
     }
 
+    @Test
+    public void testXLSBDiagramData() throws Exception {
+        assertContains("SmartArt",
+                getXML("testEXCEL_diagramData.xlsb").xml);
+    }
+
+    @Test
+    public void testXLSXDiagramData() throws Exception {
+        assertContains("SmartArt",
+                getXML("testEXCEL_diagramData.xlsx").xml);
+    }
+
+    @Test
+    public void testDOCXDiagramData() throws Exception {
+        assertContains("From here", getXML("testWORD_diagramData.docx").xml);
+    }
+
+    @Test
+    public void testPPTXDiagramData() throws Exception {
+        assertContains("President", getXML("testPPT_diagramData.pptx").xml);
+    }
+
 }
 
 
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/SXSLFExtractorTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/SXSLFExtractorTest.java
index daee2b941..1de2b52d5 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/SXSLFExtractorTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/SXSLFExtractorTest.java
@@ -566,4 +566,9 @@ public class SXSLFExtractorTest extends TikaTest {
         assertContainsAtLeast(parsedBy, metadataList);
 
     }
+
+    @Test
+    public void testDiagramData() throws Exception {
+        assertContains("President", getXML("testPPT_diagramData.pptx", parseContext).xml);
+    }
 }
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/SXWPFExtractorTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/SXWPFExtractorTest.java
index f1e867ad8..8e7ab6d50 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/SXWPFExtractorTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/SXWPFExtractorTest.java
@@ -60,6 +60,7 @@ public class SXWPFExtractorTest extends TikaTest {
         parseContext = new ParseContext();
         OfficeParserConfig officeParserConfig = new OfficeParserConfig();
         officeParserConfig.setUseSAXDocxExtractor(true);
+        officeParserConfig.setUseSAXPptxExtractor(true);
         parseContext.set(OfficeParserConfig.class, officeParserConfig);
 
     }
@@ -796,4 +797,8 @@ public class SXWPFExtractorTest extends TikaTest {
         assertContainsCount("ready to write", content, 2);
     }
 
+    @Test
+    public void testDiagramData() throws Exception {
+        assertContains("From here", getXML("testWORD_diagramData.docx", parseContext).xml);
+    }
 }
diff --git a/tika-parsers/src/test/resources/test-documents/testEXCEL_diagramData.xlsb b/tika-parsers/src/test/resources/test-documents/testEXCEL_diagramData.xlsb
new file mode 100644
index 000000000..aa888b6a6
Binary files /dev/null and b/tika-parsers/src/test/resources/test-documents/testEXCEL_diagramData.xlsb differ
diff --git a/tika-parsers/src/test/resources/test-documents/testEXCEL_diagramData.xlsx b/tika-parsers/src/test/resources/test-documents/testEXCEL_diagramData.xlsx
new file mode 100644
index 000000000..e2b0f2048
Binary files /dev/null and b/tika-parsers/src/test/resources/test-documents/testEXCEL_diagramData.xlsx differ
diff --git a/tika-parsers/src/test/resources/test-documents/testPPT_diagramData.pptx b/tika-parsers/src/test/resources/test-documents/testPPT_diagramData.pptx
new file mode 100644
index 000000000..57140e8e5
Binary files /dev/null and b/tika-parsers/src/test/resources/test-documents/testPPT_diagramData.pptx differ
diff --git a/tika-parsers/src/test/resources/test-documents/testWORD_diagramData.docx b/tika-parsers/src/test/resources/test-documents/testWORD_diagramData.docx
new file mode 100644
index 000000000..bd033a3e9
Binary files /dev/null and b/tika-parsers/src/test/resources/test-documents/testWORD_diagramData.docx differ
