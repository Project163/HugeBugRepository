diff --git a/RELEASE-NOTES.txt b/RELEASE-NOTES.txt
index 0a3ee57..e3a35d1 100644
--- a/RELEASE-NOTES.txt
+++ b/RELEASE-NOTES.txt
@@ -36,7 +36,7 @@ NEW FEATURES:
 
 BUG FIXES:
 
-1.0.3: DAEMON-108, DAEMON-128, DAEMON-139
+1.0.3: DAEMON-108, DAEMON-128, DAEMON-139, DAEMON-143
 
 1.0.2: DAEMON-16, DAEMON-31, DAEMON-40, DAEMON-45, DAEMON-49, DAEMON-60,
        DAEMON-84, DAEMON-90, DAEMON-91, DAEMON-92, DAEMON-93, DAEMON-94,
diff --git a/src/native/nt/procrun/apps/prunsrv/prunsrv.c b/src/native/nt/procrun/apps/prunsrv/prunsrv.c
index d189ad0..19ace19 100644
--- a/src/native/nt/procrun/apps/prunsrv/prunsrv.c
+++ b/src/native/nt/procrun/apps/prunsrv/prunsrv.c
@@ -319,6 +319,8 @@ static void printUsage(LPAPXCMDLINE lpCmdline, BOOL isHelp)
     fwprintf(stderr, L"  //RS[//ServiceName]  Run Service\n");
     fwprintf(stderr, L"  //SS[//ServiceName]  Stop Service\n");
     fwprintf(stderr, L"  //TS[//ServiceName]  Run Service as console application\n");
+    fwprintf(stderr, L"  //PP[//Num Seconds]  Sleep for n Seconds (defaults to 60)\n");
+    fwprintf(stderr, L"  //VS                 Display version\n");
     fwprintf(stderr, L"  Options:\n");
     while (_options[i].szName) {
         fwprintf(stderr, L"  --%s\n", _options[i].szName);
@@ -608,7 +610,7 @@ static BOOL docmdDeleteService(LPAPXCMDLINE lpCmdline)
                     lpCmdline->szApplication);
     }
     else {
-        apxDisplayError(TRUE, NULL, 0, "Unable to delete %S service",
+        apxDisplayError(FALSE, NULL, 0, "Unable to delete %S service",
                         lpCmdline->szApplication);
     }
     apxCloseHandle(hService);
@@ -646,7 +648,7 @@ static BOOL docmdStopService(LPAPXCMDLINE lpCmdline)
 
     }
     else
-        apxDisplayError(TRUE, NULL, 0, "Unable to open %S service",
+        apxDisplayError(FALSE, NULL, 0, "Unable to open %S service",
                         lpCmdline->szApplication);
     apxCloseHandle(hService);
     apxLogWrite(APXLOG_MARK_INFO "Stop service finished.");
@@ -661,13 +663,23 @@ static BOOL docmdUpdateService(LPAPXCMDLINE lpCmdline)
     apxLogWrite(APXLOG_MARK_INFO "Updating service...");
 
     hService = apxCreateService(gPool, SC_MANAGER_CREATE_SERVICE, FALSE);
-    if (IS_INVALID_HANDLE(hService)) {
+    if (IS_INVALID_HANDLE(hService)) {        
         apxLogWrite(APXLOG_MARK_ERROR "Unable to open the Service Manager");
         return FALSE;
     }
     SetLastError(0);
     /* Open the service */
-    if (apxServiceOpen(hService, lpCmdline->szApplication, SERVICE_ALL_ACCESS)) {
+    if (!apxServiceOpen(hService, lpCmdline->szApplication, SERVICE_ALL_ACCESS)) {
+        /* Close the existing manager handler.
+         * It will be reopened inside install.
+         */
+        apxCloseHandle(hService);
+        /* In case service doesn't exist try to install it.
+         * Install will fail if there is no minimum parameters required.
+         */
+        return docmdInstallService(lpCmdline);
+    }
+    else {
         DWORD dwStart = SERVICE_NO_CHANGE;
         DWORD dwType  = SERVICE_NO_CHANGE;
         LPCWSTR su = NULL;
@@ -709,11 +721,6 @@ static BOOL docmdUpdateService(LPAPXCMDLINE lpCmdline)
 
         rv = (rv && saveConfiguration(lpCmdline));
     }
-    else {
-        apxDisplayError(TRUE, NULL, 0, "Unable to open %S service",
-                        lpCmdline->szApplication);
-        rv = FALSE;
-    }
     apxCloseHandle(hService);
     apxLogWrite(APXLOG_MARK_INFO "Update service finished.");
     return rv;
@@ -1360,10 +1367,10 @@ void __cdecl main(int argc, char **argv)
 
     LPAPXCMDLINE lpCmdline;
 
-    if (argc > 1 && strncmp(argv[1], "//PP//", 6) == 0) {
+    if (argc > 1 && strncmp(argv[1], "//PP", 4) == 0) {
         /* Handy sleep routine defaulting to 1 minute */
         DWORD ss = 60;
-        if (argv[1][6]) {
+        if (argv[1][4] && argv[1][5] && argv[1][6]) {
              int us = atoi(argv[1] + 6);
              if (us > 0)
                 ss = (DWORD)us;
@@ -1382,12 +1389,14 @@ void __cdecl main(int argc, char **argv)
         rv = 1;
         goto cleanup;
     }
-    apxCmdlineLoadEnvVars(lpCmdline);
-    if (lpCmdline->dwCmdIndex < 5 &&
-        !loadConfiguration(lpCmdline)) {
-        apxLogWrite(APXLOG_MARK_ERROR "Load configuration failed");
-        rv = 2;
-        goto cleanup;
+    apxCmdlineLoadEnvVars(lpCmdline);    
+    if (lpCmdline->dwCmdIndex < 5) {
+        if (!loadConfiguration(lpCmdline) &&
+            lpCmdline->dwCmdIndex < 4) {
+            apxLogWrite(APXLOG_MARK_ERROR "Load configuration failed");
+            rv = 2;
+            goto cleanup;
+        }
     }
 
     apxLogOpen(gPool, SO_LOGPATH, SO_LOGPREFIX);
@@ -1456,7 +1465,11 @@ void __cdecl main(int argc, char **argv)
     }
 
 cleanup:
-    apxLogWrite(APXLOG_MARK_INFO "Commons Daemon procrun finished.");
+    if (rv)
+        apxLogWrite(APXLOG_MARK_ERROR "Commons Daemon procrun failed "
+                                      "with exit value: %d", rv);
+    else
+        apxLogWrite(APXLOG_MARK_INFO "Commons Daemon procrun finished");
     if (lpCmdline)
         apxCmdlineFree(lpCmdline);
     if (_service_status_handle)
diff --git a/src/native/nt/procrun/src/log.c b/src/native/nt/procrun/src/log.c
index f664a66..e55854d 100644
--- a/src/native/nt/procrun/src/log.c
+++ b/src/native/nt/procrun/src/log.c
@@ -16,6 +16,7 @@
 
 #include "apxwin.h"
 #include "private.h"
+#include <stdio.h>
 
 #define LINE_SEP    "\n"
 #define LOGF_EXT    L".%04d-%02d-%02d.log"
@@ -257,10 +258,7 @@ apxLogWrite(
         if(f != szFile)
             f++;
     }
-    lstrlcpyA(buffer, 1056, _log_level[dwLevel]);
-    if (!dolock)
-        lstrlcatA(buffer, 1056, "\n");
-    szBp = &buffer[lstrlenA(buffer)];
+    szBp = &buffer[0];
     if (!szFormat) {
         FormatMessageA(FORMAT_MESSAGE_FROM_SYSTEM |
                        FORMAT_MESSAGE_IGNORE_INSERTS,
@@ -299,12 +297,14 @@ apxLogWrite(
                           t.wHour, t.wMinute, t.wSecond);
                 WriteFile(lf->hFile, sb, lstrlenA(sb), &wr, NULL);
             }
-            if (f) {
-                wsprintfA(sb, "[%-4d %s] ", dwLine, f);
+            WriteFile(lf->hFile, _log_level[dwLevel],
+                          strlen(_log_level[dwLevel]), &wr, NULL);
+            if (f && lf->dwLogLevel == APXLOG_LEVEL_DEBUG) {
+                wsprintfA(sb, "(%10s:%-4d) ", f, dwLine);
                 WriteFile(lf->hFile, sb, lstrlenA(sb), &wr, NULL);
             }
-
             WriteFile(lf->hFile, buffer, len, &wr, NULL);
+            
             /* Terminate the line */
             WriteFile(lf->hFile, LINE_SEP, sizeof(LINE_SEP) - 1, &wr, NULL);
 #ifdef _DEBUG_FULL
@@ -375,7 +375,15 @@ apxDisplayError(
                              sysbuf,
                              SIZ_DESLEN,
                              NULL);
-        sysbuf[len] = 0;
+        if (len > 0) {
+            sysbuf[len] = '\0';
+            if (sysbuf[len - 1] == '\n') {
+                sysbuf[len - 1] = '\0';
+                --len;
+            }
+        }
+        else
+            sysbuf[0] = '\0';
     }
     if (szFormat) {
         va_start(args, szFormat);
@@ -383,7 +391,7 @@ apxDisplayError(
         va_end(args);
         if (f) {
             CHAR sb[SIZ_PATHLEN];
-            wsprintfA(sb, "\n%s (%d)", f, dwLine);
+            wsprintfA(sb, "%s (%d)", f, dwLine);
             lstrcatA(sysbuf, sb);
         }
         lstrlcatA(sysbuf, SIZ_HUGLEN, "\n");
@@ -393,10 +401,17 @@ apxDisplayError(
 #ifdef _DEBUG_FULL
     OutputDebugStringA(sysbuf);
 #endif
-    if (len > 0 && bDisplay) {
-        nRet = MessageBoxA(NULL, sysbuf,
-                           "Application System Error",
-                           MB_ICONERROR | MB_OK | MB_SYSTEMMODAL);
+    if (len > 0) {
+        if (bDisplay) {
+            nRet = MessageBoxA(NULL, sysbuf,
+                               "Application System Error",
+                               MB_ICONERROR | MB_OK | MB_SYSTEMMODAL);
+        }
+        else {
+            fputs(sysbuf, stderr);
+            fputc('\n', stderr);
+            fflush(stderr);
+        }
     }
     /* Restore the last Error code */
     SetLastError(err);
diff --git a/src/native/nt/procrun/src/private.h b/src/native/nt/procrun/src/private.h
index d95c752..c90f084 100644
--- a/src/native/nt/procrun/src/private.h
+++ b/src/native/nt/procrun/src/private.h
@@ -234,11 +234,6 @@ extern APX_OSLEVEL  _st_apx_oslevel;
 
 #define APX_GET_OSLEVEL()   ((_st_apx_oslevel == APX_WINVER_UNK) ? apxGetOsLevel() : _st_apx_oslevel)
 
-#ifdef _DEBUG
-void    ErrorMessage(LPCTSTR szError, BOOL bFatal);
-#else
-#define ErrorMessage(szError, bFatal) ((void)0)
-#endif
 /* zero separated, double zero terminated string */
 struct APXMULTISZ {
     DWORD   dwAllocated;  /* length including terminators */
diff --git a/src/native/nt/procrun/src/registry.c b/src/native/nt/procrun/src/registry.c
index ab144b6..0ab8543 100644
--- a/src/native/nt/procrun/src/registry.c
+++ b/src/native/nt/procrun/src/registry.c
@@ -454,7 +454,7 @@ apxRegistryGetBinaryA(APXHANDLE hRegistry, DWORD dwFrom,
         DWORD rc, dwType = REG_BINARY;
         rc = RegQueryValueExA(hKey, szValueName, NULL, &dwType, lpData, lpdwLength);
         if (rc != ERROR_SUCCESS || dwType != REG_BINARY) {
-            ErrorMessage(NULL, FALSE);
+            apxLogWrite(APXLOG_MARK_SYSERR);
             return NULL;
         }
         lpReg->pCurrVal = lpData;
diff --git a/src/native/nt/procrun/src/rprocess.c b/src/native/nt/procrun/src/rprocess.c
index 55206e8..45d2047 100644
--- a/src/native/nt/procrun/src/rprocess.c
+++ b/src/native/nt/procrun/src/rprocess.c
@@ -261,38 +261,38 @@ static BOOL __apxProcCreateChildPipes(LPAPXPROCESS lpProc)
     if (!CreatePipe(&(lpProc->hChildStdInp),
                     &(lpProc->hChildInpWr),
                     lpProc->lpSA, 0)) {
-        ErrorMessage(NULL, FALSE);
+        apxLogWrite(APXLOG_MARK_SYSERR);
         goto cleanup;
     }
     if (!SetHandleInformation(lpProc->hChildInpWr,
                               HANDLE_FLAG_INHERIT, 0)) {
-        ErrorMessage(NULL, FALSE);
+        apxLogWrite(APXLOG_MARK_SYSERR);
         goto cleanup;
     }
 
     if (!CreatePipe(&(lpProc->hChildOutRd),
                     &(lpProc->hChildStdOut),
                     lpProc->lpSA, 0)) {
-        ErrorMessage(NULL, FALSE);
+        apxLogWrite(APXLOG_MARK_SYSERR);
         goto cleanup;
     }
 
     if (!SetHandleInformation(lpProc->hChildOutRd,
                               HANDLE_FLAG_INHERIT, 0)) {
-        ErrorMessage(NULL, FALSE);
+        apxLogWrite(APXLOG_MARK_SYSERR);
         goto cleanup;
     }
 
     if (!CreatePipe(&(lpProc->hChildErrRd),
                     &(lpProc->hChildStdErr),
                     lpProc->lpSA, 0)) {
-        ErrorMessage(NULL, FALSE);
+        apxLogWrite(APXLOG_MARK_SYSERR);
         goto cleanup;
     }
 
     if (!SetHandleInformation(lpProc->hChildErrRd,
                               HANDLE_FLAG_INHERIT, 0)) {
-        ErrorMessage(NULL, FALSE);
+        apxLogWrite(APXLOG_MARK_SYSERR);
         goto cleanup;
     }
     rv = TRUE;
@@ -488,7 +488,7 @@ apxCreateProcessW(APXHANDLE hPool, DWORD dwOptions,
                         LOGON32_PROVIDER_DEFAULT,
                         &hUser)) {
             /* Logon Failed */
-            ErrorMessage(NULL, TRUE);
+            apxLogWrite(APXLOG_MARK_SYSERR);
             return NULL;
         }
         if (!DuplicateTokenEx(hUser,
@@ -499,14 +499,14 @@ apxCreateProcessW(APXHANDLE hPool, DWORD dwOptions,
                               &hUserToken)) {
             CloseHandle(hUser);
             /* Failed to duplicate the user token */
-                ErrorMessage(NULL, TRUE);
+            apxLogWrite(APXLOG_MARK_SYSERR);
             return NULL;
         }
         if (!ImpersonateLoggedOnUser(hUserToken)) {
             CloseHandle(hUser);
             CloseHandle(hUserToken);
             /* failed to impersonate the logged user */
-                ErrorMessage(NULL, TRUE);
+            apxLogWrite(APXLOG_MARK_SYSERR);
             return NULL;
         }
         CloseHandle(hUser);
diff --git a/src/native/nt/procrun/src/service.c b/src/native/nt/procrun/src/service.c
index 5f0a479..5e2d1af 100644
--- a/src/native/nt/procrun/src/service.c
+++ b/src/native/nt/procrun/src/service.c
@@ -43,7 +43,7 @@ static BOOL __apxIsValidServiceName(LPCWSTR szServiceName)
 {
     do {
         if (!IsCharAlphaNumericW(*szServiceName)) {
-            apxDisplayError(TRUE, NULL, 0, "NonAlpha %d", *szServiceName);
+            apxDisplayError(FALSE, NULL, 0, "NonAlpha %d", *szServiceName);
             return FALSE;
         }
     } while( *(++szServiceName));
@@ -524,8 +524,6 @@ apxServiceInstall(APXHANDLE hService, LPCWSTR szServiceName,
 
     if (IS_INVALID_HANDLE(lpService->hService)) {
         apxLogWrite(APXLOG_MARK_SYSERR);
-
-        ErrorMessage(NULL, FALSE);
         return FALSE;
     }
     else {
@@ -591,7 +589,6 @@ apxServiceBrowse(APXHANDLE hService,
     if (IS_INVALID_HANDLE(hLock)) {
         apxLogWrite(APXLOG_MARK_SYSERR);
 
-        ErrorMessage(NULL, FALSE);
         return 0;
     }
     AplZeroMemory(&stEnum, sizeof(APXREGENUM));
diff --git a/src/native/nt/procrun/src/utils.c b/src/native/nt/procrun/src/utils.c
index 5a64474..2bbcb25 100644
--- a/src/native/nt/procrun/src/utils.c
+++ b/src/native/nt/procrun/src/utils.c
@@ -81,8 +81,8 @@ LPWSTR __apxGetEnvironmentVariableW(APXHANDLE hPool, LPCWSTR wsName)
     if (!(wsRet = apxPoolAlloc(hPool, (rc + 1) * sizeof(WCHAR))))
         return NULL;
     if (!GetEnvironmentVariableW(wsName, wsRet, rc)) {
+        apxLogWrite(APXLOG_MARK_SYSERR);
         apxFree(wsRet);
-        ErrorMessage(NULL, FALSE);
         return NULL;
     }
     return wsRet;
@@ -100,8 +100,8 @@ LPSTR __apxGetEnvironmentVariableA(APXHANDLE hPool, LPCSTR szName)
     if (!(szRet = apxPoolAlloc(hPool, rc + 1)))
         return NULL;
     if (!GetEnvironmentVariableA(szName, szRet, rc)) {
+        apxLogWrite(APXLOG_MARK_SYSERR);
         apxFree(szRet);
-        ErrorMessage(NULL, FALSE);
         return NULL;
     }
     return szRet;
@@ -210,39 +210,6 @@ LPSTR MzWideToUTF8(LPCWSTR ws)
     return str;
 }
 
-#ifdef _DEBUG
-
-void ErrorMessage(LPCTSTR szError, BOOL bFatal)
-{
-    LPVOID lpMsgBuf = NULL;
-    UINT   nType;
-    int    nRet;
-    DWORD  dwErr = GetLastError();
-    if (bFatal)
-        nType = MB_ICONERROR | MB_ABORTRETRYIGNORE | MB_SYSTEMMODAL;
-    else
-        nType = MB_ICONEXCLAMATION | MB_OK;
-    if (szError) {
-        nRet = MessageBox(NULL, szError, TEXT("Application Error"), nType);
-    }
-    else {
-        FormatMessage(FORMAT_MESSAGE_ALLOCATE_BUFFER |
-                      FORMAT_MESSAGE_FROM_SYSTEM |
-                      FORMAT_MESSAGE_IGNORE_INSERTS,
-                      NULL,
-                      dwErr,
-                      MAKELANGID(LANG_NEUTRAL, SUBLANG_NEUTRAL),
-                      (LPTSTR) &lpMsgBuf, 0, NULL);
-        nRet = MessageBox(NULL, (LPCTSTR)lpMsgBuf,
-                          TEXT("Application System Error"), nType);
-        LocalFree(lpMsgBuf);
-    }
-    if (bFatal && (nRet == IDCANCEL || nRet == IDABORT)) {
-        ExitProcess(dwErr);
-    }
-}
-#endif /* _DEBUG */
-
 DWORD __apxGetMultiSzLengthA(LPCSTR lpStr, LPDWORD lpdwCount)
 {
     LPCSTR p = lpStr;
