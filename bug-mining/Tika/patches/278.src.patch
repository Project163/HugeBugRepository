diff --git a/tika-core/src/main/java/org/apache/tika/sax/SafeContentHandler.java b/tika-core/src/main/java/org/apache/tika/sax/SafeContentHandler.java
index 98aed974a..4a6110010 100644
--- a/tika-core/src/main/java/org/apache/tika/sax/SafeContentHandler.java
+++ b/tika-core/src/main/java/org/apache/tika/sax/SafeContentHandler.java
@@ -43,7 +43,7 @@ public class SafeContentHandler extends ContentHandlerDecorator {
     /**
      * Replacement for invalid characters.
      */
-    private static final char[] REPLACEMENT = new char[] { ' ' };
+    private static final char[] REPLACEMENT = new char[] { '\ufffd' };
 
     /**
      * Internal interface that allows both character and
diff --git a/tika-core/src/test/java/org/apache/tika/sax/SafeContentHandlerTest.java b/tika-core/src/test/java/org/apache/tika/sax/SafeContentHandlerTest.java
index 2ce375907..f60fe8dca 100644
--- a/tika-core/src/test/java/org/apache/tika/sax/SafeContentHandlerTest.java
+++ b/tika-core/src/test/java/org/apache/tika/sax/SafeContentHandlerTest.java
@@ -55,19 +55,19 @@ public class SafeContentHandlerTest extends TestCase {
         safe.characters("ab\u0007".toCharArray(), 0, 3);
         safe.characters("a\u000Bc".toCharArray(), 0, 3);
         safe.characters("\u0019bc".toCharArray(), 0, 3);
-        assertEquals("ab a c bc", output.toString());
+        assertEquals("ab\ufffda\ufffdc\ufffdbc", output.toString());
     }
 
     public void testInvalidWhitespace() throws SAXException {
         safe.ignorableWhitespace("ab\u0000".toCharArray(), 0, 3);
         safe.ignorableWhitespace("a\u0001c".toCharArray(), 0, 3);
         safe.ignorableWhitespace("\u0002bc".toCharArray(), 0, 3);
-        assertEquals("ab a c bc", output.toString());
+        assertEquals("ab\ufffda\ufffdc\ufffdbc", output.toString());
     }
 
     public void testInvalidSurrogates() throws SAXException {
         safe.ignorableWhitespace("\udb00\ubfff".toCharArray(), 0, 2);
-        assertEquals(" \ubfff", output.toString());
+        assertEquals("\ufffd\ubfff", output.toString());
     }
 
 }
diff --git a/tika-parsers/src/test/java/org/apache/tika/TestParsers.java b/tika-parsers/src/test/java/org/apache/tika/TestParsers.java
index f1d231876..99fe58f90 100644
--- a/tika-parsers/src/test/java/org/apache/tika/TestParsers.java
+++ b/tika-parsers/src/test/java/org/apache/tika/TestParsers.java
@@ -102,7 +102,9 @@ public class TestParsers extends TikaTest {
         String s1 = ParseUtils.getStringContent(file, tc);
         String s2 = ParseUtils.getStringContent(file, tc, "application/rtf");
         assertEquals(s1, s2);
-        String content = s1.replaceAll("\\s+"," ");
+        String content = s1;
+        content = content.replaceAll("\ufffd", " ");
+        content = content.replaceAll("\\s+"," ");
         assertTrue(content.contains("a b c d \u00E4 \u00EB \u00F6 \u00FC"));
     }
 
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/prt/PRTParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/prt/PRTParserTest.java
index 2b9043287..2a2ce2826 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/prt/PRTParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/prt/PRTParserTest.java
@@ -103,7 +103,7 @@ public class PRTParserTest extends TikaTest {
           assertContains("112"+'\u00b0', contents); // Degrees
           assertContains("TIKA TEST LETTER", contents);
           assertContains("17.11", contents);
-          assertContains('\u00d8'+" 2.000", contents); // Diameter
+          assertContains('\u00d8'+"\ufffd2.000", contents); // Diameter
           assertContains("Diameter", contents);
           assertContains("The Apache Tika toolkit", contents);
        } finally {
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/rtf/RTFParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/rtf/RTFParserTest.java
index a90781a71..aefd1c3d0 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/rtf/RTFParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/rtf/RTFParserTest.java
@@ -21,7 +21,6 @@ import java.io.FileInputStream;
 import java.io.StringWriter;
 
 import org.apache.tika.TikaTest;
-import org.apache.tika.config.TikaConfig;
 import org.apache.tika.metadata.Metadata;
 import org.apache.tika.parser.ParseContext;
 import org.apache.tika.sax.WriteOutContentHandler;
@@ -30,11 +29,9 @@ import org.apache.tika.sax.WriteOutContentHandler;
  * Junit test class for the Tika {@link RTFParser}
  */
 public class RTFParserTest extends TikaTest {
-    private TikaConfig tc;
     private RTFParser parser;
 
     public void setUp() throws Exception {
-        tc = TikaConfig.getDefaultConfig();
         parser = new RTFParser();
     }
 
@@ -96,6 +93,7 @@ public class RTFParserTest extends TikaTest {
     public void testRTFTableCellSeparation() throws Exception {
         String content = getText("testRTFTableCellSeparation.rtf");
         // TODO: why do we insert extra whitespace...?
+        content = content.replaceAll("\ufffd", " ");
         content = content.replaceAll("\\s+"," ");
         assertContains("a b c d \u00E4 \u00EB \u00F6 \u00FC", content);
     }
@@ -103,6 +101,7 @@ public class RTFParserTest extends TikaTest {
     public void testRTFTableCellSeparation2() throws Exception {
         String content = getText("testRTFTableCellSeparation2.rtf");
         // TODO: why do we insert extra whitespace...?
+        content = content.replaceAll("\ufffd", " ");
         content = content.replaceAll("\\s+"," ");
         assertContains("Station Fax", content);
     }
