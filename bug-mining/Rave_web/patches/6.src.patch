diff --git a/rave-components/rave-web/src/main/java/org/apache/rave/portal/web/validator/WidgetValidator.java b/rave-components/rave-web/src/main/java/org/apache/rave/portal/web/validator/WidgetValidator.java
index fc494d78..596154f9 100644
--- a/rave-components/rave-web/src/main/java/org/apache/rave/portal/web/validator/WidgetValidator.java
+++ b/rave-components/rave-web/src/main/java/org/apache/rave/portal/web/validator/WidgetValidator.java
@@ -20,7 +20,8 @@
 package org.apache.rave.portal.web.validator;
 
 import org.apache.commons.lang.StringUtils;
-import org.apache.commons.validator.UrlValidator;
+import org.apache.commons.validator.routines.RegexValidator;
+import org.apache.commons.validator.routines.UrlValidator;
 import org.apache.rave.portal.model.Widget;
 import org.springframework.validation.Errors;
 import org.springframework.validation.ValidationUtils;
@@ -36,8 +37,8 @@ public abstract class WidgetValidator implements Validator {
 
     public WidgetValidator() {
         super();
-        String[] allowedSchemes = {"http", "https"};
-        urlValidator = new UrlValidator(allowedSchemes);
+        RegexValidator regex = new RegexValidator(new String[] {"http", "https","((localhost)(:[0-9]+))"});
+        urlValidator = new UrlValidator(regex, 0);
     }
 
     /**
@@ -63,7 +64,7 @@ public abstract class WidgetValidator implements Validator {
     }
 
     /**
-     * Checks if a Widget already exists for this URL. 
+     * Checks if a Widget already exists for this URL.
      * @param widget {@link Widget} to validate
      * @param errors {@link Errors}
      */
diff --git a/rave-components/rave-web/src/test/java/org/apache/rave/portal/web/validator/WidgetValidatorTest.java b/rave-components/rave-web/src/test/java/org/apache/rave/portal/web/validator/WidgetValidatorTest.java
index 0ee5997b..3c6d3931 100644
--- a/rave-components/rave-web/src/test/java/org/apache/rave/portal/web/validator/WidgetValidatorTest.java
+++ b/rave-components/rave-web/src/test/java/org/apache/rave/portal/web/validator/WidgetValidatorTest.java
@@ -19,13 +19,16 @@
 
 package org.apache.rave.portal.web.validator;
 
+import static junit.framework.Assert.assertFalse;
+import static junit.framework.Assert.assertTrue;
+
+import org.apache.commons.validator.routines.RegexValidator;
+import org.apache.commons.validator.routines.UrlValidator;
 import org.apache.rave.portal.model.Widget;
 import org.junit.Before;
 import org.junit.Test;
 import org.springframework.validation.Errors;
 
-import static junit.framework.Assert.assertTrue;
-
 /**
  * Test for {@link WidgetValidator}
  */
@@ -43,7 +46,28 @@ public class WidgetValidatorTest {
         assertTrue("Supports org.apache.rave.portal.model.Widget", widgetValidator.supports(Widget.class));
     }
 
-    private class MockWidgetValidator extends WidgetValidator {
+  /*
+    * Testing the same method of URL validator used in validate method. Its was really hard to create Error object
+    */
+ @Test
+ public void testValidation() throws Exception {
+      RegexValidator regex = new RegexValidator(new String[]{"http","https","((localhost)(:[0-9]+))",".*\\.linux-server(:[0-9]+)"});
+      UrlValidator validator = new UrlValidator(regex, 0);
+      assertTrue("localhost URL should validate",
+                validator.isValid("http://localhost:8080/demogadgets/CTSSResourcesMapView.xml"));
+        assertTrue("127.0.0.1 should validate",
+                validator.isValid("http://127.0.0.1:8080/demogadgets/CTSSResourcesMapView.xml"));
+        assertTrue("my.linux-server should validate",
+                validator.isValid("http://my.linux-server:8080/demogadgets/CTSSResourcesMapView.xml"));
+
+        assertFalse("broke.my-test should not validate",
+                validator.isValid("http://broke.my-test/test/index.html"));
+
+        assertTrue("www.apache.org should still validate",
+                validator.isValid("http://www.apache.org/test/index.html"));
+    }
+
+     private class MockWidgetValidator extends WidgetValidator {
 
         @Override
         protected void validateIfWidgetAlreadyExists(Widget widget, Errors errors) {
