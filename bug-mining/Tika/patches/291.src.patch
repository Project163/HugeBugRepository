diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java
index 8881a031e..5dc97101c 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java
@@ -39,7 +39,12 @@ public class HSLFExtractor extends AbstractPOIFSExtractor {
             throws IOException, SAXException, TikaException {
         PowerPointExtractor powerPointExtractor =
             new PowerPointExtractor(filesystem);
-        xhtml.element("p", powerPointExtractor.getText(true, true));
+        powerPointExtractor.setSlidesByDefault(true);
+        powerPointExtractor.setNotesByDefault(true);
+        powerPointExtractor.setCommentsByDefault(true);
+        powerPointExtractor.setMasterByDefault(true);
+        
+        xhtml.element("p", powerPointExtractor.getText());
 
         List<OLEShape> shapeList = powerPointExtractor.getOLEShapes();
         for (OLEShape shape : shapeList) {
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java
index 3ba14aac5..79331995a 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java
@@ -33,6 +33,7 @@ import org.apache.poi.xslf.usermodel.XMLSlideShow;
 import org.apache.poi.xslf.usermodel.XSLFCommonSlideData;
 import org.apache.poi.xslf.usermodel.XSLFRelation;
 import org.apache.poi.xslf.usermodel.XSLFSlide;
+import org.apache.poi.xslf.usermodel.XSLFSlideMaster;
 import org.apache.tika.exception.TikaException;
 import org.apache.tika.parser.ParseContext;
 import org.apache.tika.sax.XHTMLContentHandler;
@@ -77,20 +78,30 @@ public class XSLFPowerPointExtractorDecorator extends AbstractOOXMLExtractor {
               continue;
            }
            
+            XSLFSlideMaster master = slide.getMasterSheet();
             CTNotesSlide notes = rawSlideShow.getNotes(slideId);
             CTCommentList comments = rawSlideShow.getSlideComments(slideId);
 
+            // TODO In POI 3.8 beta 5, improve how we get this
             xhtml.startElement("div");
             XSLFCommonSlideData common = new XSLFCommonSlideData(slide.getXmlObject().getCSld());
             extractShapeContent(common, xhtml);
 
+            // If there are comments, extract them
             if (comments != null) {
                 for (CTComment comment : comments.getCmArray()) {
                     xhtml.element("p", comment.getText());
                 }
             }
+            
+            // Get text from the master slide
+            if(master != null) {
+               // TODO In POI 3.8 beta 5, improve how we get this
+               extractShapeContent(new XSLFCommonSlideData(master.getXmlObject().getCSld()), xhtml);
+            }
 
             if (notes != null) {
+               // TODO In POI 3.8 beta 5, improve how we get this
                 extractShapeContent(new XSLFCommonSlideData(notes.getCSld()), xhtml);
             }
             xhtml.endElement("div");
