diff --git a/core/src/main/java/org/apache/commons/vfs2/provider/sftp/SftpClientFactory.java b/core/src/main/java/org/apache/commons/vfs2/provider/sftp/SftpClientFactory.java
index 8f364434..45c6fbf6 100644
--- a/core/src/main/java/org/apache/commons/vfs2/provider/sftp/SftpClientFactory.java
+++ b/core/src/main/java/org/apache/commons/vfs2/provider/sftp/SftpClientFactory.java
@@ -85,7 +85,7 @@ public final class SftpClientFactory
             jsch.setIdentityRepository(repositoryFactory.create(jsch));
         }
 
-        addIdentities(jsch, sshDir, identities, password);
+        addIdentities(jsch, sshDir, identities);
 
         Session session;
         try
@@ -172,13 +172,13 @@ public final class SftpClientFactory
         return session;
     }
 
-    private static void addIdentities(final JSch jsch, final File sshDir, final File[] identities, char[] password) throws FileSystemException
-    {	
+    private static void addIdentities(final JSch jsch, final File sshDir, final File[] identities) throws FileSystemException
+    {
         if (identities != null)
         {
             for (final File privateKeyFile : identities)
             {
-                addIndentity(jsch, privateKeyFile, password);
+                addIndentity(jsch, privateKeyFile);
             }
         }
         else
@@ -187,16 +187,16 @@ public final class SftpClientFactory
             final File privateKeyFile = new File(sshDir, "id_rsa");
             if (privateKeyFile.isFile() && privateKeyFile.canRead())
             {
-                addIndentity(jsch, privateKeyFile, password);
+                addIndentity(jsch, privateKeyFile);
             }
         }
     }
 
-    private static void addIndentity(final JSch jsch, final File privateKeyFile, char[] password) throws FileSystemException
+    private static void addIndentity(final JSch jsch, final File privateKeyFile) throws FileSystemException
     {
         try
         {
-            jsch.addIdentity(privateKeyFile.getAbsolutePath(), password == null ? null : new String(password));
+            jsch.addIdentity(privateKeyFile.getAbsolutePath());
         }
         catch (final JSchException e)
         {
diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index f9425b99..340bd79b 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -53,9 +53,6 @@
         AbstractFileObject.getChildren() may corrupt its internal state if a filename
         can not be resolved.
       </action>
-      <action issue="VFS-451" dev="ggregory" type="fix" due-to="ilmarcoronchi">
-        [SFTP] Authentication fails using private key.
-      </action>
       <action issue="VFS-450" dev="ggregory" type="fix" due-to="dlmarion">
         [HDFS] HDFSFileSystem.resolveFile() does not honor CacheStrategy.ON_RESOLVE.
       </action>
