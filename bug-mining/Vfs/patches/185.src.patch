diff --git a/commons-vfs2/src/main/java/org/apache/commons/vfs2/util/MonitorInputStream.java b/commons-vfs2/src/main/java/org/apache/commons/vfs2/util/MonitorInputStream.java
index b52b04a8..681620d7 100644
--- a/commons-vfs2/src/main/java/org/apache/commons/vfs2/util/MonitorInputStream.java
+++ b/commons-vfs2/src/main/java/org/apache/commons/vfs2/util/MonitorInputStream.java
@@ -93,9 +93,6 @@ public class MonitorInputStream extends BufferedInputStream {
             atomicCount.addAndGet(nread);
             return nread;
         }
-
-        // End-of-stream
-        close();
         return EOF_CHAR;
     }
 
diff --git a/commons-vfs2/src/test/java/org/apache/commons/vfs2/provider/DefaultFileContentTest.java b/commons-vfs2/src/test/java/org/apache/commons/vfs2/provider/DefaultFileContentTest.java
new file mode 100644
index 00000000..45d18b2b
--- /dev/null
+++ b/commons-vfs2/src/test/java/org/apache/commons/vfs2/provider/DefaultFileContentTest.java
@@ -0,0 +1,71 @@
+package org.apache.commons.vfs2.provider;
+
+import org.apache.commons.vfs2.FileObject;
+import org.apache.commons.vfs2.FileSystemManager;
+import org.apache.commons.vfs2.VFS;
+import org.junit.Assert;
+import org.junit.Test;
+
+import java.io.File;
+import java.io.InputStream;
+import java.io.OutputStream;
+
+/**
+ * {@code DefaultFileContentTest} tests for bug-VFS-614. This bug involves the stream implementation closing the stream
+ * after reading to the end of the buffer, which broke marking.
+ */
+public class DefaultFileContentTest {
+    private static final String expected = "testing";
+
+    @Test
+    public void testMarkingWorks() throws Exception {
+        File temp = File.createTempFile("temp-file-name", ".tmp");
+        FileSystemManager fileSystemManager = VFS.getManager();
+
+        try (FileObject file = fileSystemManager.resolveFile(temp.getAbsolutePath())) {
+            try (OutputStream outputStream = file.getContent().getOutputStream()) {
+                outputStream.write(expected.getBytes());
+                outputStream.flush();
+            }
+            try (InputStream stream = file.getContent().getInputStream()) {
+                if (stream.markSupported()) {
+                    for (int i = 0; i < 10; i++) {
+                        stream.mark(0);
+                        byte[] data = new byte[100];
+                        stream.read(data, 0, 7);
+                        Assert.assertEquals(expected, new String(data).trim());
+                        stream.reset();
+                    }
+                }
+            }
+        }
+    }
+
+    @Test
+    public void testMarkingWhenReadingEOS() throws Exception {
+        File temp = File.createTempFile("temp-file-name", ".tmp");
+        FileSystemManager fileSystemManager = VFS.getManager();
+
+        try (FileObject file = fileSystemManager.resolveFile(temp.getAbsolutePath())) {
+            try (OutputStream outputStream = file.getContent().getOutputStream()) {
+                outputStream.write(expected.getBytes());
+                outputStream.flush();
+            }
+            try (InputStream stream = file.getContent().getInputStream()) {
+                int readCount = 0;
+                if (stream.markSupported()) {
+                    for (int i = 0; i < 10; i++) {
+                        stream.mark(0);
+                        byte[] data = new byte[100];
+                        readCount = stream.read(data, 0, 7);
+                        Assert.assertEquals(readCount, 7);
+                        Assert.assertEquals(expected, new String(data).trim());
+                        readCount = stream.read(data, 8, 10);
+                        Assert.assertEquals(readCount, -1);
+                        stream.reset();
+                    }
+                }
+            }
+        }
+    }
+}
diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 1c52b246..baa3b915 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -71,6 +71,9 @@ The <action> type attribute can be add,update,fix,remove.
       <action issue="VFS-657" dev="ggregory" type="fix" due-to="Elias Putz">
         FileSelector implementations like FileDepthSelector should throw Exception.
       </action>
+      <action issue="VFS-614" dev="ggregory" type="fix" due-to="Boris Petrov, Otto Fowler">
+        MonitorInputStream should not close the stream in read().
+      </action>
     </release>
     <release version="2.2" date="2017-10-06" description="New features and bug fix release.">
       <action issue="VFS-642" dev="pschumacher" type="update" due-to="ilangoldfeld">
