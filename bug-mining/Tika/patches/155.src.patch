diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/DefaultHtmlMapper.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/DefaultHtmlMapper.java
index 237b7513f..94c67feda 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/html/DefaultHtmlMapper.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/html/DefaultHtmlMapper.java
@@ -78,6 +78,7 @@ public class DefaultHtmlMapper implements HtmlMapper {
         put("a", attrSet("rel", "name"));
         put("img", attrSet("src"));
         put("frame", attrSet("src"));
+        put("link", attrSet("charset", "href", "hreflang", "type", "rel", "rev", "media"));
         // TODO KKr - fill out this set.
     }};
     
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java
index 042f23048..09eb03511 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java
@@ -118,7 +118,7 @@ class HtmlHandler extends TextContentHandler {
                         resolve(atts.getValue("href").trim()));
                 xhtml.startElement(uri, local, "base", atts);
             } else if ("LINK".equals(name) && atts.getValue("href") != null) {
-                xhtml.startElement(uri, local, "link", atts);
+                startElementWithSafeAttributes("link", atts);
             }
         }
 
@@ -143,23 +143,7 @@ class HtmlHandler extends TextContentHandler {
                 else if (atts.getLength() == 0) {
                     xhtml.startElement(safe);
                 } else {
-                    AttributesImpl newAttributes = new AttributesImpl(atts);
-                    for (int att = 0; att < newAttributes.getLength(); att++) {
-                        String normAttrName = mapper.mapSafeAttribute(safe, newAttributes.getLocalName(att));
-                        if (normAttrName == null) {
-                            newAttributes.removeAttribute(att);
-                            att--;
-                        } else {
-                            // We have a remapped attribute name, so set it as it might have changed.
-                            newAttributes.setLocalName(att, normAttrName);
-                            
-                            // And resolve relative links for the src attribute.
-                            if (normAttrName.equals("src")) {
-                                newAttributes.setValue(att, resolve(newAttributes.getValue(att).trim()));
-                            }
-                        }
-                    }
-                    xhtml.startElement(safe, newAttributes);
+                    startElementWithSafeAttributes(safe, atts);
                 }
             }
         }
@@ -167,6 +151,27 @@ class HtmlHandler extends TextContentHandler {
         title.setLength(0);
     }
 
+    private void startElementWithSafeAttributes(String name, Attributes atts) throws SAXException {
+        AttributesImpl newAttributes = new AttributesImpl(atts);
+        for (int att = 0; att < newAttributes.getLength(); att++) {
+            String normAttrName = mapper.mapSafeAttribute(name, newAttributes.getLocalName(att));
+            if (normAttrName == null) {
+                newAttributes.removeAttribute(att);
+                att--;
+            } else {
+                // We have a remapped attribute name, so set it as it might have changed.
+                newAttributes.setLocalName(att, normAttrName);
+                
+                // And resolve relative links for the href & src attributes.
+                if (normAttrName.equals("src") || normAttrName.equals("href")) {
+                    newAttributes.setValue(att, resolve(newAttributes.getValue(att).trim()));
+                }
+            }
+        }
+        
+        xhtml.startElement(name, newAttributes);
+    }
+
     @Override
     public void endElement(
             String uri, String local, String name) throws SAXException {
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/html/HtmlParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/html/HtmlParserTest.java
index 54dffea34..0e69b8c53 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/html/HtmlParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/html/HtmlParserTest.java
@@ -577,6 +577,26 @@ public class HtmlParserTest extends TestCase {
         assertTrue(Pattern.matches("(?s).*<body>.*</body>.*$", content));
     }
     
+    /**
+     * Test case for TIKA-481. Verify href in <link> is resolved.
+     * @see <a href="https://issues.apache.org/jira/browse/TIKA-481">TIKA-481</a>
+     */
+    public void testLinkHrefResolution() throws Exception {
+        final String test = "<html><head><title>Title</title>" +
+        "<base href=\"http://domain.com\" />" +
+        "<link rel=\"next\" href=\"next.html\" />" +
+        "</head><body></body></html>";
+
+        StringWriter sw = new StringWriter();
+        new HtmlParser().parse(
+                new ByteArrayInputStream(test.getBytes("UTF-8")),
+                makeHtmlTransformer(sw), new Metadata(), new ParseContext());
+
+        String result = sw.toString();
+        
+        // <link> tag should exist in <head>, with fully resolved URL
+        assertTrue(Pattern.matches("(?s).*<head>.*<link rel=\"next\" href=\"http://domain.com/next.html\"/>.*</head>.*$", result));
+    }
     
 
     /**
