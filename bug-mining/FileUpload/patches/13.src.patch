diff --git a/pom.xml b/pom.xml
index a01ee3c2..60554672 100644
--- a/pom.xml
+++ b/pom.xml
@@ -100,6 +100,10 @@
       <name>Gary Gregory</name>
       <email>ggregory@seagullsw.com</email>
     </contributor>
+    <contributor>
+      <name>Stepan Koltsov</name>
+      <email>yozh@mx1.ru</email>
+    </contributor>
     <contributor>
       <name>Michael Macaluso</name>
       <email>michael.public@wavecorp.com</email>
diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 1691fbd5..878e07fa 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -42,7 +42,13 @@ The <action> type attribute can be add,update,fix,remove.
 
   <body>
     <release version="1.3-SNAPSHOT" date="Not yet released">
+      <action dev="jochen" type="fix" issue="FILEUPLOAD-160"
+          due-to="Stepan Koltsov" due-to-email="yozh@mx1.ru">
+        Temporary files have not been deleted, if an error
+        occurred in FileUploadBase.parseRequest();
+      </action>
     </release>
+
     <release version="1.2.1" date="2008-01-18">
       <action dev="jochen" type="fix">
         Upgrade to commons-io-1.4-SNAPSHOT, in order to use the new
diff --git a/src/java/org/apache/commons/fileupload/FileUploadBase.java b/src/java/org/apache/commons/fileupload/FileUploadBase.java
index 9e12e76f..4a1f1160 100644
--- a/src/java/org/apache/commons/fileupload/FileUploadBase.java
+++ b/src/java/org/apache/commons/fileupload/FileUploadBase.java
@@ -345,9 +345,10 @@ public abstract class FileUploadBase {
      */
     public List /* FileItem */ parseRequest(RequestContext ctx)
             throws FileUploadException {
+        List items = new ArrayList();
+        boolean successful = false;
         try {
             FileItemIterator iter = getItemIterator(ctx);
-            List items = new ArrayList();
             FileItemFactory fac = getFileItemFactory();
             if (fac == null) {
                 throw new NullPointerException(
@@ -358,6 +359,7 @@ public abstract class FileUploadBase {
                 FileItem fileItem = fac.createItem(item.getFieldName(),
                         item.getContentType(), item.isFormField(),
                         item.getName());
+                items.add(fileItem);
                 try {
                     Streams.copy(item.openStream(), fileItem.getOutputStream(),
                             true);
@@ -372,13 +374,24 @@ public abstract class FileUploadBase {
                     final FileItemHeaders fih = item.getHeaders();
                     ((FileItemHeadersSupport) fileItem).setHeaders(fih);
                 }
-                items.add(fileItem);
             }
+            successful = true;
             return items;
         } catch (FileUploadIOException e) {
             throw (FileUploadException) e.getCause();
         } catch (IOException e) {
             throw new FileUploadException(e.getMessage(), e);
+        } finally {
+            if (!successful) {
+                for (Iterator iterator = items.iterator(); iterator.hasNext();) {
+                    FileItem fileItem = (FileItem) iterator.next();
+                    try {
+                        fileItem.delete();
+                    } catch (Throwable e) {
+                        // ignore it
+                    }
+                }
+            }
         }
     }
 
