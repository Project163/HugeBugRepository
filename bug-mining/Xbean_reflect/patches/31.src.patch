diff --git a/xbean-reflect/src/main/java/org/apache/xbean/propertyeditor/AbstractConverter.java b/xbean-reflect/src/main/java/org/apache/xbean/propertyeditor/AbstractConverter.java
index 9b027670..adc37723 100644
--- a/xbean-reflect/src/main/java/org/apache/xbean/propertyeditor/AbstractConverter.java
+++ b/xbean-reflect/src/main/java/org/apache/xbean/propertyeditor/AbstractConverter.java
@@ -27,6 +27,7 @@ import java.beans.PropertyEditorSupport;
  */
 public abstract class AbstractConverter extends PropertyEditorSupport implements Converter {
     private final Class type;
+    private final boolean trim;
 
     /**
      * Creates an abstract converter for the specified type.
@@ -34,9 +35,14 @@ public abstract class AbstractConverter extends PropertyEditorSupport implements
      * @param type type of the property editor
      */
     protected AbstractConverter(Class type) {
+        this(type, true);
+    }
+    
+    protected AbstractConverter(Class type, boolean trim) {
         super();
         if (type == null) throw new NullPointerException("type is null");
         this.type = type;
+        this.trim = trim;
     }
 
     public final Class getType() {
@@ -50,7 +56,7 @@ public abstract class AbstractConverter extends PropertyEditorSupport implements
     }
 
     public final void setAsText(String text) {
-        Object value = toObject(text.trim());
+        Object value = toObject((trim) ? text.trim() : text);
         super.setValue(value);
     }
 
@@ -77,7 +83,7 @@ public abstract class AbstractConverter extends PropertyEditorSupport implements
             return null;
         }
 
-        Object value = toObjectImpl(text.trim());
+        Object value = toObjectImpl((trim) ? text.trim() : text);
         return value;
     }
 
diff --git a/xbean-reflect/src/main/java/org/apache/xbean/propertyeditor/CharacterEditor.java b/xbean-reflect/src/main/java/org/apache/xbean/propertyeditor/CharacterEditor.java
index 10ad665a..0b11518c 100644
--- a/xbean-reflect/src/main/java/org/apache/xbean/propertyeditor/CharacterEditor.java
+++ b/xbean-reflect/src/main/java/org/apache/xbean/propertyeditor/CharacterEditor.java
@@ -21,7 +21,7 @@ package org.apache.xbean.propertyeditor;
  */
 public class CharacterEditor extends AbstractConverter {
     public CharacterEditor() {
-        super(Character.class);
+        super(Character.class, false);
     }
 
     protected Object toObjectImpl(String text) {
diff --git a/xbean-reflect/src/main/java/org/apache/xbean/propertyeditor/StringEditor.java b/xbean-reflect/src/main/java/org/apache/xbean/propertyeditor/StringEditor.java
index e6fa16da..2882c9f3 100644
--- a/xbean-reflect/src/main/java/org/apache/xbean/propertyeditor/StringEditor.java
+++ b/xbean-reflect/src/main/java/org/apache/xbean/propertyeditor/StringEditor.java
@@ -21,7 +21,7 @@ package org.apache.xbean.propertyeditor;
  */
 public class StringEditor extends AbstractConverter {
     public StringEditor() {
-        super(String.class);
+        super(String.class, false);
     }
 
     protected Object toObjectImpl(String text) {
diff --git a/xbean-reflect/src/test/java/org/apache/xbean/recipe/ObjectRecipeTest.java b/xbean-reflect/src/test/java/org/apache/xbean/recipe/ObjectRecipeTest.java
index f862adda..e74a3469 100644
--- a/xbean-reflect/src/test/java/org/apache/xbean/recipe/ObjectRecipeTest.java
+++ b/xbean-reflect/src/test/java/org/apache/xbean/recipe/ObjectRecipeTest.java
@@ -108,6 +108,24 @@ public class ObjectRecipeTest extends TestCase {
         doTest(objectRecipe, PERSON_FACTORY_4_ARG);
     }
 
+    public void testWhitespaceInjection() throws Exception {
+        String name = " Foo Bar ";
+        char ch = ' ';
+        
+        ObjectRecipe objectRecipe = new ObjectRecipe(Value.class);
+        objectRecipe.setProperty("name", name);
+        objectRecipe.setProperty("type", " ");
+        Value c = (Value) objectRecipe.create();
+        
+        assertEquals(name, c.name);
+        assertEquals(ch, c.type);
+    }
+    
+    public static class Value {
+        public String name;
+        public char type;
+    }
+    
     private void doTest(ObjectRecipe objectRecipe, Person.ConstructionCalled expectedConstruction) throws Exception {
         Person expected = new Person("Joe", 21, new URL("http://www.acme.org"), new Car("Mini", "Cooper", 2008));
 
