diff --git a/core/src/main/java/org/apache/commons/vfs2/FileSystem.java b/core/src/main/java/org/apache/commons/vfs2/FileSystem.java
index ffa49b29..6d655cbf 100644
--- a/core/src/main/java/org/apache/commons/vfs2/FileSystem.java
+++ b/core/src/main/java/org/apache/commons/vfs2/FileSystem.java
@@ -183,7 +183,9 @@ public interface FileSystem
     /**
      * Returns the accuracy of the last modification time.
      *
-     * @return ms 0 perfectly accurate, {@literal >0} might be off by this value e.g. sftp 1000ms.
+     * @return the accuracy of the last modification time in milliseconds. A
+     *         value of 0 means perfectly accurate, anything {@literal > 0} might be off
+     *         by this value. For example, sftp has an accuracy of 1000 ms.
      */
     double getLastModTimeAccuracy();
 }
diff --git a/core/src/main/java/org/apache/commons/vfs2/FileSystemManager.java b/core/src/main/java/org/apache/commons/vfs2/FileSystemManager.java
index d19bd908..fa15b705 100644
--- a/core/src/main/java/org/apache/commons/vfs2/FileSystemManager.java
+++ b/core/src/main/java/org/apache/commons/vfs2/FileSystemManager.java
@@ -81,7 +81,9 @@ public interface FileSystemManager
      * {@code resolveFile(getBaseFile(), name)}.
      *
      * @param name              The name of the file.
-     * @param fileSystemOptions The FileSystemOptions used for FileSystem creation
+     * @param fileSystemOptions The FileSystemOptions used for FileSystem creation.
+     *                          All files that are later resolved relative to the
+     *                          returned {@code FileObject} share the options.
      * @return The file.  Never returns null.
      * @throws FileSystemException On error parsing the file name.
      */
@@ -96,9 +98,9 @@ public interface FileSystemManager
      * <p>
      * Note that the file does not have to exist when this method is called.
      *
-     * @param name     The name of the file.
      * @param baseFile The base file to use to resolve relative paths.
-     *                 May be null.
+     *                 May be null if the name is an absolute file name.
+     * @param name     The name of the file.
      * @return The file.  Never returns null.
      * @throws FileSystemException On error parsing the file name.
      */
@@ -109,7 +111,7 @@ public interface FileSystemManager
      * for details.
      *
      * @param baseFile The base file to use to resolve relative paths.
-     *                 May be null.
+     *                 Must not be {@code null}, not even if the <i>name</i> is absolute.
      * @param name     The name of the file.
      * @return The file.  Never returns null.
      * @throws FileSystemException On error parsing the file name.
@@ -125,7 +127,7 @@ public interface FileSystemManager
      * @return A {@link FileName} object representing the resolved file name.
      * @throws FileSystemException If the name is invalid.
      */
-    FileName resolveName(final FileName root, final String name) throws FileSystemException;
+    FileName resolveName(FileName root, String name) throws FileSystemException;
 
     /**
      * Resolves a name, relative to the "root" file name.  Refer to {@link NameScope}
@@ -137,7 +139,7 @@ public interface FileSystemManager
      * @return A {@link FileName} object representing the resolved file name.
      * @throws FileSystemException If the name is invalid.
      */
-    FileName resolveName(final FileName root, String name, NameScope scope)
+    FileName resolveName(FileName root, String name, NameScope scope)
         throws FileSystemException;
 
     /**
@@ -261,7 +263,7 @@ public interface FileSystemManager
      * @param scheme The scheme for which a provider should be checked.
      * @return true if a provider for the scheme is available.
      */
-    boolean hasProvider(final String scheme);
+    boolean hasProvider(String scheme);
 
     /**
      * Get the schemes currently available.
@@ -277,14 +279,14 @@ public interface FileSystemManager
      * @return A Collection of the various capabilities.
      * @throws FileSystemException if the given scheme is not konwn.
      */
-    Collection<Capability> getProviderCapabilities(final String scheme) throws FileSystemException;
+    Collection<Capability> getProviderCapabilities(String scheme) throws FileSystemException;
 
     /**
      * Sets the logger to use.
      *
      * @param log The logger to use.
      */
-    void setLogger(final Log log);
+    void setLogger(Log log);
 
     /**
      * Get the configuration builder for the given scheme.
@@ -293,7 +295,7 @@ public interface FileSystemManager
      * @return A FileSystemConfigBuilder appropriate for the given scheme.
      * @throws FileSystemException if the given scheme is not konwn.
      */
-    FileSystemConfigBuilder getFileSystemConfigBuilder(final String scheme) throws FileSystemException;
+    FileSystemConfigBuilder getFileSystemConfigBuilder(String scheme) throws FileSystemException;
 
     /**
      * Resolve the uri to a filename.
@@ -316,7 +318,7 @@ public interface FileSystemManager
      * @param operationProvider The FileOperationProvider to add.
      * @throws FileSystemException if an error occurs.
      */
-    void addOperationProvider(final String scheme, final FileOperationProvider operationProvider)
+    void addOperationProvider(String scheme, FileOperationProvider operationProvider)
         throws FileSystemException;
 
     /**
@@ -326,7 +328,7 @@ public interface FileSystemManager
      * @param operationProvider The FileOperationProvider to add.
      * @throws FileSystemException if an error occurs.
      */
-    void addOperationProvider(final String[] schemes, final FileOperationProvider operationProvider)
+    void addOperationProvider(String[] schemes, FileOperationProvider operationProvider)
         throws FileSystemException;
 
 
@@ -340,7 +342,7 @@ public interface FileSystemManager
      *
      * @throws FileSystemException if an error occurs.
      */
-    FileOperationProvider[] getOperationProviders(final String scheme) throws FileSystemException;
+    FileOperationProvider[] getOperationProviders(String scheme) throws FileSystemException;
 
     /**
      * Resolves a URI into a {@link FileObject}.
diff --git a/core/src/main/java/org/apache/commons/vfs2/provider/ftp/FtpFileSystemConfigBuilder.java b/core/src/main/java/org/apache/commons/vfs2/provider/ftp/FtpFileSystemConfigBuilder.java
index 84f7922d..ef0052f4 100644
--- a/core/src/main/java/org/apache/commons/vfs2/provider/ftp/FtpFileSystemConfigBuilder.java
+++ b/core/src/main/java/org/apache/commons/vfs2/provider/ftp/FtpFileSystemConfigBuilder.java
@@ -98,7 +98,7 @@ public class FtpFileSystemConfigBuilder extends FileSystemConfigBuilder
 
     /**
      * @param opts The FileSystemOptions.
-     * @return The timeout for opening the data channel as an Integer.
+     * @return The timeout for opening the data channel in milliseconds.
      * @see #setDataTimeout
      */
     public Integer getDataTimeout(final FileSystemOptions opts)
@@ -229,7 +229,7 @@ public class FtpFileSystemConfigBuilder extends FileSystemConfigBuilder
 
     /**
      * @param opts The FileSystem options.
-     * @return The timeout value.
+     * @return The timeout value in milliseconds.
      * @see #getDataTimeout
      * @since 2.0
      */
@@ -282,7 +282,7 @@ public class FtpFileSystemConfigBuilder extends FileSystemConfigBuilder
     /**
      * Set the data timeout for the ftp client.
      * <p>
-     * If you set the {@code dataTimeout} to null no dataTimeout will be set on the
+     * If you set the {@code dataTimeout} to {@code null}, no dataTimeout will be set on the
      * ftp client.
      *
      * @param opts The FileSystemOptions.
@@ -435,11 +435,11 @@ public class FtpFileSystemConfigBuilder extends FileSystemConfigBuilder
     /**
      * Sets the socket timeout for the FTP client.
      * <p>
-     * If you set the {@code soTimeout} to null no socket timeout will be set on the
+     * If you set the {@code soTimeout} to {@code null}, no socket timeout will be set on the
      * ftp client.
      *
      * @param opts The FileSystem options.
-     * @param soTimeout The timeout value.
+     * @param soTimeout The timeout value in milliseconds.
      * @since 2.0
      */
     public void setSoTimeout(final FileSystemOptions opts, final Integer soTimeout)
diff --git a/core/src/main/java/org/apache/commons/vfs2/provider/sftp/SftpFileSystemConfigBuilder.java b/core/src/main/java/org/apache/commons/vfs2/provider/sftp/SftpFileSystemConfigBuilder.java
index 14e36a96..a4b4e0ea 100644
--- a/core/src/main/java/org/apache/commons/vfs2/provider/sftp/SftpFileSystemConfigBuilder.java
+++ b/core/src/main/java/org/apache/commons/vfs2/provider/sftp/SftpFileSystemConfigBuilder.java
@@ -153,7 +153,7 @@ public final class SftpFileSystemConfigBuilder extends FileSystemConfigBuilder
     /**
      * @param opts
      *            The FileSystem options.
-     * @return The name of the compression algorithm.
+     * @return The names of the compression algorithms, comma-separated.
      * @see #setCompression
      */
     public String getCompression(final FileSystemOptions opts)
@@ -372,7 +372,7 @@ public final class SftpFileSystemConfigBuilder extends FileSystemConfigBuilder
     /**
      * @param opts
      *            The FileSystem options.
-     * @return The timeout value.
+     * @return The timeout value in milliseconds.
      * @see #setTimeout
      */
     public Integer getTimeout(final FileSystemOptions opts)
@@ -407,16 +407,16 @@ public final class SftpFileSystemConfigBuilder extends FileSystemConfigBuilder
     }
 
     /**
-     * Configures the compression to use.
+     * Configures the compression algorithms to use.
      * <p>
      * For example, use {@code "zlib,none"} to enable compression.
      * <p>
-     * See the Jsch documentation for details.
+     * See the Jsch documentation (in particular the README file) for details.
      *
      * @param opts
      *            The FileSystem options.
      * @param compression
-     *            The compression algorithm name.
+     *            The names of the compression algorithms, comma-separated.
      * @throws FileSystemException
      *             if an error occurs.
      */
@@ -678,7 +678,7 @@ public final class SftpFileSystemConfigBuilder extends FileSystemConfigBuilder
      * @param opts
      *            The FileSystem options.
      * @param timeout
-     *            The timeout.
+     *            The timeout in milliseconds.
      */
     public void setTimeout(final FileSystemOptions opts, final Integer timeout)
     {
