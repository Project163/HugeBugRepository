diff --git a/CHANGES.txt b/CHANGES.txt
index 83fbbee34..4a4ecf3d2 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -1,4 +1,7 @@
 Release 1.10 - Current Development
+  * Drop the source file name from the embedded file path in
+    RecursiveParserWrapper's "X-TIKA:embedded_resource_path" 
+    (TIKA-1673).
 
   * Upgraded to Java 7 (TIKA-1536).
 
diff --git a/tika-app/src/test/java/org/apache/tika/cli/TikaCLITest.java b/tika-app/src/test/java/org/apache/tika/cli/TikaCLITest.java
index 9398c7928..565058d93 100644
--- a/tika-app/src/test/java/org/apache/tika/cli/TikaCLITest.java
+++ b/tika-app/src/test/java/org/apache/tika/cli/TikaCLITest.java
@@ -175,7 +175,7 @@ public class TikaCLITest {
         int title = json.indexOf("\"title\"");
         assertTrue(enc > -1 && fb > -1 && enc < fb);
         assertTrue (fb > -1 && title > -1 && fb < title);
-        assertTrue(json.contains("\"X-TIKA:digest:MD2\":\"470481522c33aa7f6558dfc5cc0c8135\""));
+        assertTrue(json.contains("\"X-TIKA:digest:MD2\":"));
     }
 
     /**
@@ -375,7 +375,7 @@ public class TikaCLITest {
                 "    \"Application-Version\": \"15.0000\",\n" +
                 "    \"Character Count\": \"28\",\n" +
                 "    \"Character-Count-With-Spaces\": \"31\","));
-        assertTrue(content.contains("\"X-TIKA:embedded_resource_path\": \"test_recursive_embedded.docx/embed1.zip\""));
+        assertTrue(content.contains("\"X-TIKA:embedded_resource_path\": \"/embed1.zip\""));
         assertFalse(content.contains("X-TIKA:content"));
 
     }
diff --git a/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.java b/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.java
index 0358282bd..1c179f353 100644
--- a/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.java
+++ b/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.java
@@ -93,7 +93,7 @@ public class RecursiveParserWrapper implements Parser {
  
     private final Parser wrappedParser;
     private final ContentHandlerFactory contentHandlerFactory;
-    private final List<Metadata> metadatas = new LinkedList<Metadata>();
+    private final List<Metadata> metadatas = new LinkedList<>();
 
     private final boolean catchEmbeddedExceptions;
 
@@ -150,8 +150,7 @@ public class RecursiveParserWrapper implements Parser {
             Metadata metadata, ParseContext context) throws IOException,
             SAXException, TikaException {
 
-        String name = getResourceName(metadata);
-        EmbeddedParserDecorator decorator = new EmbeddedParserDecorator(name);
+        EmbeddedParserDecorator decorator = new EmbeddedParserDecorator("/");
         context.set(Parser.class, decorator);
         ContentHandler localHandler = contentHandlerFactory.getNewContentHandler();
         long started = new Date().getTime();
@@ -313,7 +312,7 @@ public class RecursiveParserWrapper implements Parser {
             
             Parser preContextParser = context.get(Parser.class);
             context.set(Parser.class, new EmbeddedParserDecorator(objectLocation));
-
+            long started = new Date().getTime();
             try {
                 super.parse(stream, localHandler, metadata, context);
             } catch (SAXException e) {
@@ -328,14 +327,7 @@ public class RecursiveParserWrapper implements Parser {
                         throw e;
                     }
                 }
-            } catch (IOException e) {
-                if (catchEmbeddedExceptions) {
-                    String trace = ExceptionUtils.getStackTrace(e);
-                    metadata.set(EMBEDDED_EXCEPTION, trace);
-                } else {
-                    throw e;
-                }
-            } catch (TikaException e) {
+            } catch (IOException|TikaException e) {
                 if (catchEmbeddedExceptions) {
                     String trace = ExceptionUtils.getStackTrace(e);
                     metadata.set(EMBEDDED_EXCEPTION, trace);
@@ -344,6 +336,8 @@ public class RecursiveParserWrapper implements Parser {
                 }
             } finally {
                 context.set(Parser.class, preContextParser);
+                long elapsedMillis = new Date().getTime() - started;
+                metadata.set(PARSE_TIME_MILLIS, Long.toString(elapsedMillis));
             }
             
             //Because of recursion, we need
diff --git a/tika-example/src/test/java/org/apache/tika/example/TestParsingExample.java b/tika-example/src/test/java/org/apache/tika/example/TestParsingExample.java
index 5a7696615..a20fb8ca8 100644
--- a/tika-example/src/test/java/org/apache/tika/example/TestParsingExample.java
+++ b/tika-example/src/test/java/org/apache/tika/example/TestParsingExample.java
@@ -76,7 +76,7 @@ public class TestParsingExample {
         assertEquals("Number of embedded documents + 1 for the container document", 12, metadataList.size());
         Metadata m = metadataList.get(6);
         //this is the location the embed3.txt text file within the outer .docx
-        assertEquals("test_recursive_embedded.docx/embed1.zip/embed2.zip/embed3.zip/embed3.txt",
+        assertEquals("/embed1.zip/embed2.zip/embed3.zip/embed3.txt",
                 m.get("X-TIKA:embedded_resource_path"));
         //it contains some html encoded content
         assertContains("When in the Course", m.get("X-TIKA:content"));
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/RecursiveParserWrapperTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/RecursiveParserWrapperTest.java
index cc0714491..14c5b4af1 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/RecursiveParserWrapperTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/RecursiveParserWrapperTest.java
@@ -166,17 +166,17 @@ public class RecursiveParserWrapperTest {
     public void testEmbeddedResourcePath() throws Exception {
 
         Set<String> targets = new HashSet<String>();
-        targets.add("test_recursive_embedded.docx/embed1.zip");
-        targets.add("test_recursive_embedded.docx/embed1.zip/embed2.zip");
-        targets.add("test_recursive_embedded.docx/embed1.zip/embed2.zip/embed3.zip");
-        targets.add("test_recursive_embedded.docx/embed1.zip/embed2.zip/embed3.zip/embed4.zip");
-        targets.add("test_recursive_embedded.docx/embed1.zip/embed2.zip/embed3.zip/embed4.zip/embed4.txt");
-        targets.add("test_recursive_embedded.docx/embed1.zip/embed2.zip/embed3.zip/embed3.txt");
-        targets.add("test_recursive_embedded.docx/embed1.zip/embed2.zip/embed2a.txt");
-        targets.add("test_recursive_embedded.docx/embed1.zip/embed2.zip/embed2b.txt");
-        targets.add("test_recursive_embedded.docx/embed1.zip/embed1b.txt");
-        targets.add("test_recursive_embedded.docx/embed1.zip/embed1a.txt");
-        targets.add("test_recursive_embedded.docx/image1.emf");
+        targets.add("/embed1.zip");
+        targets.add("/embed1.zip/embed2.zip");
+        targets.add("/embed1.zip/embed2.zip/embed3.zip");
+        targets.add("/embed1.zip/embed2.zip/embed3.zip/embed4.zip");
+        targets.add("/embed1.zip/embed2.zip/embed3.zip/embed4.zip/embed4.txt");
+        targets.add("/embed1.zip/embed2.zip/embed3.zip/embed3.txt");
+        targets.add("/embed1.zip/embed2.zip/embed2a.txt");
+        targets.add("/embed1.zip/embed2.zip/embed2b.txt");
+        targets.add("/embed1.zip/embed1b.txt");
+        targets.add("/embed1.zip/embed1a.txt");
+        targets.add("/image1.emf");
 
         Metadata metadata = new Metadata();
         metadata.set(Metadata.RESOURCE_NAME_KEY, "test_recursive_embedded.docx");
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/jdbc/SQLite3ParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/jdbc/SQLite3ParserTest.java
index 0b158faeb..c822a6bda 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/jdbc/SQLite3ParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/jdbc/SQLite3ParserTest.java
@@ -168,7 +168,7 @@ public class SQLite3ParserTest extends TikaTest {
         assertContains("The quick brown fox", metadataList.get(4).get(RecursiveParserWrapper.TIKA_CONTENT));
 
         //confirm .doc was added to blob
-        assertEquals("testSqlite3b.db/BYTES_COL_0.doc/image1.png", metadataList.get(1).get(RecursiveParserWrapper.EMBEDDED_RESOURCE_PATH));
+        assertEquals("/BYTES_COL_0.doc/image1.png", metadataList.get(1).get(RecursiveParserWrapper.EMBEDDED_RESOURCE_PATH));
     }
 
     @Test
diff --git a/tika-server/pom.xml b/tika-server/pom.xml
index 5b1154e1c..808765aff 100644
--- a/tika-server/pom.xml
+++ b/tika-server/pom.xml
@@ -255,25 +255,6 @@
           </execution>
         </executions>
       </plugin>
-      <plugin>
-        <groupId>com.qmino</groupId>
-        <artifactId>miredot-maven-plugin</artifactId>
-        <version>1.4</version>
-        <executions>
-          <execution>
-            <goals>
-              <goal>restdoc</goal>
-            </goals>
-          </execution>
-        </executions>
-        <configuration>
-          <licence>
-            <!-- Miredot license key valid until August 1st, 2016 when we can apply for a new one - http://s.apache.org/oE -->
-            UHJvamVjdHxvcmcuYXBhY2hlLnRpa2EudGlrYS1zZXJ2ZXJ8MjAxNi0wOC0wMXx0cnVlI01Dd0NGRklXRzRqRmNTZXNJb2laRElKZVF4RXpieUNTQWhSMHBmTzZCMUdMbDBPQ1B1WmJYQ3NpZElZSCtRPT0=
-          </licence>
-          <!-- insert other configuration here (optional) -->
-        </configuration>
-      </plugin>
     </plugins>
   </build>
   <profiles>
