diff --git a/server/container/core/src/test/java/org/apache/james/server/core/MimeMessageWrapperTest.java b/server/container/core/src/test/java/org/apache/james/server/core/MimeMessageWrapperTest.java
index 21e3d656d8..af49fe1951 100644
--- a/server/container/core/src/test/java/org/apache/james/server/core/MimeMessageWrapperTest.java
+++ b/server/container/core/src/test/java/org/apache/james/server/core/MimeMessageWrapperTest.java
@@ -29,12 +29,14 @@ import java.io.InputStreamReader;
 import java.util.Enumeration;
 import java.util.Properties;
 
+import com.google.common.collect.ImmutableList;
 import jakarta.mail.MessagingException;
 import jakarta.mail.Session;
 import jakarta.mail.internet.MimeMessage;
 import jakarta.mail.util.SharedByteArrayInputStream;
 
 import org.apache.commons.io.IOUtils;
+import org.apache.james.core.MailAddress;
 import org.apache.james.lifecycle.api.LifecycleUtil;
 import org.apache.james.util.ClassLoaderUtils;
 import org.apache.james.util.MimeMessageUtil;
@@ -100,6 +102,8 @@ public class MimeMessageWrapperTest extends MimeMessageFromStreamTest {
     public void setUp() throws Exception {
         mw = getMessageFromSources(content + sep + body);
         onlyHeader = getMessageFromSources(content);
+
+        ContentTypeCleaner.initialize();
     }
 
     @AfterEach
@@ -108,6 +112,20 @@ public class MimeMessageWrapperTest extends MimeMessageFromStreamTest {
         LifecycleUtil.dispose(onlyHeader);
     }
 
+    @Test
+    void testMessageWithWrongContentTypeShouldNotThrow() throws Exception {
+        MimeMessageWrapper mmw = new MimeMessageWrapper(mw);
+        new MimeMessageWrapper(mw).addHeader("Content-Type", "file;name=\"malformed.pdf\"");
+        mmw.saveChanges();
+    }
+
+    @Test
+    void testMessageWithStarContentTypeShouldNotThrow() throws Exception {
+        MimeMessageWrapper mmw = new MimeMessageWrapper(mw);
+        new MimeMessageWrapper(mw).addHeader("Content-Type", "image/*; name=\"20230720_175854.jpg\"");
+        mmw.saveChanges();
+    }
+
     @Test
     public void testDeferredMessageLoading() throws MessagingException, IOException {
         assertThat(mw.getSubject()).isEqualTo("foo");
