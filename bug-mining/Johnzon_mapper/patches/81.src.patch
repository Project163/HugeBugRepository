diff --git a/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MappingGeneratorImpl.java b/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MappingGeneratorImpl.java
index 34ae88ef..e80629ad 100644
--- a/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MappingGeneratorImpl.java
+++ b/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MappingGeneratorImpl.java
@@ -329,7 +329,7 @@ public class MappingGeneratorImpl implements MappingGenerator {
             }
 
             if (value == null) {
-                if (config.isSkipNull() && !getter.reader.isNillable()) {
+                if (!getter.reader.isNillable(!config.isSkipNull())) {
                     continue;
                 } else {
                     generator.writeNull(getterEntry.getKey());
diff --git a/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/Mappings.java b/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/Mappings.java
index 16b42fe9..e60e8f85 100644
--- a/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/Mappings.java
+++ b/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/Mappings.java
@@ -686,8 +686,8 @@ public class Mappings {
         }
 
         @Override
-        public boolean isNillable() {
-            return false;
+        public boolean isNillable(final boolean globalConfig) {
+            return globalConfig;
         }
     }
 
@@ -765,8 +765,8 @@ public class Mappings {
         }
 
         @Override
-        public boolean isNillable() {
-            return false;
+        public boolean isNillable(final boolean globalConfig) {
+            return globalConfig;
         }
     }
 
@@ -842,9 +842,9 @@ public class Mappings {
         }
 
         @Override
-        public boolean isNillable() {
+        public boolean isNillable(final boolean global) {
             for (final AccessMode.Reader r : delegates) {
-                if (r.isNillable()) {
+                if (r.isNillable(global)) {
                     return true;
                 }
             }
@@ -912,9 +912,9 @@ public class Mappings {
         }
 
         @Override
-        public boolean isNillable() {
+        public boolean isNillable(final boolean global) {
             for (final AccessMode.Writer r : delegates) {
-                if (r.isNillable()) {
+                if (r.isNillable(global)) {
                     return true;
                 }
             }
diff --git a/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/access/AccessMode.java b/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/access/AccessMode.java
index 6c956751..ece888b0 100644
--- a/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/access/AccessMode.java
+++ b/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/access/AccessMode.java
@@ -75,7 +75,7 @@ public interface AccessMode {
         <T extends Annotation> T getAnnotation(Class<T> clazz);
         <T extends Annotation> T getClassOrPackageAnnotation(Class<T> clazz);
         Adapter<?, ?> findConverter();
-        boolean isNillable();
+        boolean isNillable(boolean globalConfig);
     }
 
     interface Writer extends DecoratedType {
diff --git a/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/access/FieldAccessMode.java b/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/access/FieldAccessMode.java
index 95a9780f..e1de549c 100644
--- a/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/access/FieldAccessMode.java
+++ b/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/access/FieldAccessMode.java
@@ -132,8 +132,8 @@ public class FieldAccessMode extends BaseAccessMode {
         }
 
         @Override
-        public boolean isNillable() {
-            return false;
+        public boolean isNillable(final boolean global) {
+            return global;
         }
     }
 
diff --git a/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/access/FieldAndMethodAccessMode.java b/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/access/FieldAndMethodAccessMode.java
index c61ead71..ea5a6516 100644
--- a/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/access/FieldAndMethodAccessMode.java
+++ b/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/access/FieldAndMethodAccessMode.java
@@ -220,8 +220,8 @@ public class FieldAndMethodAccessMode extends BaseAccessMode {
         }
 
         @Override
-        public boolean isNillable() {
-            return type1.isNillable() || type2.isNillable();
+        public boolean isNillable(final boolean global) {
+            return type1.isNillable(global) || type2.isNillable(global);
         }
 
         public DecoratedType getType1() {
diff --git a/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/access/MethodAccessMode.java b/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/access/MethodAccessMode.java
index 959d69f7..fbaf1678 100644
--- a/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/access/MethodAccessMode.java
+++ b/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/access/MethodAccessMode.java
@@ -139,8 +139,8 @@ public class MethodAccessMode extends BaseAccessMode {
         }
 
         @Override
-        public boolean isNillable() {
-            return false;
+        public boolean isNillable(final boolean global) {
+            return global;
         }
     }
 
diff --git a/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/AdvancedGenericsTest.java b/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/AdvancedGenericsTest.java
index 7dcdb835..fb0e2196 100644
--- a/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/AdvancedGenericsTest.java
+++ b/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/AdvancedGenericsTest.java
@@ -48,7 +48,7 @@ public class AdvancedGenericsTest {
 
             Assert.assertTrue("Serialized String must contain \"firstName\":\"Bruce\"", customerAsString.contains("\"firstName\":\"Bruce\""));
             Assert.assertTrue("Serialized String must contain \"lastName\":\"Wayne\"", customerAsString.contains("\"lastName\":\"Wayne\""));
-            Assert.assertFalse("Serialized String must not contain \"id\"", customerAsString.contains("\"id\""));
+            Assert.assertFalse("Serialized String must not contain \"id\": " + customerAsString, customerAsString.contains("\"id\""));
             Assert.assertFalse("Serialized String must not contain \"version\"", customerAsString.contains("\"version\""));
         }
 
