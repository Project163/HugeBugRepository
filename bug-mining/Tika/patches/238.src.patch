diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java
index a8b784f3c..196678a0b 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java
@@ -185,7 +185,7 @@ class HtmlHandler extends TextContentHandler {
             } else {
                 // We have a remapped attribute name, so set it as it might have changed.
                 newAttributes.setLocalName(att, normAttrName);
-                
+
                 // And resolve relative links. Eventually this should be pushed
                 // into the HtmlMapper code.
                 if (URI_ATTRIBUTES.contains(normAttrName)) {
@@ -194,6 +194,10 @@ class HtmlHandler extends TextContentHandler {
             }
         }
 
+        if ("img".equals(name) && newAttributes.getValue("", "alt") == null) {
+            newAttributes.addAttribute("", "alt", "alt", "CDATA", "");
+        }
+
         xhtml.startElement(name, newAttributes);
     }
 
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java
index 839a1c671..aceec2fa2 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java
@@ -46,6 +46,7 @@ import org.apache.tika.io.TikaInputStream;
 import org.apache.tika.parser.ParseContext;
 import org.apache.tika.sax.XHTMLContentHandler;
 import org.xml.sax.SAXException;
+import org.xml.sax.helpers.AttributesImpl;
 
 public class WordExtractor extends AbstractPOIFSExtractor {
 
@@ -316,9 +317,12 @@ public class WordExtractor extends AbstractPOIFSExtractor {
        
        // Grab the mime type for the picture
        String mimeType = picture.getMimeType();
-       
+
        // Output the img tag
-       xhtml.startElement("img", "src", "embedded:" + filename);
+       AttributesImpl attr = new AttributesImpl();
+       attr.addAttribute("", "src", "src", "CDATA", "embedded:" + filename);
+       attr.addAttribute("", "alt", "alt", "CDATA", filename);
+       xhtml.startElement("img", attr);
        xhtml.endElement("img");
 
        // Have we already output this one?
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/html/HtmlParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/html/HtmlParserTest.java
index 816c7123f..185f7dcf3 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/html/HtmlParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/html/HtmlParserTest.java
@@ -460,7 +460,7 @@ public class HtmlParserTest extends TestCase {
         String result = sw.toString();
         
         // <img> tag should exist, with fully resolved URL
-        assertTrue(Pattern.matches("(?s).*<img src=\"http://domain.com/image.jpg\"/>.*$", result));
+        assertTrue(Pattern.matches("(?s).*src=\"http://domain.com/image.jpg\".*$", result));
     }
 
     /**
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/WordParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/WordParserTest.java
index 4a9c4624e..43983cbae 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/WordParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/WordParserTest.java
@@ -125,9 +125,9 @@ public class WordParserTest extends TestCase {
             String xml = sw.toString();
             
             // Images 1-3
-            assertTrue("Image not found in:\n"+xml, xml.contains("<img src=\"embedded:image1.png\"/>"));
-            assertTrue("Image not found in:\n"+xml, xml.contains("<img src=\"embedded:image2.jpg\"/>"));
-            assertTrue("Image not found in:\n"+xml, xml.contains("<img src=\"embedded:image3.png\"/>"));
+            assertTrue("Image not found in:\n"+xml, xml.contains("src=\"embedded:image1.png\""));
+            assertTrue("Image not found in:\n"+xml, xml.contains("src=\"embedded:image2.jpg\""));
+            assertTrue("Image not found in:\n"+xml, xml.contains("src=\"embedded:image3.png\""));
             
             // Text too
             assertTrue(xml.contains("<p>The end!"));
