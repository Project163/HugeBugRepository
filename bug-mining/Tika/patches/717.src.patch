diff --git a/tika-core/src/main/java/org/apache/tika/utils/ServiceLoaderUtils.java b/tika-core/src/main/java/org/apache/tika/utils/ServiceLoaderUtils.java
index ef2788088..5ee1fe86f 100644
--- a/tika-core/src/main/java/org/apache/tika/utils/ServiceLoaderUtils.java
+++ b/tika-core/src/main/java/org/apache/tika/utils/ServiceLoaderUtils.java
@@ -38,9 +38,9 @@ public class ServiceLoaderUtils {
                 if (t1 == t2) {
                     return n1.compareTo(n2);
                 } else if (t1) {
-                    return 1;
-                } else {
                     return -1;
+                } else {
+                    return 1;
                 }
             }
         });
diff --git a/tika-parsers/src/test/java/org/apache/tika/utils/ServiceLoaderUtilsTest.java b/tika-parsers/src/test/java/org/apache/tika/utils/ServiceLoaderUtilsTest.java
new file mode 100644
index 000000000..62660c832
--- /dev/null
+++ b/tika-parsers/src/test/java/org/apache/tika/utils/ServiceLoaderUtilsTest.java
@@ -0,0 +1,57 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.tika.utils;
+
+import static org.junit.Assert.assertNotEquals;
+import static org.junit.Assert.assertTrue;
+
+import org.apache.tika.TikaTest;
+import org.apache.tika.parser.DefaultParser;
+import org.apache.tika.parser.Parser;
+import org.junit.Test;
+
+public class ServiceLoaderUtilsTest extends TikaTest {
+    @Test
+    public void testOrdering() throws Exception {
+        //make sure that non Tika parsers come last
+        //which means that they'll overwrite Tika parsers and
+        //be preferred.
+        DefaultParser defaultParser = new DefaultParser();
+        int vorbisIndex = -1;
+        int fictIndex = -1;
+        int dcxmlIndex = -1;
+        int i = 0;
+        for (Parser p : defaultParser.getAllComponentParsers()) {
+            if ("class org.gagravarr.tika.VorbisParser".equals(p.getClass().toString())) {
+                vorbisIndex = i;
+            }
+            if ("class org.apache.tika.parser.xml.FictionBookParser".equals(p.getClass().toString())) {
+                fictIndex = i;
+            }
+            if ("class org.apache.tika.parser.xml.DcXMLParser".equals(p.getClass().toString())) {
+                dcxmlIndex = i;
+            }
+            i++;
+        }
+
+        assertNotEquals(vorbisIndex, fictIndex);
+        assertNotEquals(fictIndex, dcxmlIndex);
+        assertTrue(vorbisIndex > fictIndex);
+        assertTrue(fictIndex > dcxmlIndex);
+    }
+}
