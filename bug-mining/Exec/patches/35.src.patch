diff --git a/src/test/java/org/apache/commons/exec/issues/Exec65Test.java b/src/test/java/org/apache/commons/exec/issues/Exec65Test.java
index e2300927..fc6b74f8 100644
--- a/src/test/java/org/apache/commons/exec/issues/Exec65Test.java
+++ b/src/test/java/org/apache/commons/exec/issues/Exec65Test.java
@@ -22,6 +22,8 @@ import org.junit.Test;
 
 import java.io.File;
 
+import static org.junit.Assert.assertTrue;
+
 /**
  * Test to show that watchdog can destroy 'sudo' and 'sleep'.
  *
@@ -60,6 +62,21 @@ public class Exec65Test {
         executor.execute(command);
     }
 
+    @Test(timeout = 15000)
+    public void testExec65WithSleepUsingShellScriptAndRuntimeDirectly() throws Exception
+    {
+        Process process = Runtime.getRuntime().exec(TestUtil.resolveScriptForOS(testDir + "/sleep").getAbsolutePath());
+        Thread.sleep(3000);
+
+        process.destroy();
+
+        while(process.isAlive()) {
+            Thread.sleep(50);
+        }
+
+        assertTrue(process.exitValue() != 0);
+    }
+
     /**
      * Please note that this tests make assumptions about the environment. It assumes
      * that user "root" exists and that the current user is not a "sudoer" already.
