diff --git a/src/native/windows/apps/prunsrv/prunsrv.c b/src/native/windows/apps/prunsrv/prunsrv.c
index cb8ceff..d7f0bd4 100644
--- a/src/native/windows/apps/prunsrv/prunsrv.c
+++ b/src/native/windows/apps/prunsrv/prunsrv.c
@@ -1346,8 +1346,13 @@ void WINAPI serviceMain(DWORD argc, LPTSTR *argv)
         if (!lstrcmpiW(SO_STOPMODE, PRSRV_JVM)) {
             _jni_shutdown = TRUE;
             _jni_sclass = WideToANSI(SO_STOPCLASS);
-            apxStrCharReplaceA(_jni_sclass, '.', '/');
-            _jni_sparam = SO_STOPPARAMS;
+            if (IS_VALID_STRING(SO_STOPCLASS)) {
+                apxStrCharReplaceA(_jni_sclass, '.', '/');
+                _jni_sparam = SO_STOPPARAMS;
+            }
+            else {
+                _jni_sclass = "java/lang/System";
+            }
         }
         else if (!lstrcmpiW(SO_STOPMODE, PRSRV_JAVA)) {
             LPWSTR jx = NULL, szJH = SO_JAVAHOME;
diff --git a/src/native/windows/include/apxwin.h b/src/native/windows/include/apxwin.h
index f09726a..d245efb 100644
--- a/src/native/windows/include/apxwin.h
+++ b/src/native/windows/include/apxwin.h
@@ -63,6 +63,7 @@ typedef _W64 int            intptr_t;
 
 #define IS_INVALID_HANDLE(h) (((h) == NULL || (h) == INVALID_HANDLE_VALUE))
 #define IS_VALID_STRING(s)   ((s) != NULL && *(s) != 0)
+#define IS_EMPTY_STRING(s)   ((s) == NULL || *(s) == 0)
 
 #define DYNOLAD_TYPE_DECLARE(fnName, callconv, retType)             \
     typedef retType (callconv *PFN_##fnName)                        \
diff --git a/src/native/windows/src/utils.c b/src/native/windows/src/utils.c
index 39b47b5..68d0a0d 100644
--- a/src/native/windows/src/utils.c
+++ b/src/native/windows/src/utils.c
@@ -499,6 +499,8 @@ LPTSTR apxStrCharRemove(LPTSTR szString, TCHAR chSkip)
 {
   LPTSTR p = szString;
   LPTSTR q = szString;
+  if (IS_EMPTY_STRING(szString))
+    return szString;
   while (*p) {
     if(*p != chSkip)
       *q++ = *p;
@@ -514,6 +516,8 @@ DWORD apxStrCharRemoveA(LPSTR szString, CHAR chSkip)
   LPSTR p = szString;
   LPSTR q = szString;
   DWORD c = 0;
+  if (IS_EMPTY_STRING(szString))
+    return c;
   while (*p) {
     if(*p != chSkip)
       *q++ = *p;
@@ -531,6 +535,8 @@ DWORD apxStrCharRemoveW(LPWSTR szString, WCHAR chSkip)
   LPWSTR p = szString;
   LPWSTR q = szString;
   DWORD  c = 0;
+  if (IS_EMPTY_STRING(szString))
+    return c;
   while (*p) {
     if(*p != chSkip)
       *q++ = *p;
@@ -548,6 +554,9 @@ apxStrCharReplaceA(LPSTR szString, CHAR chReplace, CHAR chReplaceWith)
 {
   LPSTR p = szString;
   LPSTR q = szString;
+  
+  if (IS_EMPTY_STRING(szString))
+    return;
   while (*p) {
     if(*p == chReplace)
       *q++ = chReplaceWith;
@@ -563,6 +572,8 @@ apxStrCharReplaceW(LPWSTR szString, WCHAR chReplace, WCHAR chReplaceWith)
 {
   LPWSTR p = szString;
   LPWSTR q = szString;
+  if (IS_EMPTY_STRING(szString))
+    return;
   while (*p) {
     if(*p == chReplace)
       *q++ = chReplaceWith;
