diff --git a/tika-core/src/main/java/org/apache/tika/detect/CompositeDetector.java b/tika-core/src/main/java/org/apache/tika/detect/CompositeDetector.java
index c77a04a27..2f6b6d869 100644
--- a/tika-core/src/main/java/org/apache/tika/detect/CompositeDetector.java
+++ b/tika-core/src/main/java/org/apache/tika/detect/CompositeDetector.java
@@ -25,6 +25,7 @@ import java.util.Collections;
 import java.util.List;
 
 import org.apache.tika.metadata.Metadata;
+import org.apache.tika.metadata.TikaCoreProperties;
 import org.apache.tika.mime.MediaType;
 import org.apache.tika.mime.MediaTypeRegistry;
 
@@ -74,6 +75,12 @@ public class CompositeDetector implements Detector {
             throws IOException { 
         MediaType type = MediaType.OCTET_STREAM;
         for (Detector detector : getDetectors()) {
+            //short circuit via OverrideDetector
+            //can't rely on ordering because subsequent detector may
+            //change Override's to a specialization of Override's
+            if (detector instanceof OverrideDetector && metadata.get(TikaCoreProperties.CONTENT_TYPE_OVERRIDE) != null) {
+                return detector.detect(input, metadata);
+            }
             MediaType detected = detector.detect(input, metadata);
             if (registry.isSpecializationOf(detected, type)) {
                 type = detected;
diff --git a/tika-core/src/main/java/org/apache/tika/detect/OverrideDetector.java b/tika-core/src/main/java/org/apache/tika/detect/OverrideDetector.java
new file mode 100644
index 000000000..318ede8a0
--- /dev/null
+++ b/tika-core/src/main/java/org/apache/tika/detect/OverrideDetector.java
@@ -0,0 +1,41 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.tika.detect;
+
+import org.apache.tika.metadata.Metadata;
+import org.apache.tika.metadata.TikaCoreProperties;
+import org.apache.tika.mime.MediaType;
+
+import java.io.IOException;
+import java.io.InputStream;
+
+/**
+ * Use this to force a content type detection via the
+ * {@link TikaCoreProperties#CONTENT_TYPE_OVERRIDE} key in the metadata object.
+ */
+public class OverrideDetector implements Detector {
+
+    @Override
+    public MediaType detect(InputStream input, Metadata metadata) throws IOException {
+        String type = metadata.get(TikaCoreProperties.CONTENT_TYPE_OVERRIDE);
+        if (type == null) {
+            return MediaType.OCTET_STREAM;
+        } else {
+            return MediaType.parse(type);
+        }
+    }
+}
diff --git a/tika-core/src/main/java/org/apache/tika/metadata/TikaCoreProperties.java b/tika-core/src/main/java/org/apache/tika/metadata/TikaCoreProperties.java
index 50b751f37..e97562d89 100644
--- a/tika-core/src/main/java/org/apache/tika/metadata/TikaCoreProperties.java
+++ b/tika-core/src/main/java/org/apache/tika/metadata/TikaCoreProperties.java
@@ -109,6 +109,9 @@ public interface TikaCoreProperties {
     public static final Property CONTENT_TYPE_HINT =
             Property.internalText(HttpHeaders.CONTENT_TYPE+"-Hint");
 
+    Property CONTENT_TYPE_OVERRIDE =
+            Property.internalText(HttpHeaders.CONTENT_TYPE+"-Override");
+
     /**
      * @see DublinCore#FORMAT
      */
