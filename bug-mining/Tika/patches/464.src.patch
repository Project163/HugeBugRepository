diff --git a/CHANGES.txt b/CHANGES.txt
index 2a37885df..56d2b7ad6 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -60,6 +60,9 @@ Release 1.3 - Current Development
     archive, because it failed to create the parent directories first
     (TIKA-1031).
 
+  * XML: a space character is now added before each element
+    (TIKA-1048)
+
 Release 1.2 - 07/10/2012
 ---------------------------------
 
diff --git a/tika-core/src/main/java/org/apache/tika/sax/TextContentHandler.java b/tika-core/src/main/java/org/apache/tika/sax/TextContentHandler.java
index 469114776..c98904855 100644
--- a/tika-core/src/main/java/org/apache/tika/sax/TextContentHandler.java
+++ b/tika-core/src/main/java/org/apache/tika/sax/TextContentHandler.java
@@ -16,6 +16,7 @@
  */
 package org.apache.tika.sax;
 
+import org.xml.sax.Attributes;
 import org.xml.sax.ContentHandler;
 import org.xml.sax.SAXException;
 import org.xml.sax.helpers.DefaultHandler;
@@ -29,10 +30,18 @@ import org.xml.sax.helpers.DefaultHandler;
  */
 public class TextContentHandler extends DefaultHandler {
 
+    private static final char[] SPACE = new char[] {' '};
+
     private final ContentHandler delegate;
+    private final boolean addSpaceBetweenElements;
 
     public TextContentHandler(ContentHandler delegate) {
+        this(delegate, false);
+    }
+
+    public TextContentHandler(ContentHandler delegate, boolean addSpaceBetweenElements) {
         this.delegate = delegate;
+        this.addSpaceBetweenElements = addSpaceBetweenElements;
     }
 
     @Override
@@ -47,6 +56,14 @@ public class TextContentHandler extends DefaultHandler {
         delegate.ignorableWhitespace(ch, start, length);
     }
 
+    @Override
+    public void startElement(String uri, String localName, String qName, Attributes attributes)
+             throws SAXException {
+        if (addSpaceBetweenElements) {
+            delegate.characters(SPACE, 0, SPACE.length);
+        }
+    }
+
     @Override
     public void startDocument() throws SAXException {
         delegate.startDocument();
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/xml/XMLParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/xml/XMLParser.java
index 08487cd0e..0a064d65c 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/xml/XMLParser.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/xml/XMLParser.java
@@ -84,6 +84,6 @@ public class XMLParser extends AbstractParser {
 
     protected ContentHandler getContentHandler(
             ContentHandler handler, Metadata metadata, ParseContext context) {
-        return new TextContentHandler(handler);
+        return new TextContentHandler(handler, true);
     }
 }
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/ParsingReaderTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/ParsingReaderTest.java
index 9f161f341..0b74f0434 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/ParsingReaderTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/ParsingReaderTest.java
@@ -53,11 +53,13 @@ public class ParsingReaderTest extends TestCase {
         String data = "<p>test <span>content</span></p>";
         InputStream stream = new ByteArrayInputStream(data.getBytes("UTF-8"));
         Reader reader = new ParsingReader(stream, "test.xml");
+        assertEquals(' ', (char) reader.read());
         assertEquals('t', (char) reader.read());
         assertEquals('e', (char) reader.read());
         assertEquals('s', (char) reader.read());
         assertEquals('t', (char) reader.read());
         assertEquals(' ', (char) reader.read());
+        assertEquals(' ', (char) reader.read());
         assertEquals('c', (char) reader.read());
         assertEquals('o', (char) reader.read());
         assertEquals('n', (char) reader.read());
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/xml/DcXMLParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/xml/DcXMLParserTest.java
index 087966e12..88f8de8ec 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/xml/DcXMLParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/xml/DcXMLParserTest.java
@@ -18,15 +18,14 @@ package org.apache.tika.parser.xml;
 
 import java.io.InputStream;
 
-import junit.framework.TestCase;
-
+import org.apache.tika.TikaTest;
 import org.apache.tika.metadata.Metadata;
 import org.apache.tika.metadata.TikaCoreProperties;
 import org.apache.tika.sax.BodyContentHandler;
 import org.xml.sax.ContentHandler;
 import org.xml.sax.helpers.DefaultHandler;
 
-public class DcXMLParserTest extends TestCase {
+public class DcXMLParserTest extends TikaTest {
 
     public void testXMLParserAsciiChars() throws Exception {
         InputStream input = DcXMLParserTest.class.getResourceAsStream(
@@ -92,4 +91,9 @@ public class DcXMLParserTest extends TestCase {
         }
     }
 
+    // TIKA-1048
+    public void testNoSpaces() throws Exception {
+      String text = getXML("testXML2.xml").xml;
+      assertFalse(text.contains("testSubject"));
+    }
 }
diff --git a/tika-parsers/src/test/resources/test-documents/testXML2.xml b/tika-parsers/src/test/resources/test-documents/testXML2.xml
new file mode 100644
index 000000000..69e74a7dc
--- /dev/null
+++ b/tika-parsers/src/test/resources/test-documents/testXML2.xml
@@ -0,0 +1 @@
+<?xml version="1.0" encoding="utf-8" ?><searchml xmlns="http://www.foobar.com"><document type="Microsoft Word 2003/2004"><doc_properties><doc_property type="title">Title test</doc_property><doc_property type="subject">Subject test</doc_property></doc_properties></document></searchml>
