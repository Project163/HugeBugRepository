diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/jpeg/JpegExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/jpeg/JpegExtractor.java
new file mode 100644
index 000000000..28e7f8b0a
--- /dev/null
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/jpeg/JpegExtractor.java
@@ -0,0 +1,64 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.tika.parser.jpeg;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.Iterator;
+
+import org.apache.tika.exception.TikaException;
+import org.apache.tika.metadata.Metadata;
+import org.xml.sax.SAXException;
+
+import com.drew.imaging.jpeg.JpegMetadataReader;
+import com.drew.imaging.jpeg.JpegProcessingException;
+import com.drew.metadata.Directory;
+import com.drew.metadata.MetadataException;
+import com.drew.metadata.Tag;
+
+class JpegExtractor {
+
+    private final Metadata metadata;
+
+    public JpegExtractor(Metadata metadata) {
+        this.metadata = metadata;
+    }
+
+    public void parse(InputStream stream)
+            throws IOException, SAXException, TikaException {
+        try {
+            com.drew.metadata.Metadata jpegMetadata =
+                JpegMetadataReader.readMetadata(stream);
+
+            Iterator<?> directories = jpegMetadata.getDirectoryIterator();
+            while (directories.hasNext()) {
+                Directory directory = (Directory) directories.next();
+                Iterator<?> tags = directory.getTagIterator();
+
+                while (tags.hasNext()) {
+                    Tag tag = (Tag)tags.next();
+                    metadata.set(tag.getTagName(), tag.getDescription());
+                }
+            }
+        } catch (JpegProcessingException e) {
+            throw new TikaException("Can't read JPEG metadata", e);
+        } catch (MetadataException e) {
+            throw new TikaException("Can't read JPEG metadata", e);
+        }
+    }
+
+}
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/jpeg/JpegParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/jpeg/JpegParser.java
index 27ee335f7..f91f7037e 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/jpeg/JpegParser.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/jpeg/JpegParser.java
@@ -19,7 +19,6 @@ package org.apache.tika.parser.jpeg;
 import java.io.IOException;
 import java.io.InputStream;
 import java.util.Collections;
-import java.util.Iterator;
 import java.util.Set;
 
 import org.apache.tika.exception.TikaException;
@@ -31,12 +30,6 @@ import org.apache.tika.sax.XHTMLContentHandler;
 import org.xml.sax.ContentHandler;
 import org.xml.sax.SAXException;
 
-import com.drew.imaging.jpeg.JpegMetadataReader;
-import com.drew.imaging.jpeg.JpegProcessingException;
-import com.drew.metadata.Directory;
-import com.drew.metadata.MetadataException;
-import com.drew.metadata.Tag;
-
 public class JpegParser implements Parser {
 
     private static final Set<MediaType> SUPPORTED_TYPES =
@@ -59,25 +52,7 @@ public class JpegParser implements Parser {
             InputStream stream, ContentHandler handler,
             Metadata metadata, ParseContext context)
             throws IOException, SAXException, TikaException {
-        try {
-            com.drew.metadata.Metadata jpegMetadata = JpegMetadataReader.readMetadata(stream);
-
-            Iterator<?> directories = jpegMetadata.getDirectoryIterator();
-            while (directories.hasNext()) {
-                Directory directory = (Directory) directories.next();
-                Iterator<?> tags = directory.getTagIterator();
-
-                while (tags.hasNext()) {
-                    Tag tag = (Tag)tags.next();
-                    
-                    metadata.set(tag.getTagName(), tag.getDescription());
-                }
-            }
-        } catch (JpegProcessingException e) {
-            throw new TikaException("Can't read JPEG metadata", e);
-        } catch (MetadataException e) {
-            throw new TikaException("Can't read JPEG metadata", e);
-        }
+        new JpegExtractor(metadata).parse(stream);
 
         XHTMLContentHandler xhtml = new XHTMLContentHandler(handler, metadata);
         xhtml.startDocument();
