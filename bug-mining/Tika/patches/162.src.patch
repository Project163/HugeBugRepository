diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/dwg/DWGParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/dwg/DWGParser.java
index b56a7bdce..32896416e 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/dwg/DWGParser.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/dwg/DWGParser.java
@@ -73,8 +73,9 @@ public class DWGParser implements Parser {
 
         if (version.equals("AC1018")) {
             metadata.set(Metadata.CONTENT_TYPE, TYPE.toString());
-            skipToPropertyInfoSection(stream, header);
-            get2004Props(stream,metadata,xhtml);
+            if(skipToPropertyInfoSection(stream, header)){
+                get2004Props(stream,metadata,xhtml);
+            }
         } else if (version.equals("AC1021") || version.equals("AC1024")) {
             metadata.set(Metadata.CONTENT_TYPE, TYPE.toString());
             skipToPropertyInfoSection(stream, header);
@@ -147,16 +148,20 @@ public class DWGParser implements Parser {
         xhtml.element("p", value);
     }
 
-    private void skipToPropertyInfoSection(InputStream stream, byte[] header)
+    private boolean skipToPropertyInfoSection(InputStream stream, byte[] header)
             throws IOException {
         // The offset is stored in the header from 0x20 onwards
         long offsetToSection = LittleEndian.getLong(header, 0x20);
         long toSkip = offsetToSection - header.length;
+        if(offsetToSection == 0){
+            return false;
+        }        
         while (toSkip > 0) {
             byte[] skip = new byte[Math.min((int) toSkip, 0x4000)];
             IOUtils.readFully(stream, skip);
             toSkip -= skip.length;
         }
+        return true;
     }
 
     public void parse(
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/dwg/DWGParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/dwg/DWGParserTest.java
index eb98ffcef..9e4f4d375 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/dwg/DWGParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/dwg/DWGParserTest.java
@@ -32,6 +32,12 @@ public class DWGParserTest extends TestCase {
         testParser(input);
     }
 
+    public void testDWG2004ParserNoHeaderAddress() throws Exception {
+        InputStream input = DWGParserTest.class.getResourceAsStream(
+                "/test-documents/testDWG2004_no_header.dwg");
+        testParserNoHeader(input);
+    }
+
     public void testDWG2007Parser() throws Exception {
         InputStream input = DWGParserTest.class.getResourceAsStream(
                 "/test-documents/testDWG2007.dwg");
@@ -74,4 +80,25 @@ public class DWGParserTest extends TestCase {
         }
     }
 
+    private void testParserNoHeader(InputStream input) throws Exception {
+        try {
+            Metadata metadata = new Metadata();
+            ContentHandler handler = new BodyContentHandler();
+            new DWGParser().parse(input, handler, metadata);
+
+            assertEquals("image/vnd.dwg", metadata.get(Metadata.CONTENT_TYPE));
+            
+            assertNull(metadata.get(Metadata.TITLE));
+            assertNull(metadata.get(Metadata.SUBJECT));
+            assertNull(metadata.get(Metadata.AUTHOR));
+            assertNull(metadata.get(Metadata.KEYWORDS));
+            assertNull(metadata.get(Metadata.COMMENTS));
+            assertNull(metadata.get(Metadata.RELATION));
+
+            String content = handler.toString();
+            assertTrue(content.contains(""));
+        } finally {
+            input.close();
+        }
+    }
 }
diff --git a/tika-parsers/src/test/resources/test-documents/testDWG2004_no_header.dwg b/tika-parsers/src/test/resources/test-documents/testDWG2004_no_header.dwg
new file mode 100644
index 000000000..13bd1a561
Binary files /dev/null and b/tika-parsers/src/test/resources/test-documents/testDWG2004_no_header.dwg differ
