diff --git a/mailet/standard/src/main/java/org/apache/james/transport/mailets/AddHabeasWarrantMark.java b/mailet/standard/src/main/java/org/apache/james/transport/mailets/AddHabeasWarrantMark.java
index a51a6c65fe..a71fa8f2e4 100644
--- a/mailet/standard/src/main/java/org/apache/james/transport/mailets/AddHabeasWarrantMark.java
+++ b/mailet/standard/src/main/java/org/apache/james/transport/mailets/AddHabeasWarrantMark.java
@@ -17,18 +17,15 @@
  * under the License.                                           *
  ****************************************************************/
 
-
-
 package org.apache.james.transport.mailets;
 
 import javax.mail.MessagingException;
+import javax.mail.internet.MimeMessage;
 
 import org.apache.james.transport.matchers.HasHabeasWarrantMark;
 import org.apache.mailet.Experimental;
 import org.apache.mailet.Mail;
 import org.apache.mailet.base.GenericMailet;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 
 /**
  * <p>This matcher adds the Hebeas Warrant Mark to a message.
@@ -88,7 +85,6 @@ import org.slf4j.LoggerFactory;
  */
 @Experimental
 public class AddHabeasWarrantMark extends GenericMailet {
-    private static final Logger LOGGER = LoggerFactory.getLogger(AddHabeasWarrantMark.class);
 
     /**
      * Called by the mailet container to allow the mailet to process to
@@ -103,18 +99,13 @@ public class AddHabeasWarrantMark extends GenericMailet {
      *      an exception that interferes with the mailet's normal operation
      */
     public void service(Mail mail) throws MessagingException {
-        try {
-            javax.mail.internet.MimeMessage message = mail.getMessage();
-
-            for(int i = 0 ; i < HasHabeasWarrantMark.warrantMark.length ; i++) {
-                message.setHeader(HasHabeasWarrantMark.warrantMark[i][0], HasHabeasWarrantMark.warrantMark[i][1]);
-            }
+        MimeMessage message = mail.getMessage();
 
-            message.saveChanges();
-        }
-        catch (MessagingException me) {
-            LOGGER.error("Error while adding habeas", me);
+        for(int i = 0 ; i < HasHabeasWarrantMark.warrantMark.length ; i++) {
+            message.setHeader(HasHabeasWarrantMark.warrantMark[i][0], HasHabeasWarrantMark.warrantMark[i][1]);
         }
+
+        message.saveChanges();
     }
 
     /*
diff --git a/mailet/standard/src/main/java/org/apache/james/transport/mailets/ClassifyBounce.java b/mailet/standard/src/main/java/org/apache/james/transport/mailets/ClassifyBounce.java
index e33af5a3a3..e8a8c6c055 100644
--- a/mailet/standard/src/main/java/org/apache/james/transport/mailets/ClassifyBounce.java
+++ b/mailet/standard/src/main/java/org/apache/james/transport/mailets/ClassifyBounce.java
@@ -73,18 +73,14 @@ public class ClassifyBounce extends GenericMailet {
      * @param mail the mail being processed
      * @throws MessagingException if an error arises during message processing
      */
-    public void service(Mail mail) {
-        try {
-            MimeMessage message = mail.getMessage();
-            Classifier classifier = new Classifier(message);
-            String classification = classifier.getClassification();
-            //if ( !classification.equals("Normal") ) {
-            message.setHeader(headerName, classification);
-            message.saveChanges();
-            //}
-        } catch (MessagingException me) {
-            LOGGER.error("Error classifying message: ", me);
-        }
+    public void service(Mail mail) throws MessagingException {
+        MimeMessage message = mail.getMessage();
+        Classifier classifier = new Classifier(message);
+        String classification = classifier.getClassification();
+        //if ( !classification.equals("Normal") ) {
+        message.setHeader(headerName, classification);
+        message.saveChanges();
+        //}
     }
 
     /**
diff --git a/mailet/standard/src/main/java/org/apache/james/transport/mailets/MailAttributesListToMimeHeaders.java b/mailet/standard/src/main/java/org/apache/james/transport/mailets/MailAttributesListToMimeHeaders.java
index 60d2208fb1..2b26a710f6 100644
--- a/mailet/standard/src/main/java/org/apache/james/transport/mailets/MailAttributesListToMimeHeaders.java
+++ b/mailet/standard/src/main/java/org/apache/james/transport/mailets/MailAttributesListToMimeHeaders.java
@@ -64,15 +64,11 @@ public class MailAttributesListToMimeHeaders extends GenericMailet {
     }
 
     @Override
-    public void service(Mail mail) {
-        try {
-            MimeMessage message = mail.getMessage();
-            attributeNameToHeader.entrySet()
-                .forEach(entry -> addAttributeToHeader(mail, message, entry));
-            message.saveChanges();
-        } catch (MessagingException e) {
-            LOGGER.warn("Exception while adding headers", e);
-        }
+    public void service(Mail mail) throws MessagingException {
+        MimeMessage message = mail.getMessage();
+        attributeNameToHeader.entrySet()
+            .forEach(entry -> addAttributeToHeader(mail, message, entry));
+        message.saveChanges();
     }
 
     private void addAttributeToHeader(Mail mail, MimeMessage message, Entry<String, String> entry) {
diff --git a/mailet/standard/src/main/java/org/apache/james/transport/mailets/MailAttributesToMimeHeaders.java b/mailet/standard/src/main/java/org/apache/james/transport/mailets/MailAttributesToMimeHeaders.java
index 03c882d1bf..c1b37eed9e 100644
--- a/mailet/standard/src/main/java/org/apache/james/transport/mailets/MailAttributesToMimeHeaders.java
+++ b/mailet/standard/src/main/java/org/apache/james/transport/mailets/MailAttributesToMimeHeaders.java
@@ -27,8 +27,6 @@ import javax.mail.internet.MimeMessage;
 
 import org.apache.mailet.Mail;
 import org.apache.mailet.base.GenericMailet;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 
 import com.google.common.base.Strings;
 
@@ -45,7 +43,6 @@ import com.google.common.base.Strings;
  * </code></pre>
  */
 public class MailAttributesToMimeHeaders extends GenericMailet {
-    private static final Logger LOGGER = LoggerFactory.getLogger(MailAttributesToMimeHeaders.class);
 
     private Map<String, String> mappings;
 
@@ -61,20 +58,16 @@ public class MailAttributesToMimeHeaders extends GenericMailet {
     }
 
     @Override
-    public void service(Mail mail) {
-        try {
-            MimeMessage message = mail.getMessage();
-            for (Entry<String, String> entry : mappings.entrySet()) {
-                String value = (String) mail.getAttribute(entry.getKey());
-                if (value != null) {
-                    String headerName = entry.getValue();
-                    message.addHeader(headerName, value);
-                }
+    public void service(Mail mail) throws MessagingException {
+        MimeMessage message = mail.getMessage();
+        for (Entry<String, String> entry : mappings.entrySet()) {
+            String value = (String) mail.getAttribute(entry.getKey());
+            if (value != null) {
+                String headerName = entry.getValue();
+                message.addHeader(headerName, value);
             }
-            message.saveChanges();
-        } catch (MessagingException e) {
-            LOGGER.error("Encountered exception", e);
         }
+        message.saveChanges();
     }
 
 }
diff --git a/mailet/standard/src/main/java/org/apache/james/transport/mailets/RemoveMimeHeader.java b/mailet/standard/src/main/java/org/apache/james/transport/mailets/RemoveMimeHeader.java
index 43edd76c25..5f19e804e9 100644
--- a/mailet/standard/src/main/java/org/apache/james/transport/mailets/RemoveMimeHeader.java
+++ b/mailet/standard/src/main/java/org/apache/james/transport/mailets/RemoveMimeHeader.java
@@ -17,8 +17,6 @@
  * under the License.                                           *
  ****************************************************************/
 
-
-
 package org.apache.james.transport.mailets;
 
 import java.util.List;
@@ -29,8 +27,6 @@ import javax.mail.internet.MimeMessage;
 import org.apache.mailet.Mail;
 import org.apache.mailet.MailetException;
 import org.apache.mailet.base.GenericMailet;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 
 import com.google.common.base.Splitter;
 import com.google.common.collect.ImmutableList;
@@ -48,8 +44,6 @@ import com.google.common.collect.ImmutableList;
  * 
  */
 public class RemoveMimeHeader extends GenericMailet {
-    private static final Logger LOGGER = LoggerFactory.getLogger(RemoveMimeHeader.class);
-    
     private List<String> headers;
 
     @Override
@@ -67,15 +61,11 @@ public class RemoveMimeHeader extends GenericMailet {
     }
 
     @Override
-    public void service(Mail mail) {
-        try {
-            MimeMessage  message = mail.getMessage();
-            for (String header : headers) {
-                message.removeHeader(header);
-            }
-            message.saveChanges();
-        } catch (MessagingException e) {
-            LOGGER.error("Unable to remove headers: ", e);
+    public void service(Mail mail) throws MessagingException {
+        MimeMessage  message = mail.getMessage();
+        for (String header : headers) {
+            message.removeHeader(header);
         }
+        message.saveChanges();
     }
 }
diff --git a/mailet/standard/src/main/java/org/apache/james/transport/mailets/SetMimeHeader.java b/mailet/standard/src/main/java/org/apache/james/transport/mailets/SetMimeHeader.java
index 70c7c19cd6..9ba695e3f1 100644
--- a/mailet/standard/src/main/java/org/apache/james/transport/mailets/SetMimeHeader.java
+++ b/mailet/standard/src/main/java/org/apache/james/transport/mailets/SetMimeHeader.java
@@ -26,8 +26,6 @@ import javax.mail.internet.MimeMessage;
 
 import org.apache.mailet.Mail;
 import org.apache.mailet.base.GenericMailet;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 
 import com.google.common.base.Strings;
 
@@ -46,8 +44,6 @@ import com.google.common.base.Strings;
  * @version 1.0.0, 2002-09-11
  */
 public class SetMimeHeader extends GenericMailet {
-    private static final Logger LOGGER = LoggerFactory.getLogger(SetMimeHeader.class);
-
     private String headerName;
     private String headerValue;
 
@@ -62,15 +58,11 @@ public class SetMimeHeader extends GenericMailet {
     }
 
     @Override
-    public void service(Mail mail) {
-        try {
-            MimeMessage message = mail.getMessage () ;
+    public void service(Mail mail) throws MessagingException {
+        MimeMessage message = mail.getMessage () ;
 
-            message.addHeader(headerName, headerValue);
-            message.saveChanges();
-        } catch (javax.mail.MessagingException me) {
-            LOGGER.error("Encountered exception", me);
-        }
+        message.addHeader(headerName, headerValue);
+        message.saveChanges();
     }
 
     @Override
diff --git a/mailet/standard/src/main/java/org/apache/james/transport/matchers/FetchedFrom.java b/mailet/standard/src/main/java/org/apache/james/transport/matchers/FetchedFrom.java
index a16baffe8c..db28d4cf79 100644
--- a/mailet/standard/src/main/java/org/apache/james/transport/matchers/FetchedFrom.java
+++ b/mailet/standard/src/main/java/org/apache/james/transport/matchers/FetchedFrom.java
@@ -19,12 +19,14 @@
 
 package org.apache.james.transport.matchers;
 
-import org.apache.mailet.base.GenericMatcher;
-import org.apache.mailet.Mail;
-import org.apache.james.core.MailAddress;
+import java.util.Collection;
 
+import javax.mail.MessagingException;
 import javax.mail.internet.MimeMessage;
-import java.util.Collection;
+
+import org.apache.james.core.MailAddress;
+import org.apache.mailet.Mail;
+import org.apache.mailet.base.GenericMatcher;
 
 import com.google.common.base.Objects;
 
@@ -41,7 +43,7 @@ public class FetchedFrom extends GenericMatcher {
 
     public static final String X_FETCHED_FROM = "X-fetched-from";
 
-    public Collection<MailAddress> match(Mail mail) throws javax.mail.MessagingException {
+    public Collection<MailAddress> match(Mail mail) throws MessagingException {
         MimeMessage message = mail.getMessage();
         String fetchHeaderValue = message.getHeader(X_FETCHED_FROM, null);
         if (Objects.equal(fetchHeaderValue, getCondition())) {
diff --git a/mailet/standard/src/test/java/org/apache/james/transport/mailets/RemoveMimeHeaderTest.java b/mailet/standard/src/test/java/org/apache/james/transport/mailets/RemoveMimeHeaderTest.java
index 3a045117c3..5482b525ad 100644
--- a/mailet/standard/src/test/java/org/apache/james/transport/mailets/RemoveMimeHeaderTest.java
+++ b/mailet/standard/src/test/java/org/apache/james/transport/mailets/RemoveMimeHeaderTest.java
@@ -21,6 +21,7 @@
 package org.apache.james.transport.mailets;
 
 import static org.assertj.core.api.Assertions.assertThat;
+import static org.assertj.core.api.Assertions.assertThatThrownBy;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.when;
 
@@ -145,7 +146,7 @@ public class RemoveMimeHeaderTest {
 
     @SuppressWarnings("unchecked")
     @Test
-    public void serviceShouldNotThrowWhenExceptionOccured() throws MessagingException {
+    public void serviceShouldThrowWhenExceptionOccured() throws MessagingException {
         FakeMailetConfig mailetConfig = FakeMailetConfig.builder()
                 .mailetName("Test")
                 .setProperty("name", "")
@@ -156,7 +157,8 @@ public class RemoveMimeHeaderTest {
         when(mail.getMessage())
             .thenThrow(MessagingException.class);
 
-        mailet.service(mail);
+        assertThatThrownBy(() -> mailet.service(mail))
+            .isInstanceOf(MessagingException.class);
     }
 
     private Mail createMail(MimeMessage message) throws MessagingException {
diff --git a/mailet/standard/src/test/java/org/apache/james/transport/mailets/SetMimeHeaderTest.java b/mailet/standard/src/test/java/org/apache/james/transport/mailets/SetMimeHeaderTest.java
index a08ee21187..8d122e4c40 100644
--- a/mailet/standard/src/test/java/org/apache/james/transport/mailets/SetMimeHeaderTest.java
+++ b/mailet/standard/src/test/java/org/apache/james/transport/mailets/SetMimeHeaderTest.java
@@ -21,6 +21,7 @@
 package org.apache.james.transport.mailets;
 
 import static org.assertj.core.api.Assertions.assertThat;
+import static org.assertj.core.api.Assertions.assertThatThrownBy;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.when;
 
@@ -83,7 +84,7 @@ public class SetMimeHeaderTest {
     }
 
     @Test
-    public void shouldNotThrowOnMessagingException() throws MessagingException {
+    public void shouldThrowOnMessagingException() throws MessagingException {
         FakeMailetConfig mailetConfig = FakeMailetConfig.builder()
                 .mailetName("Test")
                 .setProperty("name", "header-name")
@@ -93,7 +94,9 @@ public class SetMimeHeaderTest {
         
         Mail mail = mock(Mail.class);
         when(mail.getMessage()).thenThrow(new MessagingException());
-        mailet.service(mail);
+
+        assertThatThrownBy(() -> mailet.service(mail))
+            .isInstanceOf(MessagingException.class);
     }
     
     @Test
