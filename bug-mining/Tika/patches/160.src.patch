diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java
index 902e6e5f6..545b15133 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java
@@ -19,6 +19,7 @@ package org.apache.tika.parser.html;
 import java.net.MalformedURLException;
 import java.net.URL;
 import java.util.HashSet;
+import java.util.Locale;
 import java.util.Set;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
@@ -189,7 +190,7 @@ class HtmlHandler extends TextContentHandler {
             if (safe != null) {
                 xhtml.endElement(safe);
             } else if (XHTMLContentHandler.ENDLINE.contains(
-                    name.toLowerCase())) {
+                    name.toLowerCase(Locale.ENGLISH))) {
                 // TIKA-343: Replace closing block tags (and <br/>) with a
                 // newline unless the HtmlMapper above has already mapped
                 // them to something else
@@ -239,7 +240,7 @@ class HtmlHandler extends TextContentHandler {
         }
 
         // Check for common non-hierarchical and pseudo URI prefixes
-        String lower = url.toLowerCase();
+        String lower = url.toLowerCase(Locale.ENGLISH);
         if (lower.startsWith("urn:")
                 || lower.startsWith("mailto:")
                 || lower.startsWith("tel:")
@@ -270,4 +271,4 @@ class HtmlHandler extends TextContentHandler {
         }
     }
 
-}
\ No newline at end of file
+}
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/IdentityHtmlMapper.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/IdentityHtmlMapper.java
index 571611901..6011e39a5 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/html/IdentityHtmlMapper.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/html/IdentityHtmlMapper.java
@@ -16,6 +16,8 @@
  */
 package org.apache.tika.parser.html;
 
+import java.util.Locale;
+
 /**
  * Alternative HTML mapping rules that pass the input HTML as-is without any
  * modifications.
@@ -31,7 +33,7 @@ public class IdentityHtmlMapper implements HtmlMapper {
     }
 
     public String mapSafeAttribute(String elementName, String attributeName) {
-        return attributeName.toLowerCase();
+        return attributeName.toLowerCase(Locale.ENGLISH);
     }
 
     public String mapSafeElement(String name) {
