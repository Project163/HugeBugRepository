diff --git a/src/main/java/org/apache/commons/scxml2/SCInstance.java b/src/main/java/org/apache/commons/scxml2/SCInstance.java
index 7aa2ceea..562a5ff0 100644
--- a/src/main/java/org/apache/commons/scxml2/SCInstance.java
+++ b/src/main/java/org/apache/commons/scxml2/SCInstance.java
@@ -176,7 +176,7 @@ public class SCInstance implements Serializable {
 
         // Clone root datamodel
         Datamodel rootdm = stateMachine.getDatamodel();
-        cloneDatamodel(rootdm, getRootContext(), evaluator, errorReporter);
+        cloneDatamodel(rootdm, getGlobalContext(), evaluator, errorReporter);
         initialized = true;
     }
 
diff --git a/src/main/java/org/apache/commons/scxml2/SCXMLExecutor.java b/src/main/java/org/apache/commons/scxml2/SCXMLExecutor.java
index fae2d586..cef47fdd 100644
--- a/src/main/java/org/apache/commons/scxml2/SCXMLExecutor.java
+++ b/src/main/java/org/apache/commons/scxml2/SCXMLExecutor.java
@@ -198,6 +198,9 @@ public class SCXMLExecutor implements SCXMLIOProcessor {
 
     /**
      * Get the root context for the state machine execution.
+     * <p>
+     * The root context can be used for providing external data to the state machine
+     * </p>
      *
      * @return Context The root context.
      */
@@ -205,6 +208,18 @@ public class SCXMLExecutor implements SCXMLIOProcessor {
         return exctx.getScInstance().getRootContext();
     }
 
+    /**
+     * Get the global context for the state machine execution.
+     * <p>
+     * The global context is the top level context within the state machine itself and should be regarded and treated
+     * "read-only" from external usage.
+     * </p>
+     * @return Context The global context.
+     */
+    public Context getGlobalContext() {
+        return exctx.getScInstance().getGlobalContext();
+    }
+
     /**
      * Set the root context for the state machine execution.
      * <b>NOTE:</b> Should only be used before the executor is set in motion.
diff --git a/src/test/java/org/apache/commons/scxml2/NamespacePrefixedXPathsTest.java b/src/test/java/org/apache/commons/scxml2/NamespacePrefixedXPathsTest.java
index 6e4169c4..c0164b4d 100644
--- a/src/test/java/org/apache/commons/scxml2/NamespacePrefixedXPathsTest.java
+++ b/src/test/java/org/apache/commons/scxml2/NamespacePrefixedXPathsTest.java
@@ -51,7 +51,7 @@ public class NamespacePrefixedXPathsTest {
         Assert.assertEquals("twenty", currentStates.iterator().next().getId());
 
         // This is set while exiting "ten"
-        Double retval = (Double) exec.getRootContext().get("retval");
+        Double retval = (Double) exec.getGlobalContext().get("retval");
         Assert.assertEquals(Double.valueOf("11"), retval);
 
         // On to "thirty"
@@ -61,7 +61,7 @@ public class NamespacePrefixedXPathsTest {
         exec = SCXMLTestHelper.testInstanceSerializability(exec);
 
         // Tests XPath on SCXML actions, set while exiting "twenty"
-        String retvalstr = (String) exec.getRootContext().get("retval");
+        String retvalstr = (String) exec.getGlobalContext().get("retval");
         Assert.assertEquals("Equal to 20", retvalstr);
 
         // and so on ...
diff --git a/src/test/java/org/apache/commons/scxml2/env/javascript/JSEvaluatorTest.java b/src/test/java/org/apache/commons/scxml2/env/javascript/JSEvaluatorTest.java
index f4a65844..45cae01b 100644
--- a/src/test/java/org/apache/commons/scxml2/env/javascript/JSEvaluatorTest.java
+++ b/src/test/java/org/apache/commons/scxml2/env/javascript/JSEvaluatorTest.java
@@ -114,7 +114,7 @@ public class JSEvaluatorTest {
     public void setUp() throws Exception {
             fsm = SCXMLTestHelper.getExecutor(SCXMLReader.read(new StringReader(SCRIPT)));
             evaluator = fsm.getEvaluator();
-            context = fsm.getRootContext();
+            context = fsm.getGlobalContext();
             context.set(Context.NAMESPACES_KEY,null);
     }
 
diff --git a/src/test/java/org/apache/commons/scxml2/model/CustomActionTest.java b/src/test/java/org/apache/commons/scxml2/model/CustomActionTest.java
index a1fa9639..0a85c804 100644
--- a/src/test/java/org/apache/commons/scxml2/model/CustomActionTest.java
+++ b/src/test/java/org/apache/commons/scxml2/model/CustomActionTest.java
@@ -208,7 +208,7 @@ public class CustomActionTest {
                                 iterator().next()).getId());
         // (5) Verify datamodel variable is correct
         Assert.assertEquals("Missing helloName1 in root context", "custom04a",
-                     exec.getRootContext().get("helloName1"));
+                     exec.getGlobalContext().get("helloName1"));
 
         // The custom action defined by Hello.class should be called
         // to execute() exactly once at this point (by onentry in init state).
@@ -218,7 +218,7 @@ public class CustomActionTest {
         SCXMLTestHelper.fireEvent(exec, "custom.next");
         // (7) Verify correct end state
         Assert.assertEquals("Missing helloName1 in root context", "custom04b",
-                exec.getRootContext().get("helloName1"));
+                exec.getGlobalContext().get("helloName1"));
         Assert.assertEquals("Invalid final state",
                 "end", (exec.getStatus().getStates().
                 iterator().next()).getId());
diff --git a/src/test/java/org/apache/commons/scxml2/model/ParallelTest.java b/src/test/java/org/apache/commons/scxml2/model/ParallelTest.java
index dd8d85d3..ec3a914c 100644
--- a/src/test/java/org/apache/commons/scxml2/model/ParallelTest.java
+++ b/src/test/java/org/apache/commons/scxml2/model/ParallelTest.java
@@ -43,13 +43,13 @@ public class ParallelTest {
         SCXMLExecutor exec = SCXMLTestHelper.getExecutor("org/apache/commons/scxml2/model/parallel-03.xml");
         exec.go();
         SCXMLTestHelper.assertPostTriggerStates(exec, "dummy.event", new String[] { "para11", "para21" });
-        Object count = exec.getEvaluator().eval(exec.getRootContext(),"Data('string(root/root/count)')");
+        Object count = exec.getEvaluator().eval(exec.getGlobalContext(),"Data('string(root/root/count)')");
         Assert.assertEquals("5.0", count.toString());
         SCXMLTestHelper.assertPostTriggerStates(exec, "foo", new String[] { "para12", "para21" });
-        count = exec.getEvaluator().eval(exec.getRootContext(),"Data('string(root/root/count)')");
+        count = exec.getEvaluator().eval(exec.getGlobalContext(),"Data('string(root/root/count)')");
         Assert.assertEquals("7.0", count.toString());
         SCXMLTestHelper.assertPostTriggerState(exec, "bar", "end");
-        count = exec.getEvaluator().eval(exec.getRootContext(),"Data('string(root/root/count)')");
+        count = exec.getEvaluator().eval(exec.getGlobalContext(),"Data('string(root/root/count)')");
         Assert.assertEquals("14.0", count.toString());
     }
 }
