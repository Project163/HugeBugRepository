diff --git a/tika-core/src/main/java/org/apache/tika/sax/XHTMLContentHandler.java b/tika-core/src/main/java/org/apache/tika/sax/XHTMLContentHandler.java
index a2008208f..c56824060 100644
--- a/tika-core/src/main/java/org/apache/tika/sax/XHTMLContentHandler.java
+++ b/tika-core/src/main/java/org/apache/tika/sax/XHTMLContentHandler.java
@@ -331,5 +331,15 @@ public class XHTMLContentHandler extends SafeContentHandler {
             endElement(name);
         }
     }
+    
+    @Override
+    protected boolean isInvalid(int ch) {
+        if(super.isInvalid(ch)) return true;
+        // These control chars are  invalid in XHTML.
+        if(0x7F <= ch && ch <=0x9F) {
+            return true;
+        }
+        return false;
+    }
 
 }
diff --git a/tika-core/src/test/java/org/apache/tika/sax/XHTMLContentHandlerTest.java b/tika-core/src/test/java/org/apache/tika/sax/XHTMLContentHandlerTest.java
index 6492b7c63..e2ae01929 100644
--- a/tika-core/src/test/java/org/apache/tika/sax/XHTMLContentHandlerTest.java
+++ b/tika-core/src/test/java/org/apache/tika/sax/XHTMLContentHandlerTest.java
@@ -157,6 +157,49 @@ public class XHTMLContentHandlerTest {
 
         assertTrue(toHTMLContentHandler.toString().contains("itemscope"));
     }
+    
+    
+    @Test
+    public void testInvalidControlCharacter0x7F() throws Exception {
+        xhtml.startDocument();
+        xhtml.startElement("menu");
+        xhtml.element("li", "a\u007Fz");
+        xhtml.endElement("menu");
+        xhtml.endDocument();
+        
+        String[] words = getRealWords(output.toString());
+        System.out.println(words[0]);
+        assertEquals(1, words.length);
+        assertEquals("a\ufffdz", words[0]);
+    }
+    
+    @Test
+    public void testInvalidControlCharacter0x9F() throws Exception {
+        xhtml.startDocument();
+        xhtml.startElement("menu");
+        xhtml.element("li", "a\u009Fz");
+        xhtml.endElement("menu");
+        xhtml.endDocument();
+        
+        String[] words = getRealWords(output.toString());
+        System.out.println(words[0]);
+        assertEquals(1, words.length);
+        assertEquals("a\ufffdz", words[0]);
+    }
+    
+    @Test
+    public void testInvalidControlCharacter0x93() throws Exception {
+        xhtml.startDocument();
+        xhtml.startElement("menu");
+        xhtml.element("li", "a\u0093z");
+        xhtml.endElement("menu");
+        xhtml.endDocument();
+        
+        String[] words = getRealWords(output.toString());
+        System.out.println(words[0]);
+        assertEquals(1, words.length);
+        assertEquals("a\ufffdz", words[0]);
+    }
 
     /**
      * Return array of non-zerolength words. Splitting on whitespace will get us
