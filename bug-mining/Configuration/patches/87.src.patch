diff --git a/src/java/org/apache/commons/configuration/PropertiesConfiguration.java b/src/java/org/apache/commons/configuration/PropertiesConfiguration.java
index 96dfa43f..8924c058 100644
--- a/src/java/org/apache/commons/configuration/PropertiesConfiguration.java
+++ b/src/java/org/apache/commons/configuration/PropertiesConfiguration.java
@@ -213,11 +213,6 @@ public class PropertiesConfiguration extends AbstractFileConfiguration
     /** Allow file inclusion or not */
     private boolean includesAllowed;
 
-    // initialization block to set the encoding before loading the file in the constructors
-    {
-        setEncoding(DEFAULT_ENCODING);
-    }
-
     /**
      * Creates an empty PropertyConfiguration object which can be
      * used to synthesize a new Properties file by adding values and
@@ -343,6 +338,19 @@ public class PropertiesConfiguration extends AbstractFileConfiguration
         getLayout().setHeaderComment(header);
     }
 
+    /**
+     * Returns the encoding to be used when loading or storing configuration
+     * data. This implementation ensures that the default encoding will be used
+     * if none has been set explicitly.
+     *
+     * @return the encoding
+     */
+    public String getEncoding()
+    {
+        String enc = super.getEncoding();
+        return (enc != null) ? enc : DEFAULT_ENCODING;
+    }
+
     /**
      * Returns the associated layout object.
      *
diff --git a/src/test/org/apache/commons/configuration/TestPropertiesConfiguration.java b/src/test/org/apache/commons/configuration/TestPropertiesConfiguration.java
index ddc6b222..002d2dab 100644
--- a/src/test/org/apache/commons/configuration/TestPropertiesConfiguration.java
+++ b/src/test/org/apache/commons/configuration/TestPropertiesConfiguration.java
@@ -21,6 +21,7 @@ import java.io.File;
 import java.io.FileOutputStream;
 import java.io.FileWriter;
 import java.io.IOException;
+import java.io.InputStream;
 import java.io.OutputStream;
 import java.io.PrintWriter;
 import java.io.Reader;
@@ -825,6 +826,36 @@ public class TestPropertiesConfiguration extends TestCase
         assertEquals("Property not saved", "bar", config2.getString("foo"));
     }
 
+    /**
+     * Tests whether the correct default encoding is used when loading a
+     * properties file. This test is related to CONFIGURATION-345.
+     */
+    public void testLoadWithDefaultEncoding() throws ConfigurationException
+    {
+        class PropertiesConfigurationTestImpl extends PropertiesConfiguration
+        {
+            String loadEncoding;
+
+            public PropertiesConfigurationTestImpl(String fileName)
+                    throws ConfigurationException
+            {
+                super(fileName);
+            }
+
+            public void load(InputStream in, String encoding)
+                    throws ConfigurationException
+            {
+                loadEncoding = encoding;
+                super.load(in, encoding);
+            }
+        }
+
+        PropertiesConfigurationTestImpl testConf = new PropertiesConfigurationTestImpl(
+                testProperties);
+        assertEquals("Default encoding not used", "ISO-8859-1",
+                testConf.loadEncoding);
+    }
+
     /**
      * Creates a configuration that can be used for testing copy operations.
      *
diff --git a/xdocs/changes.xml b/xdocs/changes.xml
index 93a0266c..3db6dc34 100644
--- a/xdocs/changes.xml
+++ b/xdocs/changes.xml
@@ -38,6 +38,10 @@
         configuration nodes for properties with multiple values. This
         improves compatibility with queries.
       </action>
+      <action dev="oheger" type="fix" issue="CONFIGURATION-345">
+        PropertiesConfiguration now per default uses the encoding "ISO-8859-1"
+        for loading properties files.
+      </action>
       <action dev="oheger" type="fix" issue="CONFIGURATION-344">
         CombinedConfiguration could cause a deadlock when it was accessed while
         concurrently a reload of one of its child configuration happened. This
