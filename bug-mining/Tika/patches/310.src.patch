diff --git a/CHANGES.txt b/CHANGES.txt
index e1f1b124b..d3c54297c 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -8,6 +8,10 @@ Release 0.11 - Current Development
  * TIKA-733: Try to be robust when an RTF has too many closing {'s vs
    opening {'s.
 
+ * TIKA-711: From Word (.doc) documents we now extract optional hyphen
+   as Unicode zero-width space (U+200B), and non-breaking hyphen as
+   Unicode non-breaking hyphen (U+2011).
+
 Release 0.10 - 09/25/2011
 
 The most notable changes in Tika 0.10 over previous releases are:
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java
index a03263dae..535fe9d15 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java
@@ -50,6 +50,10 @@ import org.xml.sax.helpers.AttributesImpl;
 
 public class WordExtractor extends AbstractPOIFSExtractor {
 
+    private static final char RECORD_SEPARATOR = 30;
+    private static final char UNICODECHAR_NONBREAKING_HYPHEN = '\u2011';
+    private static final char UNICODECHAR_ZERO_WIDTH_SPACE = '\u200b';
+
     public WordExtractor(ParseContext context) {
         super(context);
     }
@@ -271,6 +275,14 @@ public class WordExtractor extends AbstractPOIFSExtractor {
           // Strip the table cell end marker
           text = text.substring(0, text.length()-1);
        }
+
+       // Copied from POI's org/apache/poi/hwpf/converter/AbstractWordConverter.processCharacters:
+
+       // Non-breaking hyphens are returned as char 30
+       text = text.replace((char) 30, UNICODECHAR_NONBREAKING_HYPHEN);
+
+       // Non-required hyphens to zero-width space
+       text = text.replace((char) 31, UNICODECHAR_ZERO_WIDTH_SPACE);
        
        xhtml.characters(text);
     }
diff --git a/tika-parsers/src/test/java/org/apache/tika/TestParsers.java b/tika-parsers/src/test/java/org/apache/tika/TestParsers.java
index def06f4bb..7c3308f0f 100644
--- a/tika-parsers/src/test/java/org/apache/tika/TestParsers.java
+++ b/tika-parsers/src/test/java/org/apache/tika/TestParsers.java
@@ -164,15 +164,14 @@ public class TestParsers extends TikaTest {
     }
 
     public void testOptionalHyphen() throws Exception {
-        // TIKA-711: re-enable doc once it's fixed
-        //final String[] extensions = new String[] {"ppt", "pptx", "doc", "docx", "rtf", "pdf"};
-        final String[] extensions = new String[] {"ppt", "pptx", "docx", "rtf", "pdf"};
+        final String[] extensions = new String[] {"ppt", "pptx", "doc", "docx", "rtf", "pdf"};
         for(String extension : extensions) {
             File file = getResourceAsFile("/test-documents/testOptionalHyphen." + extension);
             String content = ParseUtils.getStringContent(file, tc);
             assertTrue("optional hyphen was not handled for '" + extension + "' file type: " + content,
                        content.contains("optionalhyphen") ||
                        content.contains("optional\u00adhyphen") ||   // soft hyphen
+                       content.contains("optional\u200bhyphen") ||   // zero width space
                        content.contains("optional\u2027"));          // hyphenation point
             
         }
