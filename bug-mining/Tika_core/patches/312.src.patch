diff --git a/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.java b/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.java
index 37ed63c38..2c94ae025 100644
--- a/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.java
+++ b/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.java
@@ -20,13 +20,13 @@ package org.apache.tika.parser;
 import org.apache.tika.exception.CorruptedFileException;
 import org.apache.tika.exception.TikaException;
 import org.apache.tika.io.FilenameUtils;
+import org.apache.tika.io.TemporaryResources;
 import org.apache.tika.io.TikaInputStream;
 import org.apache.tika.metadata.Metadata;
 import org.apache.tika.metadata.Property;
 import org.apache.tika.metadata.TikaCoreProperties;
 import org.apache.tika.mime.MediaType;
 import org.apache.tika.sax.AbstractRecursiveParserWrapperHandler;
-import org.apache.tika.sax.ContentHandlerDecorator;
 import org.apache.tika.sax.ContentHandlerFactory;
 import org.apache.tika.sax.RecursiveParserWrapperHandler;
 import org.apache.tika.sax.SecureContentHandler;
@@ -224,13 +224,13 @@ public class RecursiveParserWrapper extends ParserDecorator {
         ContentHandler localHandler = parserState.recursiveParserWrapperHandler.getNewContentHandler();
         long started = System.currentTimeMillis();
         parserState.recursiveParserWrapperHandler.startDocument();
+        TemporaryResources tmp = new TemporaryResources();
         try {
-            try (TikaInputStream tis = TikaInputStream.get(stream)) {
-                RecursivelySecureContentHandler secureContentHandler =
+            TikaInputStream tis = TikaInputStream.get(stream, tmp);
+            RecursivelySecureContentHandler secureContentHandler =
                         new RecursivelySecureContentHandler(localHandler, tis);
-                context.set(RecursivelySecureContentHandler.class, secureContentHandler);
-                getWrappedParser().parse(tis, secureContentHandler, metadata, context);
-            }
+            context.set(RecursivelySecureContentHandler.class, secureContentHandler);
+            getWrappedParser().parse(tis, secureContentHandler, metadata, context);
         } catch (SAXException e) {
             boolean wlr = isWriteLimitReached(e);
             if (wlr == false) {
@@ -244,6 +244,7 @@ public class RecursiveParserWrapper extends ParserDecorator {
             metadata.add(RecursiveParserWrapperHandler.CONTAINER_EXCEPTION, stackTrace);
             throw e;
         } finally {
+            tmp.dispose();
             long elapsedMillis = System.currentTimeMillis() - started;
             metadata.set(RecursiveParserWrapperHandler.PARSE_TIME_MILLIS, Long.toString(elapsedMillis));
             parserState.recursiveParserWrapperHandler.endDocument(localHandler, metadata);
