diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index e842c9d1..fc68bf6a 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -45,6 +45,10 @@
                 When encountering a PipedOutputStream we will automatically close it to avoid
                 the exception.
             </action>
+            <action issue="EXEC-34" dev="simonetripodi" type="fix" date="2011-11-30" due-to="Marco Ferrante">
+              Race condition prevent watchdog working using ExecuteStreamHandler.
+              Patch submitted by Kristian Rosenvold.
+            </action>
         </release>
         <release version="1.1" date="2010-10-08" description="Maintenance Release">
             <action dev="sebb" type="fix" date="2010-10-05" >
diff --git a/src/main/java/org/apache/commons/exec/DefaultExecutor.java b/src/main/java/org/apache/commons/exec/DefaultExecutor.java
index 2182d85d..2110e02e 100644
--- a/src/main/java/org/apache/commons/exec/DefaultExecutor.java
+++ b/src/main/java/org/apache/commons/exec/DefaultExecutor.java
@@ -185,6 +185,10 @@ public class DefaultExecutor implements Executor {
             throw new IOException(workingDirectory + " doesn't exist.");
         }
 
+        if (watchdog != null) {
+            watchdog.setProcessNotStarted();
+        }
+
         Runnable runnable = new Runnable()
         {
             public void run()
diff --git a/src/main/java/org/apache/commons/exec/ExecuteWatchdog.java b/src/main/java/org/apache/commons/exec/ExecuteWatchdog.java
index 81e5bd34..57fe0ed6 100644
--- a/src/main/java/org/apache/commons/exec/ExecuteWatchdog.java
+++ b/src/main/java/org/apache/commons/exec/ExecuteWatchdog.java
@@ -68,6 +68,9 @@ public class ExecuteWatchdog implements TimeoutObserver {
     /** Will tell us whether timeout has occurred. */
     private final Watchdog watchdog;
 
+    /** Indicates that the process is verified as started */
+    private volatile boolean processStarted;
+
     /**
      * Creates a new watchdog with a given timeout.
      * 
@@ -79,6 +82,7 @@ public class ExecuteWatchdog implements TimeoutObserver {
         this.killedProcess = false;
         this.watch = false;
         this.hasWatchdog = (timeout != INFINITE_TIMEOUT);
+        this.processStarted = false;
         if(this.hasWatchdog) {
             this.watchdog = new Watchdog(timeout);
             this.watchdog.addTimeoutObserver(this);
@@ -108,6 +112,8 @@ public class ExecuteWatchdog implements TimeoutObserver {
         this.killedProcess = false;
         this.watch = true;
         this.process = process;
+        this.processStarted = true;
+        this.notifyAll();
         if(this.hasWatchdog) {
             watchdog.start();
         }
@@ -129,6 +135,7 @@ public class ExecuteWatchdog implements TimeoutObserver {
      * Destroys the running process manually.
      */
     public synchronized void destroyProcess() {
+        ensureStarted();
         this.timeoutOccured(null);
         this.stop();
     }
@@ -184,6 +191,7 @@ public class ExecuteWatchdog implements TimeoutObserver {
      *         <tt>false</tt>.
      */
     public synchronized boolean isWatching() {
+        ensureStarted();
         return watch;
     }
 
@@ -203,5 +211,23 @@ public class ExecuteWatchdog implements TimeoutObserver {
     protected synchronized void cleanUp() {
         watch = false;
         process = null;
-    }    
+    }
+
+    void setProcessNotStarted(){
+        processStarted = false;
+    }
+
+    /**
+     * Ensures that the process is started, so we do not race with asynch execution.
+     * The caller of this method must be holding the lock on this
+     */
+    private void ensureStarted(){
+        while (!processStarted){
+            try {
+                this.wait();
+            } catch (InterruptedException e) {
+                throw new RuntimeException(e.getMessage());
+            }
+        }
+    }
 }
diff --git a/src/test/java/org/apache/commons/exec/DefaultExecutorTest.java b/src/test/java/org/apache/commons/exec/DefaultExecutorTest.java
index 4ed2e28e..642bf907 100644
--- a/src/test/java/org/apache/commons/exec/DefaultExecutorTest.java
+++ b/src/test/java/org/apache/commons/exec/DefaultExecutorTest.java
@@ -669,9 +669,6 @@ public class DefaultExecutorTest extends TestCase {
         DefaultExecuteResultHandler handler = new DefaultExecuteResultHandler();
         exec.setWatchdog(watchdog);
         exec.execute(cmdLine, handler);
-        // if you comment out the next line the test will fail
-        Thread.sleep(2000);
-        // terminate it
         assertTrue(watchdog.isWatching());
         watchdog.destroyProcess();
         assertTrue("Watchdog should have killed the process",watchdog.killedProcess());
