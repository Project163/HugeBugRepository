diff --git a/CHANGES.txt b/CHANGES.txt
index 3220eb044..e1f1b124b 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -5,6 +5,9 @@ Release 0.11 - Current Development
  * TIKA-632: Hyperlinks in RTF documents are now extracted as an <a
    href=...>...</a> element.
 
+ * TIKA-733: Try to be robust when an RTF has too many closing {'s vs
+   opening {'s.
+
 Release 0.10 - 09/25/2011
 
 The most notable changes in Tika 0.10 over previous releases are:
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java
index 51779906c..fbcfc4da8 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java
@@ -1023,34 +1023,39 @@ final class TextExtractor {
         assert groupState.depth > 0;
         ansiSkip = 0;
 
-        // Restore group state:
-        final GroupState outerGroupState = groupStates.removeLast();
-
-        // Close italic, if outer does not have italic or
-        // bold changed:
-        if (groupState.italic) {
-            if (!outerGroupState.italic ||
-                groupState.bold != outerGroupState.bold) {
-                end("i");
-                groupState.italic = false;
+        // Be robust if RTF doc is corrupt (has too many
+        // closing }s):
+        // TODO: log a warning?
+        if (groupStates.size() > 0) {
+            // Restore group state:
+            final GroupState outerGroupState = groupStates.removeLast();
+
+            // Close italic, if outer does not have italic or
+            // bold changed:
+            if (groupState.italic) {
+                if (!outerGroupState.italic ||
+                    groupState.bold != outerGroupState.bold) {
+                    end("i");
+                    groupState.italic = false;
+                }
             }
-        }
 
-        // Close bold
-        if (groupState.bold && !outerGroupState.bold) {
-            end("b");
-        }
+            // Close bold
+            if (groupState.bold && !outerGroupState.bold) {
+                end("b");
+            }
 
-        // Open bold
-        if (!groupState.bold && outerGroupState.bold) {
-            start("b");
-        }
+            // Open bold
+            if (!groupState.bold && outerGroupState.bold) {
+                start("b");
+            }
 
-        // Open italic
-        if (!groupState.italic && outerGroupState.italic) {
-            start("i");
+            // Open italic
+            if (!groupState.italic && outerGroupState.italic) {
+                start("i");
+            }
+            groupState = outerGroupState;
         }
-        groupState = outerGroupState;
         assert groupStates.size() == groupState.depth;
 
         if (fieldState == 1) {
