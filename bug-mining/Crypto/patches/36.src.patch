diff --git a/src/main/java/org/apache/commons/crypto/random/OsCryptoRandom.java b/src/main/java/org/apache/commons/crypto/random/OsCryptoRandom.java
index b93177a0..a15686cf 100644
--- a/src/main/java/org/apache/commons/crypto/random/OsCryptoRandom.java
+++ b/src/main/java/org/apache/commons/crypto/random/OsCryptoRandom.java
@@ -24,7 +24,7 @@
 import java.util.Random;
 
 import org.apache.commons.crypto.conf.ConfigurationKeys;
-import org.apache.commons.crypto.utils.IOUtils;
+import org.apache.commons.crypto.utils.IoUtils;
 
 /**
  * A Random implementation that uses random bytes sourced from the operating
@@ -50,7 +50,7 @@ class OsCryptoRandom extends Random implements CryptoRandom {
     private void fillReservoir(int min) {
         if (pos >= reservoir.length - min) {
             try {
-                IOUtils.readFully(stream, reservoir, 0, reservoir.length);
+                IoUtils.readFully(stream, reservoir, 0, reservoir.length);
             } catch (IOException e) {
                 throw new RuntimeException("failed to fill reservoir", e);
             }
@@ -132,7 +132,7 @@ synchronized protected int next(int nbits) {
     @Override
     synchronized public void close() {
         if (stream != null) {
-            IOUtils.cleanup(stream);
+            IoUtils.cleanup(stream);
             stream = null;
         }
     }
diff --git a/src/main/java/org/apache/commons/crypto/stream/PositionedCryptoInputStream.java b/src/main/java/org/apache/commons/crypto/stream/PositionedCryptoInputStream.java
index d92e3aa9..bd6c39d7 100644
--- a/src/main/java/org/apache/commons/crypto/stream/PositionedCryptoInputStream.java
+++ b/src/main/java/org/apache/commons/crypto/stream/PositionedCryptoInputStream.java
@@ -34,7 +34,7 @@
 import org.apache.commons.crypto.cipher.CryptoCipher;
 import org.apache.commons.crypto.cipher.CryptoCipherFactory;
 import org.apache.commons.crypto.stream.input.Input;
-import org.apache.commons.crypto.utils.IOUtils;
+import org.apache.commons.crypto.utils.IoUtils;
 import org.apache.commons.crypto.utils.Utils;
 
 /**
@@ -133,7 +133,7 @@ public int read(long position, byte[] buffer, int offset, int length)
     public void readFully(long position, byte[] buffer, int offset, int length)
             throws IOException {
         checkStream();
-        IOUtils.readFully(input, position, buffer, offset, length);
+        IoUtils.readFully(input, position, buffer, offset, length);
         if (length > 0) {
             // This operation does not change the current offset of the file
             decrypt(position, buffer, offset, length);
diff --git a/src/main/java/org/apache/commons/crypto/utils/IOUtils.java b/src/main/java/org/apache/commons/crypto/utils/IoUtils.java
similarity index 96%
rename from src/main/java/org/apache/commons/crypto/utils/IOUtils.java
rename to src/main/java/org/apache/commons/crypto/utils/IoUtils.java
index 67f82aee..9c74db6a 100644
--- a/src/main/java/org/apache/commons/crypto/utils/IOUtils.java
+++ b/src/main/java/org/apache/commons/crypto/utils/IoUtils.java
@@ -25,12 +25,12 @@
 /**
  * General utility methods for working with IO.
  */
-public final class IOUtils {
+public final class IoUtils {
 
     /**
-     * Teh private constructor of {@link IOUtils}.
+     * Teh private constructor of {@link IoUtils}.
      */
-    private IOUtils() {
+    private IoUtils() {
     }
 
     /**
