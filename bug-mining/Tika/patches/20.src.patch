diff --git a/src/main/java/org/apache/tika/parser/html/HtmlParser.java b/src/main/java/org/apache/tika/parser/html/HtmlParser.java
index 92de93f1f..09708c0a6 100644
--- a/src/main/java/org/apache/tika/parser/html/HtmlParser.java
+++ b/src/main/java/org/apache/tika/parser/html/HtmlParser.java
@@ -103,11 +103,9 @@ public class HtmlParser implements Parser {
                 new MatchingContentHandler(getMetaHandler(metadata), meta));
 
         // Parse the HTML document
-        xhtml.startDocument();
         SAXParser parser = new SAXParser();
         parser.setContentHandler(new XHTMLDowngradeHandler(handler));
         parser.parse(new InputSource(Utils.getUTF8Reader(stream, metadata)));
-        xhtml.endDocument();
     }
 
     private ContentHandler getTitleHandler(final Metadata metadata) {
diff --git a/src/main/java/org/apache/tika/parser/pkg/PackageParser.java b/src/main/java/org/apache/tika/parser/pkg/PackageParser.java
index 86b9e7f0f..617773d20 100644
--- a/src/main/java/org/apache/tika/parser/pkg/PackageParser.java
+++ b/src/main/java/org/apache/tika/parser/pkg/PackageParser.java
@@ -25,6 +25,7 @@ import org.apache.tika.metadata.Metadata;
 import org.apache.tika.parser.AutoDetectParser;
 import org.apache.tika.parser.Parser;
 import org.apache.tika.sax.BodyContentHandler;
+import org.apache.tika.sax.EmbeddedContentHandler;
 import org.apache.tika.sax.XHTMLContentHandler;
 import org.xml.sax.SAXException;
 
@@ -92,7 +93,7 @@ public abstract class PackageParser implements Parser {
         try {
             getParser().parse(
                     new CloseShieldInputStream(stream),
-                    new BodyContentHandler(xhtml),
+                    new EmbeddedContentHandler(new BodyContentHandler(xhtml)),
                     metadata);
             xhtml.characters("\n");
         } catch (TikaException e) {
diff --git a/src/main/java/org/apache/tika/sax/EmbeddedContentHandler.java b/src/main/java/org/apache/tika/sax/EmbeddedContentHandler.java
new file mode 100644
index 000000000..0bafe6973
--- /dev/null
+++ b/src/main/java/org/apache/tika/sax/EmbeddedContentHandler.java
@@ -0,0 +1,56 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.tika.sax;
+
+import org.xml.sax.ContentHandler;
+
+/**
+ * Content handler decorator that prevents the {@link #startDocument()}
+ * and {@link #endDocument()} events from reaching the decorated handler.
+ * This is useful when you want to direct the results of parsing multiple
+ * different XML documents into a single target document without worrying
+ * about the {@link #startDocument()} and {@link #endDocument()} methods
+ * being called more than once.
+ */
+public class EmbeddedContentHandler extends ContentHandlerDecorator {
+
+    /**
+     * Created a decorator that prevents the given handler from
+     * receiving {@link #startDocument()} and {@link #endDocument()}
+     * events.
+     *
+     * @param handler the content handler to be decorated
+     */
+    public EmbeddedContentHandler(ContentHandler handler) {
+        super(handler);
+    }
+
+    /**
+     * Ignored.
+     */
+    @Override
+    public void startDocument() {
+    }
+
+    /**
+     * Ignored.
+     */
+    @Override
+    public void endDocument() {
+    }
+
+}
diff --git a/src/main/java/org/apache/tika/sax/TextContentHandler.java b/src/main/java/org/apache/tika/sax/TextContentHandler.java
index f4439e485..469114776 100644
--- a/src/main/java/org/apache/tika/sax/TextContentHandler.java
+++ b/src/main/java/org/apache/tika/sax/TextContentHandler.java
@@ -23,7 +23,8 @@ import org.xml.sax.helpers.DefaultHandler;
 /**
  * Content handler decorator that only passes the
  * {@link #characters(char[], int, int)} and
- * (@link {@link #ignorableWhitespace(char[], int, int)} events to
+ * (@link {@link #ignorableWhitespace(char[], int, int)}
+ * (plus {@link #startDocument()} and {@link #endDocument()} events to
  * the decorated content handler.
  */
 public class TextContentHandler extends DefaultHandler {
@@ -46,6 +47,16 @@ public class TextContentHandler extends DefaultHandler {
         delegate.ignorableWhitespace(ch, start, length);
     }
 
+    @Override
+    public void startDocument() throws SAXException {
+        delegate.startDocument();
+    }
+
+    @Override
+    public void endDocument() throws SAXException {
+        delegate.endDocument();
+    }
+
     @Override
     public String toString() {
         return delegate.toString();
diff --git a/src/main/java/org/apache/tika/sax/WriteOutContentHandler.java b/src/main/java/org/apache/tika/sax/WriteOutContentHandler.java
index 02b8bfc40..1aa10ee87 100644
--- a/src/main/java/org/apache/tika/sax/WriteOutContentHandler.java
+++ b/src/main/java/org/apache/tika/sax/WriteOutContentHandler.java
@@ -78,6 +78,22 @@ public class WriteOutContentHandler extends DefaultHandler {
         }
     }
 
+    /**
+     * Flushes the character stream so that no characters are forgotten
+     * in internal buffers.
+     *
+     * @see <a href="https://issues.apache.org/jira/browse/TIKA-179">TIKA-179</a>
+     * @throws SAXException if the stream can not be flushed
+     */
+    @Override
+    public void endDocument() throws SAXException {
+        try {
+            writer.flush();
+        } catch (IOException e) {
+            throw new SAXException("Error flushing character output", e);
+        }
+    }
+
     /**
      * Returns the contents of the internal string buffer where
      * all the received characters have been collected. Only works
diff --git a/src/main/java/org/apache/tika/sax/xpath/MatchingContentHandler.java b/src/main/java/org/apache/tika/sax/xpath/MatchingContentHandler.java
index 2b64077c1..da0582fe2 100644
--- a/src/main/java/org/apache/tika/sax/xpath/MatchingContentHandler.java
+++ b/src/main/java/org/apache/tika/sax/xpath/MatchingContentHandler.java
@@ -26,9 +26,7 @@ import org.xml.sax.helpers.AttributesImpl;
 
 /**
  * Content handler decorator that only passes the elements, attributes,
- * and text nodes that match the given XPath expression. Note especially
- * that {@link #startDocument()} and {@link #endDocument()} events are not
- * passed to the decorated handler.
+ * and text nodes that match the given XPath expression.
  */
 public class MatchingContentHandler extends ContentHandlerDecorator {
 
@@ -102,16 +100,4 @@ public class MatchingContentHandler extends ContentHandlerDecorator {
         }
     }
 
-    /**
-     * Ignored.
-     */
-    public void startDocument() {
-    }
-
-    /**
-     * Ignored.
-     */
-    public void endDocument() {
-    }
-
 }
diff --git a/src/test/java/org/apache/tika/sax/BodyContentHandlerTest.java b/src/test/java/org/apache/tika/sax/BodyContentHandlerTest.java
new file mode 100644
index 000000000..157ce51c4
--- /dev/null
+++ b/src/test/java/org/apache/tika/sax/BodyContentHandlerTest.java
@@ -0,0 +1,49 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.tika.sax;
+
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStream;
+
+import junit.framework.TestCase;
+
+import org.apache.tika.metadata.Metadata;
+
+/**
+ * Test cases for the {@link BodyContentHandler} class.
+ */
+public class BodyContentHandlerTest extends TestCase {
+
+    /**
+     * Test that the conversion to an {@link OutputStream} doesn't leave
+     * characters unflushed in an internal buffer.
+     *
+     * @see <a href="https://issues.apache.org/jira/browse/TIKA-179">TIKA-179</a>
+     */
+    public void testOutputStream() throws Exception {
+        ByteArrayOutputStream buffer = new ByteArrayOutputStream();
+
+        XHTMLContentHandler xhtml = new XHTMLContentHandler(
+                new BodyContentHandler(buffer), new Metadata());
+        xhtml.startDocument();
+        xhtml.element("p", "Test text");
+        xhtml.endDocument();
+
+        assertEquals("Test text\n", buffer.toString());
+    }
+
+}
