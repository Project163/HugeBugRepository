diff --git a/tika-core/src/test/java/org/apache/tika/MultiThreadedTikaTest.java b/tika-core/src/test/java/org/apache/tika/MultiThreadedTikaTest.java
index b5b60a97b..a56e688e2 100644
--- a/tika-core/src/test/java/org/apache/tika/MultiThreadedTikaTest.java
+++ b/tika-core/src/test/java/org/apache/tika/MultiThreadedTikaTest.java
@@ -50,7 +50,7 @@ public class MultiThreadedTikaTest extends TikaTest {
      */
     protected void testMultiThreaded(int numThreads, int numIterations, FileFilter filter) throws Exception {
         Path[] allFiles = getTestFiles(filter);
-        testEach(allFiles, numThreads, numIterations);
+        //testEach(allFiles, numThreads, numIterations);
         testAll(allFiles, numThreads, numIterations);
     }
 
@@ -105,7 +105,7 @@ public class MultiThreadedTikaTest extends TikaTest {
 
         ExecutorService ex = Executors.newFixedThreadPool(numThreads);
         try {
-            _testAll(files, numThreads, numIterations, truth, ex);
+            _testAll(testFiles, numThreads, numIterations, truth, ex);
         } finally {
             ex.shutdown();
             ex.shutdownNow();
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java
index 6105436f4..3eefa21e2 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java
@@ -58,7 +58,7 @@ public class ChmExtractor {
     private int indexOfContent;
     private long lzxBlockOffset;
     private long lzxBlockLength;
-    private final ChmBlockInfo chmBlockInfo = new ChmBlockInfo();
+    private ChmBlockInfo chmBlockInfo = null;//this will be instantiated at first call of
 
     /**
      * Returns lzxc control data.
@@ -267,7 +267,7 @@ public class ChmExtractor {
             } else if (directoryListingEntry.getEntryType() == EntryType.COMPRESSED
                     && !ChmCommons.hasSkip(directoryListingEntry)) {
                 /* Gets a chm hit_cache info */
-                ChmBlockInfo.resetChmBlockInfoInstance(
+                chmBlockInfo = ChmBlockInfo.getChmBlockInfoInstance(
                         directoryListingEntry, (int) getChmLzxcResetTable()
                                 .getBlockLen(), getChmLzxcControlData(), chmBlockInfo);
 
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java b/tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java
index 8bf9d5053..15b1c8d31 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java
@@ -37,56 +37,27 @@ public class ChmBlockInfo {
     private int startOffset;
     private int endOffset;
 
-    public ChmBlockInfo() {
+    private ChmBlockInfo() {
 
     }
 
-    /**
-     * Returns an information related to the chmBlockInfo
-     * 
-     * @param dle
-     *            - DirectoryListingEntry
-     * @param bytesPerBlock
-     *            - int, = chmLzxcResetTable.block_length
-     * @param clcd
-     *            - ChmLzxcControlData
-     * @param chmBlockInfo
-     *            - ChmBlockInfo
-     * 
-     * @return ChmBlockInfo
-     * @throws TikaException 
-     */
-    protected ChmBlockInfo getChmBlockInfo(DirectoryListingEntry dle,
-            int bytesPerBlock, ChmLzxcControlData clcd,
-            ChmBlockInfo chmBlockInfo) throws TikaException {
-        if (!validateParameters(dle, bytesPerBlock, clcd, chmBlockInfo))
-            throw new ChmParsingException("Please check you parameters");
-
-        chmBlockInfo.setStartBlock(dle.getOffset() / bytesPerBlock);
-        chmBlockInfo.setEndBlock((dle.getOffset() + dle.getLength())
-                / bytesPerBlock);
-        chmBlockInfo.setStartOffset(dle.getOffset() % bytesPerBlock);
-        chmBlockInfo.setEndOffset((dle.getOffset() + dle.getLength())
-                % bytesPerBlock);
-        // potential problem with casting long to int
-        chmBlockInfo
-                .setIniBlock(chmBlockInfo.startBlock - 
-                        chmBlockInfo.startBlock % (int) clcd.getResetInterval());
-//                .setIniBlock((chmBlockInfo.startBlock - chmBlockInfo.startBlock)
-//                        % (int) clcd.getResetInterval());
-        return chmBlockInfo;
-    }
-
     @Deprecated
     public static ChmBlockInfo getChmBlockInfoInstance(
             DirectoryListingEntry dle, int bytesPerBlock,
-            ChmLzxcControlData clcd) {
-        return resetChmBlockInfoInstance(dle, bytesPerBlock, clcd, new ChmBlockInfo());
+            ChmLzxcControlData clcd) throws ChmParsingException {
+        return getChmBlockInfoInstance(dle, bytesPerBlock, clcd, new ChmBlockInfo());
     }
 
-    public static ChmBlockInfo resetChmBlockInfoInstance(
+
+    public static ChmBlockInfo getChmBlockInfoInstance(
                 DirectoryListingEntry dle, int bytesPerBlock,
-        ChmLzxcControlData clcd, ChmBlockInfo chmBlockInfo) {
+        ChmLzxcControlData clcd, ChmBlockInfo chmBlockInfo) throws ChmParsingException{
+        if (chmBlockInfo == null) {
+            chmBlockInfo = new ChmBlockInfo();
+        }
+        if (!validateParameters(dle, bytesPerBlock, clcd, chmBlockInfo))
+            throw new ChmParsingException("Please check you parameters");
+
 
         chmBlockInfo.setStartBlock(dle.getOffset() / bytesPerBlock);
         chmBlockInfo.setEndBlock(
@@ -117,7 +88,7 @@ public class ChmBlockInfo {
         return sb.toString();
     }
 
-    private boolean validateParameters(DirectoryListingEntry dle,
+    private static boolean validateParameters(DirectoryListingEntry dle,
             int bytesPerBlock, ChmLzxcControlData clcd,
             ChmBlockInfo chmBlockInfo) {
         int goodParameter = 0;
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/chm/TestChmBlockInfo.java b/tika-parsers/src/test/java/org/apache/tika/parser/chm/TestChmBlockInfo.java
index 4c2bdfd3c..651a659cc 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/chm/TestChmBlockInfo.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/chm/TestChmBlockInfo.java
@@ -27,6 +27,7 @@ import org.apache.tika.parser.chm.accessor.ChmLzxcResetTable;
 import org.apache.tika.parser.chm.accessor.DirectoryListingEntry;
 import org.apache.tika.parser.chm.core.ChmCommons;
 import org.apache.tika.parser.chm.core.ChmConstants;
+import org.apache.tika.parser.chm.exception.ChmParsingException;
 import org.apache.tika.parser.chm.lzx.ChmBlockInfo;
 import org.junit.After;
 import org.junit.Before;
@@ -98,14 +99,14 @@ public class TestChmBlockInfo {
     }
 
     @Test
-    public void testToString() {
+    public void testToString() throws ChmParsingException {
         if (chmBlockInfo == null)
             testGetChmBlockInfo();
         assertTrue(chmBlockInfo.toString().length() > 0);
     }
 
     @Test
-    public void testGetChmBlockInfo() {
+    public void testGetChmBlockInfo() throws ChmParsingException {
         for (DirectoryListingEntry directoryListingEntry : chmDirListCont.getDirectoryListingEntryList()) {
             chmBlockInfo = ChmBlockInfo.getChmBlockInfoInstance(
                     directoryListingEntry, (int) clrt.getBlockLen(),
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/chm/TestChmExtraction.java b/tika-parsers/src/test/java/org/apache/tika/parser/chm/TestChmExtraction.java
index 7c35d48a2..90fe12566 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/chm/TestChmExtraction.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/chm/TestChmExtraction.java
@@ -207,19 +207,27 @@ public class TestChmExtraction extends MultiThreadedTikaTest {
         }
     }
 
+    @Test(expected = TikaException.class)
+    public void testOOM() throws Exception {
+        getXML("testChm_oom.chm");
+    }
 
     @Test
     public void testMultiThreaded() throws Exception {
-        testMultiThreaded(10, 100, null);
-/*                new FileFilter() {
+        testMultiThreaded(10, 10, new FileFilter() {
                     @Override
                     public boolean accept(File pathname) {
                         if (pathname.getName().toLowerCase(Locale.ENGLISH).endsWith(".chm")) {
-                            return true;
+                            //this file is a beast, skip it
+                            if (pathname.getName().equals("testChm2.chm")) {
+                                return false;
+                            } else {
+                                return true;
+                            }
                         } else {
                             return false;
                         }
                     }
-                });*/
+                });
     }
 }
