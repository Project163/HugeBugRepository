diff --git a/tika-server/tika-server-core/src/main/java/org/apache/tika/server/core/TikaServerConfig.java b/tika-server/tika-server-core/src/main/java/org/apache/tika/server/core/TikaServerConfig.java
index 2a67db97d..b69c361b8 100644
--- a/tika-server/tika-server-core/src/main/java/org/apache/tika/server/core/TikaServerConfig.java
+++ b/tika-server/tika-server-core/src/main/java/org/apache/tika/server/core/TikaServerConfig.java
@@ -73,8 +73,8 @@ public class TikaServerConfig extends ConfigBase {
                     " your emitter endpoints.  See CVE-2015-3271.\n" +
                     "Please make sure you know what you are doing.";
     private static final List<String> ONLY_IN_FORK_MODE = Arrays.asList(
-            new String[]{"taskTimeoutMillis", "taskPulseMillis", "pingTimeoutMillis",
-                    "pingPulseMillis", "maxFiles", "javaHome", "maxRestarts", "numRestarts",
+            new String[]{"taskTimeoutMillis", "taskPulseMillis",
+                    "maxFiles", "javaPath", "maxRestarts", "numRestarts",
                     "forkedStatusFile", "maxForkedStartupMillis", "tmpFilePrefix"});
 
         /*
@@ -100,7 +100,8 @@ public class TikaServerConfig extends ConfigBase {
     private String cors = "";
     private boolean returnStackTrace = false;
     private boolean noFork = false;
-    private String tempFilePrefix = "apache-tika-server-forked-tmp-"; //can be set for debugging
+    //TODO: make parameterizable for debugging
+    private String tempFilePrefix = "apache-tika-server-forked-tmp-";
     private Set<String> supportedFetchers = new HashSet<>();
     private Set<String> supportedEmitters = new HashSet<>();
     private List<String> forkedJvmArgs = new ArrayList<>();
@@ -109,6 +110,7 @@ public class TikaServerConfig extends ConfigBase {
     private String host = DEFAULT_HOST;
     private int digestMarkLimit = DEFAULT_DIGEST_MARK_LIMIT;
     private String digest = "";
+    private String javaPath = "java";
     //debug or info only
     private String logLevel = "";
     private Path configPath;
@@ -259,7 +261,7 @@ public class TikaServerConfig extends ConfigBase {
         return noFork;
     }
 
-    private void setNoFork(boolean noFork) {
+    public void setNoFork(boolean noFork) {
         this.noFork = noFork;
     }
 
@@ -360,7 +362,11 @@ public class TikaServerConfig extends ConfigBase {
      * @return
      */
     public String getJavaPath() {
-        return "java";
+        return javaPath;
+    }
+
+    public void setJavaPath(String javaPath) {
+        this.javaPath = javaPath;
     }
 
     public List<String> getForkedJvmArgs() {
@@ -514,7 +520,7 @@ public class TikaServerConfig extends ConfigBase {
         return idBase;
     }
 
-    private void setId(String id) {
+    public void setId(String id) {
         this.idBase = id;
     }
 
diff --git a/tika-server/tika-server-core/src/main/resources/tika-server-config-default.xml b/tika-server/tika-server-core/src/main/resources/tika-server-config-default.xml
index e7a369885..56a288984 100644
--- a/tika-server/tika-server-core/src/main/resources/tika-server-config-default.xml
+++ b/tika-server/tika-server-core/src/main/resources/tika-server-config-default.xml
@@ -33,7 +33,7 @@
           forked server has to restart, it will maintain its original id.
           If not specified, a UUID will be generated.
           -->
-      <id></id>
+      <id>my-id</id>
       <!-- whether or not to allow CORS requests. Set to 'all' if you
           want to allow all CORS requests. Set to NONE or leave blank
            if you do not want to enable CORS. -->
@@ -46,12 +46,10 @@
           spooling to disc...only if digest is selected -->
       <digestMarkLimit>1000000</digestMarkLimit>
       <!-- request URI log level 'debug' or 'info' -->
-      <log>info</log>
+      <logLevel>info</logLevel>
       <!-- whether or not to include the stacktrace when a parse exception happens
           in the data returned to the user -->
-      <includeStack>false</includeStack>
-      <!-- whether or not to enable the status endpoint -->
-      <status>false</status>
+      <returnStackTrace>false</returnStackTrace>
       <!-- If set to 'true', this runs tika server "in process"
           in the legacy 1.x mode.
           This means that the server will be susceptible to infinite loops
@@ -61,20 +59,13 @@
           (this was called -spawnChild mode in 1.x).
           nofork=false is the default in 2.x
       -->
-      <nofork>false</nofork>
+      <noFork>false</noFork>
       <!-- maximum time to allow per parse before shutting down and restarting
           the forked parser. Not allowed if nofork=true. -->
       <taskTimeoutMillis>300000</taskTimeoutMillis>
       <!-- how often to check whether a parse has timed out.
           Not allowed if nofork=true. -->
       <taskPulseMillis>10000</taskPulseMillis>
-      <!-- maximum time to allow for a response from the forked process
-          before shutting it down and restarting it.
-          Not allowed if nofork=true. -->
-      <pingTimeoutMillis>60000</pingTimeoutMillis>
-      <!-- how often to check whether the fork process needs to be restarted
-          Not allowed if nofork=true. -->
-      <pingPulseMillis>10000</pingPulseMillis>
       <!-- maximum amount of time to wait for a forked process to
           start up.
           Not allowed if nofork=true. -->
@@ -88,12 +79,11 @@
           memory leaks.
           Not allowed if nofork=true. -->
       <maxFiles>100000</maxFiles>
-      <!-- if you want to specify a specific javaHome for
-          the forked process.
+      <!-- if you want to specify a specific javaPath for
+          the forked process.  This should be the full path
+          including the executable, e.g.: /usr/bin/java
           Not allowed if nofork=true. -->
-      <javaHome></javaHome>
-      <!-- this is for debugging only -->
-      <tmpFilePrefix></tmpFilePrefix>
+      <javaPath>java</javaPath>
     </params>
   </server>
 </properties>
diff --git a/tika-server/tika-server-core/src/test/java/org/apache/tika/server/core/TikaServerConfigTest.java b/tika-server/tika-server-core/src/test/java/org/apache/tika/server/core/TikaServerConfigTest.java
index a9716adb2..0f9a25c34 100644
--- a/tika-server/tika-server-core/src/test/java/org/apache/tika/server/core/TikaServerConfigTest.java
+++ b/tika-server/tika-server-core/src/test/java/org/apache/tika/server/core/TikaServerConfigTest.java
@@ -27,10 +27,12 @@ import java.util.Set;
 import org.apache.commons.cli.CommandLine;
 import org.apache.commons.cli.CommandLineParser;
 import org.apache.commons.cli.DefaultParser;
+import org.apache.commons.cli.Option;
 import org.apache.commons.cli.Options;
 import org.junit.jupiter.api.Test;
 
 import org.apache.tika.config.TikaConfigTest;
+import org.apache.tika.utils.ProcessUtils;
 
 public class TikaServerConfigTest {
 
@@ -72,4 +74,28 @@ public class TikaServerConfigTest {
         assertTrue(config.getSupportedFetchers().contains("fsf"));
         assertTrue(config.getSupportedEmitters().contains("fse"));
     }
+
+    @Test
+    public void testPorts() throws Exception {
+        CommandLineParser parser = new DefaultParser();
+        Path path = Paths.get(TikaConfigTest.class.getResource(
+                "/configs/tika-config-server.xml").toURI());
+        CommandLine commandLine =
+                parser.parse(
+                        new Options()
+                                .addOption(Option.builder("p").longOpt("port").hasArg().build())
+                                .addOption(Option.builder("c").longOpt("config").hasArg().build()
+                                ),
+                        new String[]{
+                                "-p", "9994-9999",
+                                "-c",
+                                ProcessUtils.escapeCommandLine(path.toAbsolutePath().toString())
+                        });
+        TikaServerConfig config = TikaServerConfig
+                .load(commandLine);
+        int[] ports = config.getPorts();
+        assertEquals(6, ports.length);
+        assertEquals(9994, ports[0]);
+        assertEquals(9999, ports[5]);
+    }
 }
