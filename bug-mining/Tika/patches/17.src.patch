diff --git a/CHANGES.txt b/CHANGES.txt
index 0f4164df8..8e897f67c 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -81,6 +81,10 @@ Unreleased changes (0.2-incubating)
 34. TIKA-54  - Outlook msg parser
                (Rida Benjelloun, Dave Meikle & Jukka Zitting)
 
+35. TIKA-114 - PDFParser : Getting content of the document using
+               "writer.ToString ()" , some words are stuck together
+               (Dave Meikle)
+
 Release 0.1-incubating - 12/27/2007
 
 1. TIKA-5 - Port Metadata Framework from Nutch (mattmann)
diff --git a/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java b/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java
index 92f975aee..34c7c1e7f 100644
--- a/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java
+++ b/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java
@@ -39,7 +39,7 @@ class PDF2XHTML extends PDFTextStripper {
     /**
      * Converts the given PDF document (and related metadata) to a stream
      * of XHTML SAX events sent to the given content handler.
-     * 
+     *
      * @param document PDF document
      * @param handler SAX content handler
      * @param metadata PDF metadata
@@ -124,21 +124,45 @@ class PDF2XHTML extends PDFTextStripper {
         }
     }
 
-    protected void processLineSeparator(TextPosition p) throws IOException {
-        try {
-            handler.characters("\n");
-        } catch (SAXException e) {
-            throw new IOExceptionWithCause("Unable to write a newline", e);
+    // Two methods added to work around lack of support for processWordSeparator
+    // and processLineSeparator in PDFBox-0.7.3. This is fixed in CVS Head (PDFBox-0.7.4)
+    public String getWordSeparator()
+    {
+        try
+        {
+            handler.characters(" ");
+        } catch(SAXException e) {
+
         }
+        return super.getWordSeparator();    //To change body of overridden methods use File | Settings | File Templates.
     }
 
-    protected void processWordSeparator(TextPosition a, TextPosition b)
-            throws IOException {
-        try {
-            handler.characters(" ");
-        } catch (SAXException e) {
-            throw new IOExceptionWithCause("Unable to write a space", e);
+    public String getLineSeparator()
+    {
+        try
+        {
+            handler.characters("\n");
+        } catch(SAXException e) {
+
         }
+        return super.getLineSeparator();
     }
 
+//    protected void processLineSeparator(TextPosition p) throws IOException {
+//        try {
+//            handler.characters("\n");
+//        } catch (SAXException e) {
+//            throw new IOExceptionWithCause("Unable to write a newline", e);
+//        }
+//    }
+//
+//    protected void processWordSeparator(TextPosition a, TextPosition b)
+//            throws IOException {
+//        try {
+//            handler.characters(" ");
+//        } catch (SAXException e) {
+//            throw new IOExceptionWithCause("Unable to write a space", e);
+//        }
+//    }
+
 }
