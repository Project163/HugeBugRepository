diff --git a/johnzon-jaxrs/src/main/java/org/apache/johnzon/jaxrs/JsrMessageBodyReader.java b/johnzon-jaxrs/src/main/java/org/apache/johnzon/jaxrs/JsrMessageBodyReader.java
index 4b5a0b24..7a48bd4c 100644
--- a/johnzon-jaxrs/src/main/java/org/apache/johnzon/jaxrs/JsrMessageBodyReader.java
+++ b/johnzon-jaxrs/src/main/java/org/apache/johnzon/jaxrs/JsrMessageBodyReader.java
@@ -34,6 +34,8 @@ import java.lang.annotation.Annotation;
 import java.lang.reflect.Type;
 import java.util.Collections;
 
+import static org.apache.johnzon.mapper.internal.Streams.noClose;
+
 @Provider
 @Consumes({
     "application/json", "*/json",
@@ -66,10 +68,10 @@ public class JsrMessageBodyReader implements MessageBodyReader<JsonStructure> {
                                   final InputStream inputStream) throws IOException, WebApplicationException {
         JsonReader reader = null;
         try {
-            reader = factory.createReader(inputStream);
+            reader = factory.createReader(closeStream ? inputStream : noClose(inputStream));
             return reader.read();
         } finally {
-            if (closeStream && reader != null) {
+            if (reader != null) {
                 reader.close();
             }
         }
diff --git a/johnzon-jaxrs/src/main/java/org/apache/johnzon/jaxrs/JsrMessageBodyWriter.java b/johnzon-jaxrs/src/main/java/org/apache/johnzon/jaxrs/JsrMessageBodyWriter.java
index 4a1dfcda..6d23c3b7 100644
--- a/johnzon-jaxrs/src/main/java/org/apache/johnzon/jaxrs/JsrMessageBodyWriter.java
+++ b/johnzon-jaxrs/src/main/java/org/apache/johnzon/jaxrs/JsrMessageBodyWriter.java
@@ -28,13 +28,14 @@ import javax.ws.rs.core.MediaType;
 import javax.ws.rs.core.MultivaluedMap;
 import javax.ws.rs.ext.MessageBodyWriter;
 import javax.ws.rs.ext.Provider;
-import java.io.Flushable;
 import java.io.IOException;
 import java.io.OutputStream;
 import java.lang.annotation.Annotation;
 import java.lang.reflect.Type;
 import java.util.Collections;
 
+import static org.apache.johnzon.mapper.internal.Streams.noClose;
+
 @Provider
 @Produces({
     "application/json", "*/json",
@@ -75,15 +76,11 @@ public class JsrMessageBodyWriter implements MessageBodyWriter<JsonStructure> {
                         final OutputStream outputStream) throws IOException, WebApplicationException {
         JsonWriter writer = null;
         try {
-            writer = factory.createWriter(outputStream);
+            writer = factory.createWriter(close ? outputStream : noClose(outputStream));
             writer.write(jsonStructure);
         } finally {
             if (writer != null) {
-                if (close) {
-                    writer.close();
-                } else if (Flushable.class.isInstance(writer)) {
-                    Flushable.class.cast(writer).flush();
-                }
+                writer.close();
             }
         }
     }
