diff --git a/src/main/java/org/apache/commons/scxml2/SCXMLExecutionContext.java b/src/main/java/org/apache/commons/scxml2/SCXMLExecutionContext.java
index ae84dc09..cf67de22 100644
--- a/src/main/java/org/apache/commons/scxml2/SCXMLExecutionContext.java
+++ b/src/main/java/org/apache/commons/scxml2/SCXMLExecutionContext.java
@@ -456,6 +456,8 @@ public class SCXMLExecutionContext implements SCXMLIOProcessor {
         }
         invokeIds.put(invoke, invokeId);
         invokers.put(invokeId, invoker);
+        ioProcessors.put(SCXMLIOProcessor.EVENT_PROCESSOR_ALIAS_PREFIX+invoke.getId(), invoker.getChildIOProcessor());
+        initializeIOProcessors();
     }
 
     /**
@@ -464,6 +466,8 @@ public class SCXMLExecutionContext implements SCXMLIOProcessor {
      */
     public void removeInvoker(final Invoke invoke) {
         invokers.remove(invokeIds.remove(invoke));
+        ioProcessors.remove(SCXMLIOProcessor.EVENT_PROCESSOR_ALIAS_PREFIX+invoke.getId());
+        initializeIOProcessors();
     }
 
     /**
diff --git a/src/main/java/org/apache/commons/scxml2/SCXMLIOProcessor.java b/src/main/java/org/apache/commons/scxml2/SCXMLIOProcessor.java
index db5910ce..28c88441 100644
--- a/src/main/java/org/apache/commons/scxml2/SCXMLIOProcessor.java
+++ b/src/main/java/org/apache/commons/scxml2/SCXMLIOProcessor.java
@@ -27,6 +27,11 @@ public interface SCXMLIOProcessor {
      */
     String DEFAULT_EVENT_PROCESSOR = "http://www.w3.org/TR/scxml/#SCXMLEventProcessor";
 
+    /**
+     * Prefix for SCXML I/O Event Processor aliases
+     */
+    String EVENT_PROCESSOR_ALIAS_PREFIX = "#_";
+
     /**
      * Default SCXML I/O Event Processor alias
      */
@@ -35,12 +40,12 @@ public interface SCXMLIOProcessor {
     /**
      * The name of the internal Event Processor
      */
-    String INTERNAL_EVENT_PROCESSOR = "#_internal";
+    String INTERNAL_EVENT_PROCESSOR = EVENT_PROCESSOR_ALIAS_PREFIX + "internal";
 
     /**
      * The name of the parent Event Processor
      */
-    String PARENT_EVENT_PROCESSOR = "#_parent";
+    String PARENT_EVENT_PROCESSOR = EVENT_PROCESSOR_ALIAS_PREFIX + "parent";
 
     /**
      * Send an event into the SCXML processor queue
diff --git a/src/main/java/org/apache/commons/scxml2/invoke/Invoker.java b/src/main/java/org/apache/commons/scxml2/invoke/Invoker.java
index 67db4851..67831c8b 100644
--- a/src/main/java/org/apache/commons/scxml2/invoke/Invoker.java
+++ b/src/main/java/org/apache/commons/scxml2/invoke/Invoker.java
@@ -19,6 +19,7 @@ package org.apache.commons.scxml2.invoke;
 import java.util.Map;
 
 import org.apache.commons.scxml2.SCXMLExecutor;
+import org.apache.commons.scxml2.SCXMLIOProcessor;
 import org.apache.commons.scxml2.TriggerEvent;
 
 /**
@@ -87,6 +88,14 @@ public interface Invoker {
      */
     void setParentSCXMLExecutor(SCXMLExecutor scxmlExecutor);
 
+    /**
+     * Get the child IO Processor to register for communication with
+     * the parent session.
+     *
+     * @return Child IO Processor
+     */
+    SCXMLIOProcessor getChildIOProcessor();
+
     /**
      * Begin this invocation.
      *
@@ -121,6 +130,5 @@ public interface Invoker {
      */
     void cancel()
     throws InvokerException;
-
 }
 
diff --git a/src/main/java/org/apache/commons/scxml2/invoke/SimpleSCXMLInvoker.java b/src/main/java/org/apache/commons/scxml2/invoke/SimpleSCXMLInvoker.java
index 102cdd6e..a83420c0 100644
--- a/src/main/java/org/apache/commons/scxml2/invoke/SimpleSCXMLInvoker.java
+++ b/src/main/java/org/apache/commons/scxml2/invoke/SimpleSCXMLInvoker.java
@@ -25,6 +25,7 @@ import javax.xml.stream.XMLStreamException;
 
 import org.apache.commons.scxml2.Context;
 import org.apache.commons.scxml2.SCXMLExecutor;
+import org.apache.commons.scxml2.SCXMLIOProcessor;
 import org.apache.commons.scxml2.TriggerEvent;
 import org.apache.commons.scxml2.env.SimpleSCXMLListener;
 import org.apache.commons.scxml2.io.SCXMLReader;
@@ -52,6 +53,7 @@ public class SimpleSCXMLInvoker implements Invoker, Serializable {
     /**
      * {@inheritDoc}.
      */
+    @Override
     public String getInvokeId() {
         return parentStateId;
     }
@@ -59,6 +61,7 @@ public class SimpleSCXMLInvoker implements Invoker, Serializable {
     /**
      * {@inheritDoc}.
      */
+    @Override
     public void setInvokeId(final String invokeId) {
         this.parentStateId = invokeId;
         this.cancelled = false;
@@ -67,6 +70,7 @@ public class SimpleSCXMLInvoker implements Invoker, Serializable {
     /**
      * {@inheritDoc}.
      */
+    @Override
     public void setParentSCXMLExecutor(SCXMLExecutor parentSCXMLExecutor) {
         this.parentSCXMLExecutor = parentSCXMLExecutor;
     }
@@ -74,6 +78,16 @@ public class SimpleSCXMLInvoker implements Invoker, Serializable {
     /**
      * {@inheritDoc}.
      */
+    @Override
+    public SCXMLIOProcessor getChildIOProcessor() {
+        // not used
+        return executor;
+    }
+
+    /**
+     * {@inheritDoc}.
+     */
+    @Override
     public void invoke(final String source, final Map<String, Object> params)
     throws InvokerException {
         SCXML scxml;
@@ -112,6 +126,7 @@ public class SimpleSCXMLInvoker implements Invoker, Serializable {
     /**
      * {@inheritDoc}.
      */
+    @Override
     public void parentEvent(final TriggerEvent evt)
     throws InvokerException {
         if (cancelled) {
@@ -128,11 +143,11 @@ public class SimpleSCXMLInvoker implements Invoker, Serializable {
     /**
      * {@inheritDoc}.
      */
+    @Override
     public void cancel()
     throws InvokerException {
         cancelled = true;
         executor.addEvent(new TriggerEvent("cancel.invoke."+parentStateId, TriggerEvent.CANCEL_EVENT));
     }
-
 }
 
