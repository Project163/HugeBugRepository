diff --git a/src/main/java/org/apache/commons/configuration/BaseHierarchicalConfiguration.java b/src/main/java/org/apache/commons/configuration/BaseHierarchicalConfiguration.java
index ab16c91d..b0d20e3c 100644
--- a/src/main/java/org/apache/commons/configuration/BaseHierarchicalConfiguration.java
+++ b/src/main/java/org/apache/commons/configuration/BaseHierarchicalConfiguration.java
@@ -940,6 +940,7 @@ public class BaseHierarchicalConfiguration extends AbstractConfiguration
             CloneVisitor v = new CloneVisitor();
             getRootNode().visit(v);
             copy.setRootNode(v.getClone());
+            copy.cloneInterpolator(this);
 
             return copy;
         }
diff --git a/src/test/java/org/apache/commons/configuration/TestHierarchicalConfiguration.java b/src/test/java/org/apache/commons/configuration/TestHierarchicalConfiguration.java
index cd24ec71..ed9db588 100644
--- a/src/test/java/org/apache/commons/configuration/TestHierarchicalConfiguration.java
+++ b/src/test/java/org/apache/commons/configuration/TestHierarchicalConfiguration.java
@@ -742,6 +742,25 @@ public class TestHierarchicalConfiguration
                 .getConfigurationListeners().isEmpty());
     }
 
+    /**
+     * Tests whether interpolation works as expected after cloning.
+     */
+    @Test
+    public void testCloneInterpolation()
+    {
+        final String keyAnswer = "answer";
+        final String keyValue = "value";
+        config.addProperty(keyAnswer, "The answer is ${" + keyValue + "}.");
+        config.addProperty(keyValue, 42);
+        BaseHierarchicalConfiguration clone =
+                (BaseHierarchicalConfiguration) config.clone();
+        clone.setProperty(keyValue, 43);
+        assertEquals("Wrong interpolation in original", "The answer is 42.",
+                config.getString(keyAnswer));
+        assertEquals("Wrong interpolation in clone", "The answer is 43.",
+                clone.getString(keyAnswer));
+    }
+
     @Test
     public void testAddNodes()
     {
