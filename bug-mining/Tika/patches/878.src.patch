diff --git a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml
index 10a7c1594..27b3e9927 100644
--- a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml
+++ b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml
@@ -4852,8 +4852,9 @@
     <glob pattern="*.xyz"/>
   </mime-type>
 
-  <mime-type type="image/x-ms-bmp">
-    <alias type="image/bmp"/>
+  <mime-type type="image/bmp">
+    <alias type="image/x-bmp"/>
+    <alias type="image/x-ms-bmp"/>
     <acronym>BMP</acronym>
     <_comment>Windows bitmap</_comment>
     <tika:link>http://en.wikipedia.org/wiki/BMP_file_format</tika:link>
diff --git a/tika-core/src/test/java/org/apache/tika/TikaDetectionTest.java b/tika-core/src/test/java/org/apache/tika/TikaDetectionTest.java
index b82f01053..ea8faf506 100644
--- a/tika-core/src/test/java/org/apache/tika/TikaDetectionTest.java
+++ b/tika-core/src/test/java/org/apache/tika/TikaDetectionTest.java
@@ -682,7 +682,8 @@ public class TikaDetectionTest {
         assertEquals("chemical/x-cml", tika.detect("x.cml"));
         assertEquals("chemical/x-csml", tika.detect("x.csml"));
         assertEquals("chemical/x-xyz", tika.detect("x.xyz"));
-        assertEquals("image/x-ms-bmp", tika.detect("x.bmp"));
+        // Differ from httpd - bmp was properly registered in RFC 7903
+        //assertEquals("image/x-ms-bmp", tika.detect("x.bmp"));
         assertEquals("image/cgm", tika.detect("x.cgm"));
         assertEquals("image/g3fax", tika.detect("x.g3"));
         assertEquals("image/gif", tika.detect("x.gif"));
diff --git a/tika-core/src/test/java/org/apache/tika/mime/MimeTypesReaderTest.java b/tika-core/src/test/java/org/apache/tika/mime/MimeTypesReaderTest.java
index a5681b35c..bddaf1a70 100644
--- a/tika-core/src/test/java/org/apache/tika/mime/MimeTypesReaderTest.java
+++ b/tika-core/src/test/java/org/apache/tika/mime/MimeTypesReaderTest.java
@@ -131,7 +131,7 @@ public class MimeTypesReaderTest {
      */
     @Test
     public void testReadExtendedMetadata() throws Exception {
-        MimeType mime = this.mimeTypes.forName("image/x-ms-bmp");
+        MimeType mime = this.mimeTypes.forName("image/bmp");
         assertEquals("BMP", mime.getAcronym());
         assertEquals("com.microsoft.bmp", mime.getUniformTypeIdentifier());
         assertEquals("http://en.wikipedia.org/wiki/BMP_file_format", 
diff --git a/tika-core/src/test/java/org/apache/tika/parser/CompositeParserTest.java b/tika-core/src/test/java/org/apache/tika/parser/CompositeParserTest.java
index 6a2d52d4f..c320eaec2 100644
--- a/tika-core/src/test/java/org/apache/tika/parser/CompositeParserTest.java
+++ b/tika-core/src/test/java/org/apache/tika/parser/CompositeParserTest.java
@@ -81,7 +81,7 @@ public class CompositeParserTest {
 
     @Test
     public void testMimeTypeAliases() throws Exception {
-       MediaType bmpCanonical = MediaType.image("x-ms-bmp");
+       MediaType bmpCanonical = MediaType.image("bmp");
        Map<String,String> bmpCanonicalMetadata = new HashMap<String, String>();
        bmpCanonicalMetadata.put("BMP", "True");
        bmpCanonicalMetadata.put("Canonical", "True");
@@ -90,7 +90,7 @@ public class CompositeParserTest {
              bmpCanonicalMetadata, null
        );
        
-       MediaType bmpAlias = MediaType.image("bmp");
+       MediaType bmpAlias = MediaType.image("x-ms-bmp");
        Map<String,String> bmpAliasMetadata = new HashMap<String, String>();
        bmpAliasMetadata.put("BMP", "True");
        bmpAliasMetadata.put("Alias", "True");
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/image/ImageParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/image/ImageParser.java
index 321e9e9f6..236d2d00d 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/image/ImageParser.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/image/ImageParser.java
@@ -54,15 +54,15 @@ public class ImageParser extends AbstractParser {
 
     private static final Logger LOGGER = Logger.getLogger(ImageParser.class.getName());
 
-    private static final MediaType CANONICAL_BMP_TYPE = MediaType.image("x-ms-bmp");
-    private static final MediaType JAVA_BMP_TYPE = MediaType.image("bmp");
+    private static final MediaType MAIN_BMP_TYPE = MediaType.image("bmp");
+    private static final MediaType OLD_BMP_TYPE = MediaType.image("x-ms-bmp");
 
     private static final Set<MediaType> TMP_SUPPORTED;
 
     static {
         TMP_SUPPORTED = new HashSet<MediaType>(Arrays.asList(
-                CANONICAL_BMP_TYPE,
-                JAVA_BMP_TYPE,
+                MAIN_BMP_TYPE,
+                OLD_BMP_TYPE,
                 MediaType.image("gif"),
                 MediaType.image("png"),
                 MediaType.image("vnd.wap.wbmp"),
@@ -171,10 +171,10 @@ public class ImageParser extends AbstractParser {
             throws IOException, SAXException, TikaException {
         String type = metadata.get(Metadata.CONTENT_TYPE);
         if (type != null) {
-            // Java has a different idea of the BMP mime type to
-            //  what the canonical one is, fix this up.
-            if (CANONICAL_BMP_TYPE.toString().equals(type)) {
-                type = JAVA_BMP_TYPE.toString();
+            // If the old (pre-RFC7903) BMP mime type is given,
+            //  fix it up to the new one, so Java is happy
+            if (OLD_BMP_TYPE.toString().equals(type)) {
+                type = MAIN_BMP_TYPE.toString();
             }
 
             try {
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java
index 46a3f55b4..cbbbcf2f5 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java
@@ -94,7 +94,7 @@ public class TesseractOCRParser extends AbstractParser {
     private static final Set<MediaType> SUPPORTED_TYPES = Collections.unmodifiableSet(
             new HashSet<MediaType>(Arrays.asList(new MediaType[] {
                     MediaType.image("png"), MediaType.image("jpeg"), MediaType.image("tiff"),
-                    MediaType.image("x-ms-bmp"), MediaType.image("gif"), MediaType.image("jp2"),
+                    MediaType.image("bmp"), MediaType.image("gif"), MediaType.image("jp2"),
                     MediaType.image("jpx"), MediaType.image("x-portable-pixmap")
             })));
     private static Map<String,Boolean> TESSERACT_PRESENT = new HashMap<String, Boolean>();
diff --git a/tika-parsers/src/test/java/org/apache/tika/mime/TestMimeTypes.java b/tika-parsers/src/test/java/org/apache/tika/mime/TestMimeTypes.java
index b384cdab7..904007d4e 100644
--- a/tika-parsers/src/test/java/org/apache/tika/mime/TestMimeTypes.java
+++ b/tika-parsers/src/test/java/org/apache/tika/mime/TestMimeTypes.java
@@ -470,12 +470,12 @@ public class TestMimeTypes {
 
     @Test
     public void testBmpDetection() throws Exception {
-        assertType("image/x-ms-bmp", "testBMP.bmp");
-        assertTypeByData("image/x-ms-bmp", "testBMP.bmp");
-        assertTypeByName("image/x-ms-bmp", "x.bmp");
-        assertTypeByName("image/x-ms-bmp", "x.BMP");
-        assertTypeByName("image/x-ms-bmp", "x.dib");
-        assertTypeByName("image/x-ms-bmp", "x.DIB");
+        assertType("image/bmp", "testBMP.bmp");
+        assertTypeByData("image/bmp", "testBMP.bmp");
+        assertTypeByName("image/bmp", "x.bmp");
+        assertTypeByName("image/bmp", "x.BMP");
+        assertTypeByName("image/bmp", "x.dib");
+        assertTypeByName("image/bmp", "x.DIB");
         //false positive check -- contains part of BMP signature
         assertType("text/plain", "testBMPfp.txt");
     }
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/AutoDetectParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/AutoDetectParserTest.java
index 91b054e20..817308f8a 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/AutoDetectParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/AutoDetectParserTest.java
@@ -64,7 +64,7 @@ public class AutoDetectParserTest {
     private static final String WORD       = "application/msword";
     private static final String XML        = "application/xml";
     private static final String RSS        = "application/rss+xml";
-    private static final String BMP        = "image/x-ms-bmp";
+    private static final String BMP        = "image/bmp";
     private static final String GIF        = "image/gif";
     private static final String JPEG       = "image/jpeg";
     private static final String PNG        = "image/png";
diff --git a/tika-server/src/test/java/org/apache/tika/server/TikaMimeTypesTest.java b/tika-server/src/test/java/org/apache/tika/server/TikaMimeTypesTest.java
index 929dbc590..b0b47fca0 100644
--- a/tika-server/src/test/java/org/apache/tika/server/TikaMimeTypesTest.java
+++ b/tika-server/src/test/java/org/apache/tika/server/TikaMimeTypesTest.java
@@ -63,7 +63,7 @@ public class TikaMimeTypesTest extends CXFTestBase {
 
         assertContains("supertype: video/ogg", text);
 
-        assertContains("alias:     image/bmp", text);
+        assertContains("alias:     image/x-ms-bmp", text);
     }
 
     @Test
@@ -84,7 +84,7 @@ public class TikaMimeTypesTest extends CXFTestBase {
 
         assertContains("Super Type: <a href=\"#video/ogg\">video/ogg", text);
 
-        assertContains("Alias: image/bmp", text);
+        assertContains("Alias: image/x-ms-bmp", text);
     }
 
     @Test
@@ -102,13 +102,14 @@ public class TikaMimeTypesTest extends CXFTestBase {
         assertEquals(true, json.containsKey("text/plain"));
         assertEquals(true, json.containsKey("application/xml"));
         assertEquals(true, json.containsKey("video/x-ogm"));
-        assertEquals(true, json.containsKey("image/x-ms-bmp"));
+        assertEquals(true, json.containsKey("image/bmp"));
 
-        Map<String, Object> bmp = json.get("image/x-ms-bmp");
+        Map<String, Object> bmp = json.get("image/bmp");
         assertEquals(true, bmp.containsKey("alias"));
         Object[] aliases = (Object[]) bmp.get("alias");
-        assertEquals(1, aliases.length);
-        assertEquals("image/bmp", aliases[0]);
+        assertEquals(2, aliases.length);
+        assertEquals("image/x-bmp", aliases[0]);
+        assertEquals("image/x-ms-bmp", aliases[1]);
 
         String whichParser = bmp.get("parser").toString();
         assertTrue("Which parser", whichParser.equals("org.apache.tika.parser.ocr.TesseractOCRParser") ||
