diff --git a/src/site/xdoc/reference/syntax.xml b/src/site/xdoc/reference/syntax.xml
index 1291bd5a..c6a85b2b 100644
--- a/src/site/xdoc/reference/syntax.xml
+++ b/src/site/xdoc/reference/syntax.xml
@@ -536,8 +536,9 @@
                         For example
                         <code>"abcdef" =~ "abc.*</code> returns <code>true</code>.
                         It also checks whether any collection, set or map (on keys) contains a value or not; in that case, it behaves
-                        as an "in" operator. Note that it also applies to arrays as well as "duck-typed" collection, ie classes exposing a "contains"
-                        method.
+                        as an "in" operator.
+                        Note that arrays and user classes exposing a public 'contains' method will allow their instances
+                        to behave has right-hand side operands of this operator.
                         <code> "a" =~ ["a","b","c","d","e",f"]</code> returns <code>true</code>.
                     </td>
                 </tr>
@@ -550,9 +551,9 @@
                         <code>"abcdef" !~ "abc.*</code> returns <code>false</code>.
                         It also checks whether any collection, set or map (on keys) does not contain a value; in that case, it behaves
                         as "not in" operator.
+                        Note that arrays and user classes exposing a public 'contains' method will allow their instances
+                        to behave has right-hand side operands of this operator.
                         <code> "a" !~ ["a","b","c","d","e",f"]</code> returns <code>true</code>.
-                        Note that through duck-typing, user classes exposing a public 'contains' method will allow their instances
-                        to behave has right-hand-size operands of this operator.
                     </td>
                 </tr>
                  <tr>
@@ -561,7 +562,7 @@
                         The <code>=^</code> operator is a short-hand for the 'startsWith' method.
                         For example, <code> "abcdef" =^ "abc" </code> returns <code>true</code>.
                         Note that through duck-typing, user classes exposing a public 'startsWith' method will allow their instances
-                        to behave has left-hand-size operands of this operator.
+                        to behave has left-hand side operands of this operator.
                     </td>
                 </tr>
                 <tr>
@@ -576,7 +577,7 @@
                     <td>The <code>=$</code> operator is a short-hand for the 'endsWith' method.
                         For example, <code> "abcdef" =$ "def" </code> returns <code>true</code>.
                         Note that through duck-typing, user classes exposing an 'endsWith' method will allow their instances
-                        to behave has left-hand-size operands of this operator.
+                        to behave has left-hand side operands of this operator.
                     </td>
                 </tr>
                 <tr>
@@ -641,7 +642,7 @@
                     <td>Side-effect operators</td>
                     <td>
                         Some operators exist in side-effect forms.
-                        Their default behavior is to execute the operator and assign the left hand side with the result.
+                        Their default behavior is to execute the operator and assign the left-hand side with the result.
                         For instance <code>a += 2</code> is equivalent to <code>a = a + 2</code>
                         The list of operators is:
                         <ul>
