diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/POIFSContainerDetector.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/POIFSContainerDetector.java
index bb3951acc..f45620d40 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/POIFSContainerDetector.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/POIFSContainerDetector.java
@@ -106,8 +106,13 @@ public class POIFSContainerDetector implements Detector {
                 return PPT;
             } else if (names.contains("VisioDocument")) {
                 return VSD;
+            } else if (names.contains("CONTENTS") && names.contains("SPELLING")) {
+               return WPS;
             } else if (names.contains("CONTENTS")) {
-                return WPS;
+               // CONTENTS without SPELLING normally means some sort of
+               //  embedded non-office file inside an OLE2 document
+               // This is most commonly triggered on nested directories
+               return OLE;
             } else if (names.contains("\u0001Ole10Native")) {
                 return OLE;
             } else if (names.contains("PerfectOffice_MAIN")) {
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java
index 6b984009b..56a8ca29a 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java
@@ -153,8 +153,21 @@ public abstract class AbstractOOXMLExtractor implements OOXMLExtractor {
             TikaInputStream stream = null;
 
             DirectoryNode root = fs.getRoot();
-            if (POIFSDocumentType.OLE10_NATIVE.equals(
-                    POIFSDocumentType.detectType(root))) {
+            POIFSDocumentType type = POIFSDocumentType.detectType(root);
+            
+            if (root.hasEntry("CONTENTS")
+                  && root.hasEntry("\u0001Ole")
+                  && root.hasEntry("\u0001CompObj")
+                  && root.hasEntry("\u0003ObjInfo")) {
+               // TIKA-704: OLE 2.0 embedded non-Office document?
+               stream = TikaInputStream.get(
+                     fs.createDocumentInputStream("CONTENTS"));
+               if (embeddedExtractor.shouldParseEmbedded(metadata)) {
+                  embeddedExtractor.parseEmbedded(
+                        stream, new EmbeddedContentHandler(handler),
+                        metadata, false);
+               }
+            } else if (POIFSDocumentType.OLE10_NATIVE == type) {
                 // TIKA-704: OLE 1.0 embedded document
                 Ole10Native ole =
                         Ole10Native.createFromEmbeddedOleObject(fs);
@@ -170,18 +183,6 @@ public abstract class AbstractOOXMLExtractor implements OOXMLExtractor {
                             stream, new EmbeddedContentHandler(handler),
                             metadata, false);
                 }
-            } else if (root.hasEntry("CONTENTS")
-                    && root.hasEntry("\u0001Ole")
-                    && root.hasEntry("\u0001CompObj")
-                    && root.hasEntry("\u0003ObjInfo")) {
-                // TIKA-704: OLE 2.0 embedded non-Office document?
-                stream = TikaInputStream.get(
-                        fs.createDocumentInputStream("CONTENTS"));
-                if (embeddedExtractor.shouldParseEmbedded(metadata)) {
-                    embeddedExtractor.parseEmbedded(
-                            stream, new EmbeddedContentHandler(handler),
-                            metadata, false);
-                }
             } else {
                 handleEmbeddedFile(part, handler);
             }
