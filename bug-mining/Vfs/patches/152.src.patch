diff --git a/core/src/main/java/org/apache/commons/vfs2/cache/LRUFilesCache.java b/core/src/main/java/org/apache/commons/vfs2/cache/LRUFilesCache.java
index 87419647..eba5fcd7 100644
--- a/core/src/main/java/org/apache/commons/vfs2/cache/LRUFilesCache.java
+++ b/core/src/main/java/org/apache/commons/vfs2/cache/LRUFilesCache.java
@@ -45,7 +45,7 @@ public class LRUFilesCache extends AbstractFilesCache
     private static final int DEFAULT_LRU_SIZE = 100;
 
     /** The logger to use. */
-    private final Log log = LogFactory.getLog(LRUFilesCache.class);
+    private static final Log log = LogFactory.getLog(LRUFilesCache.class);
 
     /** The FileSystem cache */
     private final ConcurrentMap<FileSystem, Map<FileName, FileObject>> filesystemCache =
diff --git a/core/src/main/java/org/apache/commons/vfs2/cache/SoftRefFilesCache.java b/core/src/main/java/org/apache/commons/vfs2/cache/SoftRefFilesCache.java
index d1e73738..b86e2b4d 100644
--- a/core/src/main/java/org/apache/commons/vfs2/cache/SoftRefFilesCache.java
+++ b/core/src/main/java/org/apache/commons/vfs2/cache/SoftRefFilesCache.java
@@ -47,7 +47,7 @@ public class SoftRefFilesCache extends AbstractFilesCache
 {
     private static final int TIMEOUT = 1000;
 
-    private final Log log = LogFactory.getLog(SoftRefFilesCache.class);
+    private static final Log log = LogFactory.getLog(SoftRefFilesCache.class);
 
     private final ConcurrentMap<FileSystem, Map<FileName, Reference<FileObject>>> fileSystemCache =
           new ConcurrentHashMap<FileSystem, Map<FileName, Reference<FileObject>>>();
diff --git a/core/src/main/java/org/apache/commons/vfs2/provider/ftp/FtpClientFactory.java b/core/src/main/java/org/apache/commons/vfs2/provider/ftp/FtpClientFactory.java
index 5f8bfeaf..d221fa54 100644
--- a/core/src/main/java/org/apache/commons/vfs2/provider/ftp/FtpClientFactory.java
+++ b/core/src/main/java/org/apache/commons/vfs2/provider/ftp/FtpClientFactory.java
@@ -63,7 +63,8 @@ public final class FtpClientFactory
         return factory.createConnection(hostname, port, username, password, workingDirectory, fileSystemOptions);
     }
 
-    public static class FtpConnectionFactory extends ConnectionFactory<FTPClient, FtpFileSystemConfigBuilder>
+    /** Connection Factory, used to configure the FTPClient. */
+    public static final class FtpConnectionFactory extends ConnectionFactory<FTPClient, FtpFileSystemConfigBuilder>
     {
         private FtpConnectionFactory(final FtpFileSystemConfigBuilder builder)
         {
@@ -83,12 +84,13 @@ public final class FtpClientFactory
         }
     }
 
+    /** Abstract Factory, used to configure different FTPClients. */
     public abstract static class ConnectionFactory<C extends FTPClient, B extends FtpFileSystemConfigBuilder>
     {
         private static final char[] ANON_CHAR_ARRAY = "anonymous".toCharArray();
         private static final int BUFSZ = 40;
+        private final Log log = LogFactory.getLog(getClass());
 
-        protected Log log = LogFactory.getLog(getClass());
         protected B builder;
 
         protected ConnectionFactory(final B builder)
@@ -211,10 +213,6 @@ public final class FtpClientFactory
                         client.setSoTimeout(socketTimeout.intValue());
                     }
 
-                    // Change to root by default
-                    // All file operations a relative to the filesystem-root
-                    // String root = getRoot().getName().getPath();
-
                     final Boolean userDirIsRoot = builder.getUserDirIsRoot(fileSystemOptions);
                     if (workingDirectory != null && (userDirIsRoot == null || !userDirIsRoot.booleanValue()))
                     {
diff --git a/core/src/main/java/org/apache/commons/vfs2/provider/ftp/FtpFileObject.java b/core/src/main/java/org/apache/commons/vfs2/provider/ftp/FtpFileObject.java
index 35175469..2dedf3f8 100644
--- a/core/src/main/java/org/apache/commons/vfs2/provider/ftp/FtpFileObject.java
+++ b/core/src/main/java/org/apache/commons/vfs2/provider/ftp/FtpFileObject.java
@@ -52,8 +52,8 @@ public class FtpFileObject extends AbstractFileObject<FtpFileSystem>
     private static final Map<String, FTPFile> EMPTY_FTP_FILE_MAP =
         Collections.unmodifiableMap(new TreeMap<String, FTPFile>());
     private static final FTPFile UNKNOWN = new FTPFile();
+    private static final Log log = LogFactory.getLog(FtpFileObject.class);
 
-    private final Log log = LogFactory.getLog(FtpFileObject.class);
     private final String relPath;
 
     // Cached info
diff --git a/core/src/main/java/org/apache/commons/vfs2/provider/sftp/TrustEveryoneUserInfo.java b/core/src/main/java/org/apache/commons/vfs2/provider/sftp/TrustEveryoneUserInfo.java
index 4ee04fc2..d8ef5157 100644
--- a/core/src/main/java/org/apache/commons/vfs2/provider/sftp/TrustEveryoneUserInfo.java
+++ b/core/src/main/java/org/apache/commons/vfs2/provider/sftp/TrustEveryoneUserInfo.java
@@ -26,7 +26,7 @@ import com.jcraft.jsch.UserInfo;
  */
 public class TrustEveryoneUserInfo implements UserInfo
 {
-    private final Log log = LogFactory.getLog(TrustEveryoneUserInfo.class);
+    private static final Log log = LogFactory.getLog(TrustEveryoneUserInfo.class);
 
     @Override
     public String getPassphrase()
diff --git a/core/src/main/java/org/apache/commons/vfs2/util/DelegatingFileSystemOptionsBuilder.java b/core/src/main/java/org/apache/commons/vfs2/util/DelegatingFileSystemOptionsBuilder.java
index dcbb46b1..a13711e7 100644
--- a/core/src/main/java/org/apache/commons/vfs2/util/DelegatingFileSystemOptionsBuilder.java
+++ b/core/src/main/java/org/apache/commons/vfs2/util/DelegatingFileSystemOptionsBuilder.java
@@ -50,13 +50,10 @@ public class DelegatingFileSystemOptionsBuilder
 {
     @SuppressWarnings("unchecked") //  OK, it is a String
     private static final Class<String>[] STRING_PARAM = new Class[]{String.class};
-
     private static final Map<String, Class<?>> PRIMATIVE_TO_OBJECT = new TreeMap<String, Class<?>>();
-
-    private final Log log = LogFactory.getLog(DelegatingFileSystemOptionsBuilder.class);
+    private static final Log log = LogFactory.getLog(DelegatingFileSystemOptionsBuilder.class);
 
     private final FileSystemManager manager;
-
     private final Map<String, Map<String, List<Method>>> beanMethods = new TreeMap<String, Map<String, List<Method>>>();
 
     static
diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index e221893c..a810d96a 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -26,6 +26,9 @@
 <!--       <action issue="VFS-443" dev="ggregory" type="update" due-to="nickallen"> -->
 <!--        [Local] Need an easy way to convert from a FileObject to a File. -->
 <!--       </action> -->
+      <action issue="VFS-564" dev="ecki" type="fix" due-to="Dmitry Konstantinov">
+        Make some loggers static.
+      </action>
       <action issue="VFS-555" dev="rwhitcomb" type="add">
         [hdfs] Add the ability to specify an HDFS configuration file with HdfsFileSystemConfigBuilder.
       </action>
