diff --git a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml
index 3e8e4326b..89123f716 100644
--- a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml
+++ b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml
@@ -5845,9 +5845,10 @@
     <sub-class-of type="image/vnd.dxf"/>
     <_comment>AutoCAD DXF in ASCII Text form</_comment>
     <magic priority="50">
-      <!-- Variable number of spaces before the code groups -->
-      <match value="0\r\nSECTION\r\n" offset="0:3">
-        <match value="2\r\nHEADER\r\n" offset="12:18"/>
+      <!-- Variable number of spaces or possibly creator tool before the code groups -->
+      <!-- allow 999 (comments) before section -->
+      <match type="regex" value="(999\r?\n[^\r\n]{0,64}\\s+)?0\r?\nSECTION\r?\n" offset="0:32">
+        <match type="regex" value="2\r?\n(?:HEADER|ENTITIES)\r?\n" offset="12:60"/>
       </match>
     </magic>
   </mime-type>
diff --git a/tika-parsers/tika-parsers-standard/tika-parsers-standard-package/src/test/java/org/apache/tika/mime/TestMimeTypes.java b/tika-parsers/tika-parsers-standard/tika-parsers-standard-package/src/test/java/org/apache/tika/mime/TestMimeTypes.java
index 0a9e0ef94..18f71a41d 100644
--- a/tika-parsers/tika-parsers-standard/tika-parsers-standard-package/src/test/java/org/apache/tika/mime/TestMimeTypes.java
+++ b/tika-parsers/tika-parsers-standard/tika-parsers-standard-package/src/test/java/org/apache/tika/mime/TestMimeTypes.java
@@ -623,8 +623,9 @@ public class TestMimeTypes {
         // From name, gets the common parent type
         assertTypeByName("image/vnd.dxf", "x.dxf");
         // With the data, can work out it's the ASCII flavour
-        //TODO lost /r/n need to fix file
-        //assertTypeByData("image/vnd.dxf; format=ascii", "testDXF_ascii.dxf");
+        assertTypeByData("image/vnd.dxf; format=ascii", "testDXF_ascii.dxf");
+        assertTypeByData("image/vnd.dxf; format=ascii", "testDXF_ascii_win_newlines.dxf");
+        assertTypeByData("image/vnd.dxf; format=ascii", "testDXF_ascii_no_header.dxf");
         // TODO Get a sample Binary DXF file and test
     }
 
diff --git a/tika-parsers/tika-parsers-standard/tika-parsers-standard-package/src/test/resources/test-documents/testDXF_ascii.dxf b/tika-parsers/tika-parsers-standard/tika-parsers-standard-package/src/test/resources/test-documents/testDXF_ascii.dxf
index 20e17cd37..f69278665 100644
--- a/tika-parsers/tika-parsers-standard/tika-parsers-standard-package/src/test/resources/test-documents/testDXF_ascii.dxf
+++ b/tika-parsers/tika-parsers-standard/tika-parsers-standard-package/src/test/resources/test-documents/testDXF_ascii.dxf
@@ -1,6 +1,8 @@
- 0
+  999
+FreeCAD v0.19 24291 (Git)
+  0
 SECTION
- 2
+  2
 HEADER
  9
 $ACADVER
diff --git a/tika-parsers/tika-parsers-standard/tika-parsers-standard-package/src/test/resources/test-documents/testDXF_ascii_no_header.dxf b/tika-parsers/tika-parsers-standard/tika-parsers-standard-package/src/test/resources/test-documents/testDXF_ascii_no_header.dxf
new file mode 100644
index 000000000..38f0f7e47
--- /dev/null
+++ b/tika-parsers/tika-parsers-standard/tika-parsers-standard-package/src/test/resources/test-documents/testDXF_ascii_no_header.dxf
@@ -0,0 +1,12 @@
+ 0
+SECTION
+ 2
+ENTITIES
+ 9
+$ACADVER
+ 1
+AC1009
+ 0
+ENDSEC
+ 0
+SECTION
\ No newline at end of file
diff --git a/tika-parsers/tika-parsers-standard/tika-parsers-standard-package/src/test/resources/test-documents/testDXF_ascii_win_newlines.dxf b/tika-parsers/tika-parsers-standard/tika-parsers-standard-package/src/test/resources/test-documents/testDXF_ascii_win_newlines.dxf
new file mode 100644
index 000000000..6e7b815a4
--- /dev/null
+++ b/tika-parsers/tika-parsers-standard/tika-parsers-standard-package/src/test/resources/test-documents/testDXF_ascii_win_newlines.dxf
@@ -0,0 +1,12 @@
+ 0
+SECTION
+ 2
+HEADER
+ 9
+$ACADVER
+ 1
+AC1009
+ 0
+ENDSEC
+ 0
+SECTION
\ No newline at end of file
