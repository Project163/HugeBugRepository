diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index b62927e9..b63c5c73 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -23,7 +23,9 @@
   </properties>
   <body>
   <release version="3.2" date="201?-??-??" description="Maintenance release.">
-    
+    <action dev="simonetripodi" type="add" issue="DIGESTER-151">
+      The org.apache.commons.digester3.binder.DigesterLoader doesn't allow binding a default org.xml.sax.ErrorHandler.
+    </action>
   </release>
   <release version="3.1" date="2011-10-29" description="New features release.">
     <action dev="simonetripodi" type="add" issue="DIGESTER-150">
diff --git a/src/main/java/org/apache/commons/digester3/binder/DigesterLoader.java b/src/main/java/org/apache/commons/digester3/binder/DigesterLoader.java
index ad070da1..13f88e4c 100644
--- a/src/main/java/org/apache/commons/digester3/binder/DigesterLoader.java
+++ b/src/main/java/org/apache/commons/digester3/binder/DigesterLoader.java
@@ -42,6 +42,7 @@ import org.apache.commons.digester3.RulesBase;
 import org.apache.commons.digester3.StackAction;
 import org.apache.commons.digester3.Substitutor;
 import org.xml.sax.EntityResolver;
+import org.xml.sax.ErrorHandler;
 import org.xml.sax.SAXException;
 import org.xml.sax.XMLReader;
 
@@ -137,6 +138,12 @@ public final class DigesterLoader
      */
     private ExecutorService executorService;
 
+    /**
+     * The application-supplied error handler that is notified when parsing warnings, errors, or fatal errors occur.
+     * @since 3.2
+     */
+    private ErrorHandler errorHandler = null;
+
     /**
      * Creates a new {@link DigesterLoader} instance given a collection of {@link RulesModule} instance.
      *
@@ -377,6 +384,30 @@ public final class DigesterLoader
         return this;
     }
 
+    /**
+     * Return the error handler for this Digester.
+     *
+     * @return the error handler for this Digester.
+     * @since 3.2
+     */
+    public ErrorHandler getErrorHandler()
+    {
+        return ( this.errorHandler );
+    }
+
+    /**
+     * Set the error handler for this Digester.
+     *
+     * @param errorHandler The new error handler
+     * @return This loader instance, useful to chain methods.
+     * @since 3.2
+     */
+    public DigesterLoader setErrorHandler( ErrorHandler errorHandler )
+    {
+        this.errorHandler = errorHandler;
+        return this;
+    }
+
     /**
      * Creates a new {@link Digester} instance that relies on the default {@link Rules} implementation.
      *
@@ -486,6 +517,11 @@ public final class DigesterLoader
         digester.setNamespaceAware( isNamespaceAware() );
         digester.setExecutorService( executorService );
 
+        if ( errorHandler != null )
+        {
+            digester.setErrorHandler( errorHandler );
+        }
+
         addRules( digester );
 
         return digester;
diff --git a/src/test/java/org/apache/commons/digester3/binder/DigesterLoaderTestCase.java b/src/test/java/org/apache/commons/digester3/binder/DigesterLoaderTestCase.java
new file mode 100644
index 00000000..9a774846
--- /dev/null
+++ b/src/test/java/org/apache/commons/digester3/binder/DigesterLoaderTestCase.java
@@ -0,0 +1,79 @@
+package org.apache.commons.digester3.binder;
+
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
+import static org.junit.Assert.assertSame;
+import static org.apache.commons.digester3.binder.DigesterLoader.newLoader;
+
+import org.apache.commons.digester3.Digester;
+import org.junit.Test;
+import org.xml.sax.ErrorHandler;
+import org.xml.sax.SAXException;
+import org.xml.sax.SAXParseException;
+
+public final class DigesterLoaderTestCase
+{
+
+    /**
+     * {@link https://issues.apache.org/jira/browse/DIGESTER-151}
+     */
+    @Test
+    public void digester151()
+    {
+        ErrorHandler expected = new ErrorHandler()
+        {
+
+            public void warning( SAXParseException exception )
+                throws SAXException
+            {
+                // do nothing
+            }
+
+            public void fatalError( SAXParseException exception )
+                throws SAXException
+            {
+                // do nothing
+            }
+
+            public void error( SAXParseException exception )
+                throws SAXException
+            {
+                // do nothing
+            }
+
+        };
+
+        Digester digester = newLoader( new AbstractRulesModule()
+        {
+
+            @Override
+            protected void configure()
+            {
+                // do nothing
+            }
+
+        } ).setErrorHandler( expected ).newDigester();
+
+        ErrorHandler actual = digester.getErrorHandler();
+
+        assertSame( expected, actual );
+    }
+
+}
