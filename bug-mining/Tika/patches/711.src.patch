diff --git a/CHANGES.txt b/CHANGES.txt
index 4a4ecf3d2..057e45da5 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -1,4 +1,7 @@
 Release 1.10 - Current Development
+  * Add header/footer extraction to xls (via Aeham Abushwashi)
+    (TIKA-1400).
+
   * Drop the source file name from the embedded file path in
     RecursiveParserWrapper's "X-TIKA:embedded_resource_path" 
     (TIKA-1673).
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java
index abbf57d3e..87f395c4c 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java
@@ -43,8 +43,10 @@ import org.apache.poi.hssf.record.DateWindow1904Record;
 import org.apache.poi.hssf.record.DrawingGroupRecord;
 import org.apache.poi.hssf.record.EOFRecord;
 import org.apache.poi.hssf.record.ExtendedFormatRecord;
+import org.apache.poi.hssf.record.FooterRecord;
 import org.apache.poi.hssf.record.FormatRecord;
 import org.apache.poi.hssf.record.FormulaRecord;
+import org.apache.poi.hssf.record.HeaderRecord;
 import org.apache.poi.hssf.record.HyperlinkRecord;
 import org.apache.poi.hssf.record.LabelRecord;
 import org.apache.poi.hssf.record.LabelSSTRecord;
@@ -296,6 +298,8 @@ public class ExcelExtractor extends AbstractPOIFSExtractor {
                 hssfRequest.addListener(formatListener, FormatRecord.sid);
                 hssfRequest.addListener(formatListener, ExtendedFormatRecord.sid);
                 hssfRequest.addListener(formatListener, DrawingGroupRecord.sid);
+                hssfRequest.addListener(formatListener, HeaderRecord.sid);
+                hssfRequest.addListener(formatListener, FooterRecord.sid);
             }
 
             // Create event factory and process Workbook (fire events)
@@ -462,6 +466,16 @@ public class ExcelExtractor extends AbstractPOIFSExtractor {
                     //  the continue records are in
                     drawingGroups.add((DrawingGroupRecord) record);
                     break;
+                    
+                case HeaderRecord.sid:
+                	HeaderRecord headerRecord = (HeaderRecord) record;
+                	addTextCell(record, headerRecord.getText());
+                	break;
+                	
+                case FooterRecord.sid:
+                	FooterRecord footerRecord = (FooterRecord) record;
+                	addTextCell(record, footerRecord.getText());
+                	break;
 
             }
 
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ExcelParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ExcelParserTest.java
index d624664e4..2f35dd35e 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ExcelParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ExcelParserTest.java
@@ -454,4 +454,38 @@ public class ExcelParserTest {
         assertEquals("2010-12-30T22:00:00Z", metadata.get("custom:MyCustomDate"));
         assertEquals("2010-12-29T22:00:00Z", metadata.get("custom:myCustomSecondDate"));
     }
+
+	@Test
+    public void testHeaderAndFooterExtraction() throws Exception {
+        InputStream input = ExcelParserTest.class.getResourceAsStream(
+                "/test-documents/testEXCEL_headers_footers.xls");
+        
+        try {
+            Metadata metadata = new Metadata();
+            ContentHandler handler = new BodyContentHandler();
+            ParseContext context = new ParseContext();
+            context.set(Locale.class, Locale.UK);
+            new OfficeParser().parse(input, handler, metadata, context);
+
+            assertEquals(
+                    "application/vnd.ms-excel",
+                    metadata.get(Metadata.CONTENT_TYPE));
+            assertEquals("Internal spreadsheet", metadata.get(TikaCoreProperties.TITLE));
+            assertEquals("Aeham Abushwashi", metadata.get(TikaCoreProperties.CREATOR));
+            assertEquals("Aeham Abushwashi", metadata.get(Metadata.AUTHOR));
+
+            String content = handler.toString();
+            assertContains("John Smith1", content);
+            assertContains("John Smith50", content);
+            assertContains("1 Corporate HQ", content);
+            assertContains("Header - Corporate Spreadsheet", content);
+            assertContains("Header - For Internal Use Only", content);
+            assertContains("Header - Author: John Smith", content);
+            assertContains("Footer - Corporate Spreadsheet", content);
+            assertContains("Footer - For Internal Use Only", content);
+            assertContains("Footer - Author: John Smith", content);
+        } finally {
+            input.close();
+        }
+    }
 }
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParserTest.java
index ad6ac8372..6c1a98c17 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParserTest.java
@@ -1249,6 +1249,29 @@ public class OOXMLParserTest extends TikaTest {
         assertContains(">01..1 01..1", xml);
         assertContains(">02 02", xml);
     }
+
+    @Test
+    public void testExcelHeaderAndFooterExtraction() throws Exception {
+        XMLResult xml = getXML("testEXCEL_headers_footers.xlsx");
+
+        assertEquals(
+                "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
+                xml.metadata.get(Metadata.CONTENT_TYPE));
+        assertEquals("Internal spreadsheet", xml.metadata.get(TikaCoreProperties.TITLE));
+        assertEquals("Aeham Abushwashi", xml.metadata.get(TikaCoreProperties.CREATOR));
+        assertEquals("Aeham Abushwashi", xml.metadata.get(Metadata.AUTHOR));
+
+        String content = xml.xml;
+        assertContains("John Smith1", content);
+        assertContains("John Smith50", content);
+        assertContains("1 Corporate HQ", content);
+        assertContains("Header - Corporate Spreadsheet", content);
+        assertContains("Header - For Internal Use Only", content);
+        assertContains("Header - Author: John Smith", content);
+        assertContains("Footer - Corporate Spreadsheet", content);
+        assertContains("Footer - For Internal Use Only", content);
+        assertContains("Footer - Author: John Smith", content);
+    }
 }
 
 
diff --git a/tika-parsers/src/test/resources/test-documents/testEXCEL_headers_footers.xls b/tika-parsers/src/test/resources/test-documents/testEXCEL_headers_footers.xls
new file mode 100644
index 000000000..2c87e1c95
Binary files /dev/null and b/tika-parsers/src/test/resources/test-documents/testEXCEL_headers_footers.xls differ
diff --git a/tika-parsers/src/test/resources/test-documents/testEXCEL_headers_footers.xlsx b/tika-parsers/src/test/resources/test-documents/testEXCEL_headers_footers.xlsx
new file mode 100644
index 000000000..e87332384
Binary files /dev/null and b/tika-parsers/src/test/resources/test-documents/testEXCEL_headers_footers.xlsx differ
