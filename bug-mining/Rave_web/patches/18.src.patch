diff --git a/rave-components/rave-web/src/main/java/org/apache/rave/portal/web/controller/ProfileController.java b/rave-components/rave-web/src/main/java/org/apache/rave/portal/web/controller/ProfileController.java
index b69554a7..46e47344 100644
--- a/rave-components/rave-web/src/main/java/org/apache/rave/portal/web/controller/ProfileController.java
+++ b/rave-components/rave-web/src/main/java/org/apache/rave/portal/web/controller/ProfileController.java
@@ -35,6 +35,7 @@ import org.apache.rave.portal.web.util.ViewNames;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.security.core.userdetails.UsernameNotFoundException;
 import org.springframework.stereotype.Controller;
 import org.springframework.ui.Model;
 import org.springframework.ui.ModelMap;
@@ -69,15 +70,17 @@ public class ProfileController {
 	 */
 	@RequestMapping(value = {"/{username:.*}"}, method = RequestMethod.GET)
 	public String viewProfile(@PathVariable String username, ModelMap model, @RequestParam(required = false) Long referringPageId) {
-		logger.debug("Viewing person profile for: " + username);
-		User user = userService.getUserByUsername(username);
-        Page personProfilePage = pageService.getPersonProfilePage(user.getId());
-        addAttributesToModel(model, user, referringPageId);
-        model.addAttribute(ModelKeys.PAGE, personProfilePage);
-		String view =  ViewNames.getPersonPageView(personProfilePage.getPageLayout().getCode());
-        List<Person> friendRequests = userService.getFriendRequestsReceived(username);
-        addNavItemsToModel(view, model, referringPageId, user, friendRequests);
-        return view;
+        User user = null;
+        try{
+            user = userService.getUserByUsername(username);
+            logger.debug("Viewing person profile for: " + user.getUsername());
+            return viewProfileCommon(user, model, referringPageId);
+        }catch(Exception e){
+            addAttributesToModel(model, user, referringPageId);
+            String view = ViewNames.USER_NOT_FOUND;
+            addNavItemsToModel(view, model, referringPageId, user, null);
+            return view;
+        }
 	}
 	  /**
 		 * Views the main page of another user's profile
@@ -89,17 +92,28 @@ public class ProfileController {
 		 */
 	@RequestMapping(value = {"/id/{userid:.*}"}, method = RequestMethod.GET)
 	public String viewProfile(@PathVariable Long userid, ModelMap model, @RequestParam(required = false) Long referringPageId) {
-		User user = userService.getUserById(userid);
-		logger.debug("Viewing person profile for: " + user.getUsername());
-		
-		Page personProfilePage = pageService.getPersonProfilePage(user.getId());
+        User user = null;
+        try{
+            user = userService.getUserById(userid);
+            logger.debug("Viewing person profile for: " + user.getUsername());
+            return viewProfileCommon(user, model, referringPageId);
+        }catch (Exception e){
+            addAttributesToModel(model, user, referringPageId);
+            String view = ViewNames.USER_NOT_FOUND;
+            addNavItemsToModel(view, model, referringPageId, user, null);
+            return view;
+        }
+	}
+
+    private String viewProfileCommon(User user, ModelMap model, Long referringPageId){
+        Page personProfilePage = pageService.getPersonProfilePage(user.getId());
         addAttributesToModel(model, user, referringPageId);
         model.addAttribute(ModelKeys.PAGE, personProfilePage);
-		String view =  ViewNames.getPersonPageView(personProfilePage.getPageLayout().getCode());
+        String view =  ViewNames.getPersonPageView(personProfilePage.getPageLayout().getCode());
         List<Person> friendRequests = userService.getFriendRequestsReceived(user.getUsername());
         addNavItemsToModel(view, model, referringPageId, user, friendRequests);
         return view;
-	}
+    }
 
 	/**
 	 * Updates the user's personal information
@@ -146,12 +160,15 @@ public class ProfileController {
         long refPageId = referringPageId != null ? referringPageId : 0;
         final NavigationMenu topMenu = new NavigationMenu("topnav");
 
-        NavigationItem friendRequestItems = new NavigationItem("page.profile.friend.requests", String.valueOf(friendRequests.size()) , "#");
-        for(Person request : friendRequests) {
-        	NavigationItem childItem = new NavigationItem((request.getDisplayName()!=null && !request.getDisplayName().isEmpty())? request.getDisplayName() : request.getUsername(), request.getUsername(), "#");
-        	friendRequestItems.addChildNavigationItem(childItem);
+        if(friendRequests != null){
+            NavigationItem friendRequestItems = new NavigationItem("page.profile.friend.requests", String.valueOf(friendRequests.size()) , "#");
+            for(Person request : friendRequests) {
+                NavigationItem childItem = new NavigationItem((request.getDisplayName()!=null && !request.getDisplayName().isEmpty())? request.getDisplayName() : request.getUsername(), request.getUsername(), "#");
+                friendRequestItems.addChildNavigationItem(childItem);
+            }
+
+            topMenu.addNavigationItem(friendRequestItems);
         }
-    	topMenu.addNavigationItem(friendRequestItems);
     	topMenu.getNavigationItems().addAll((ControllerUtils.getTopMenu(view, refPageId, user, false).getNavigationItems()));
 
     	model.addAttribute(topMenu.getName(), topMenu);
diff --git a/rave-components/rave-web/src/main/java/org/apache/rave/portal/web/controller/util/ControllerUtils.java b/rave-components/rave-web/src/main/java/org/apache/rave/portal/web/controller/util/ControllerUtils.java
index dc0b49b5..2650c2d3 100644
--- a/rave-components/rave-web/src/main/java/org/apache/rave/portal/web/controller/util/ControllerUtils.java
+++ b/rave-components/rave-web/src/main/java/org/apache/rave/portal/web/controller/util/ControllerUtils.java
@@ -96,7 +96,7 @@ public class ControllerUtils {
 
             NavigationItem logout = getLogoutItem();
             menu.addNavigationItem(logout);
-        } else if (view.startsWith(ViewNames.PERSON_PROFILE)) {
+        } else if (view.startsWith(ViewNames.PERSON_PROFILE) || view.startsWith(ViewNames.USER_NOT_FOUND)) {
             NavigationItem back = getBackItem(referringPageId);
             menu.addNavigationItem(back);
 
@@ -105,7 +105,8 @@ public class ControllerUtils {
 
             NavigationItem logout = getLogoutItem();
             menu.addNavigationItem(logout);
-        } else if (view.startsWith(ViewNames.ADD_WIDGET_FORM) || view.startsWith(ViewNames.WIDGET)) {
+        }
+        else if (view.startsWith(ViewNames.ADD_WIDGET_FORM) || view.startsWith(ViewNames.WIDGET)) {
             if(view.equals(ViewNames.WIDGET_MARKETPLACE)){
                 NavigationItem addWidget = new NavigationItem("page.widget.backToMarketplace", null, "/app/marketplace?referringPageId=" + referringPageId);
                 menu.addNavigationItem(addWidget);
diff --git a/rave-components/rave-web/src/main/java/org/apache/rave/portal/web/util/ViewNames.java b/rave-components/rave-web/src/main/java/org/apache/rave/portal/web/util/ViewNames.java
index bd8ae3bd..564e0ef8 100644
--- a/rave-components/rave-web/src/main/java/org/apache/rave/portal/web/util/ViewNames.java
+++ b/rave-components/rave-web/src/main/java/org/apache/rave/portal/web/util/ViewNames.java
@@ -38,6 +38,7 @@ public final class ViewNames {
     public static final String NEW_ACCOUNT = USER_PREFIX + "newaccount";
     public static final String USER_PROFILE = USER_PREFIX + "userProfile";
     public static final String PERSON_PROFILE = USER_PREFIX + "personProfile";
+    public static final String USER_NOT_FOUND = USER_PREFIX + "usernotfound";
     public static final String ADD_WIDGET_MARKETPLACE = ADD_WIDGET_FORM + ".marketplace";
     public static final String ADD_WIDGET_W3C = ADD_WIDGET_FORM + ".w3c";
 
@@ -79,4 +80,4 @@ public final class ViewNames {
     public static String getPersonPageView(String layoutName) {
         return new StringBuilder(PERSON_PROFILE).append('.').append(layoutName).toString();
     }
-}
\ No newline at end of file
+}
diff --git a/rave-components/rave-web/src/test/java/org/apache/rave/portal/web/controller/ProfileControllerTest.java b/rave-components/rave-web/src/test/java/org/apache/rave/portal/web/controller/ProfileControllerTest.java
index c487da94..3a0cf035 100644
--- a/rave-components/rave-web/src/test/java/org/apache/rave/portal/web/controller/ProfileControllerTest.java
+++ b/rave-components/rave-web/src/test/java/org/apache/rave/portal/web/controller/ProfileControllerTest.java
@@ -172,7 +172,7 @@ public class ProfileControllerTest {
 		verify(userService, pageService);
 	}
 
-    @Test(expected = UsernameNotFoundException.class)
+    @Test
     public void viewPersonProfile_invalidUser() {
         //creating a mock user
         final User user = null;
@@ -188,7 +188,8 @@ public class ProfileControllerTest {
 
         replay(userService, pageService);
 
-        profileController.viewProfile(username, model, null);
+        String view = profileController.viewProfile(username, model, null);
+        assertThat(view, is(ViewNames.USER_NOT_FOUND));
 
         verify(userService, pageService);
     }
