diff --git a/johnzon-core/src/main/java/org/apache/johnzon/core/JsonReaderImpl.java b/johnzon-core/src/main/java/org/apache/johnzon/core/JsonReaderImpl.java
index 4ceb8030..c7a3189f 100644
--- a/johnzon-core/src/main/java/org/apache/johnzon/core/JsonReaderImpl.java
+++ b/johnzon-core/src/main/java/org/apache/johnzon/core/JsonReaderImpl.java
@@ -107,12 +107,22 @@ public class JsonReaderImpl implements JsonReader {
 
     @Override
     public JsonObject readObject() {
-        return JsonObject.class.cast(read());
+        final JsonStructure read = read();
+        checkType(JsonObject.class, read);
+        return JsonObject.class.cast(read);
     }
 
     @Override
     public JsonArray readArray() {
-        return JsonArray.class.cast(read());
+        final JsonStructure read = read();
+        checkType(JsonArray.class, read);
+        return JsonArray.class.cast(read);
+    }
+
+    private void checkType(final Class<?> expected, final JsonStructure read) {
+        if (!expected.isInstance(read)) {
+            throw new JsonParsingException("Expecting " + expected + " but got " + read, parser.getLocation());
+        }
     }
 
     @Override
diff --git a/johnzon-core/src/test/java/org/apache/johnzon/core/JsonReaderImplTest.java b/johnzon-core/src/test/java/org/apache/johnzon/core/JsonReaderImplTest.java
index 21bb4632..eda59796 100644
--- a/johnzon-core/src/test/java/org/apache/johnzon/core/JsonReaderImplTest.java
+++ b/johnzon-core/src/test/java/org/apache/johnzon/core/JsonReaderImplTest.java
@@ -42,6 +42,7 @@ import javax.json.JsonReaderFactory;
 import javax.json.JsonString;
 import javax.json.JsonStructure;
 import javax.json.JsonValue;
+import javax.json.stream.JsonParsingException;
 
 import org.junit.Test;
 
@@ -63,6 +64,16 @@ public class JsonReaderImplTest {
         return Collections.EMPTY_MAP;
     }
 
+    @Test(expected = JsonParsingException.class)
+    public void badTypeObject() {
+        Json.createReaderFactory(getFactoryConfig()).createReader(new StringReader("[]")).readObject();
+    }
+
+    @Test(expected = JsonParsingException.class)
+    public void badTypeArray() {
+        Json.createReaderFactory(getFactoryConfig()).createReader(new StringReader("{}")).readArray();
+    }
+
     @Test
     public void simple() {
         final JsonReader reader = Json.createReaderFactory(getFactoryConfig()).createReader(
