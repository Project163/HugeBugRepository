diff --git a/src/java/org/apache/commons/configuration/AbstractHierarchicalFileConfiguration.java b/src/java/org/apache/commons/configuration/AbstractHierarchicalFileConfiguration.java
index 18c65889..6e2e51cd 100644
--- a/src/java/org/apache/commons/configuration/AbstractHierarchicalFileConfiguration.java
+++ b/src/java/org/apache/commons/configuration/AbstractHierarchicalFileConfiguration.java
@@ -24,6 +24,7 @@ import java.io.InputStream;
 import java.io.OutputStream;
 import java.net.URL;
 import java.util.Iterator;
+import java.util.List;
 
 import org.apache.commons.configuration.event.ConfigurationEvent;
 import org.apache.commons.configuration.event.ConfigurationListener;
@@ -298,6 +299,19 @@ implements FileConfiguration, ConfigurationListener
         return super.isEmpty();
     }
 
+    /**
+     * Fetches a list of nodes, which are selected by the specified key. This
+     * implementation will perform a reload if necessary.
+     *
+     * @param key the key
+     * @return a list with the selected nodes
+     */
+    protected List fetchNodeList(String key)
+    {
+        reload();
+        return super.fetchNodeList(key);
+    }
+
     /**
      * Creates the file configuration delegate, i.e. the object that implements
      * functionality required by the <code>FileConfiguration</code> interface.
diff --git a/src/test/org/apache/commons/configuration/TestXMLConfiguration.java b/src/test/org/apache/commons/configuration/TestXMLConfiguration.java
index 2cc1dbc5..a9903d67 100644
--- a/src/test/org/apache/commons/configuration/TestXMLConfiguration.java
+++ b/src/test/org/apache/commons/configuration/TestXMLConfiguration.java
@@ -881,6 +881,62 @@ public class TestXMLConfiguration extends TestCase
         }
     }
 
+    /**
+     * Tests if reloads are recognized by subset().
+     */
+    public void testSubsetWithReload() throws ConfigurationException
+    {
+        XMLConfiguration c = setUpReloadTest();
+        Configuration sub = c.subset("test");
+        assertEquals("New value not read", "newValue", sub.getString("entity"));
+    }
+
+    /**
+     * Tests if reloads are recognized by configurationAt().
+     */
+    public void testConfigurationAtWithReload() throws ConfigurationException
+    {
+        XMLConfiguration c = setUpReloadTest();
+        HierarchicalConfiguration sub = c.configurationAt("test(0)");
+        assertEquals("New value not read", "newValue", sub.getString("entity"));
+    }
+
+    /**
+     * Tests if reloads are recognized by configurationsAt().
+     */
+    public void testConfigurationsAtWithReload() throws ConfigurationException
+    {
+        XMLConfiguration c = setUpReloadTest();
+        List configs = c.configurationsAt("test");
+        assertEquals("New value not read", "newValue",
+                ((HierarchicalConfiguration) configs.get(0))
+                        .getString("entity"));
+    }
+
+    /**
+     * Prepares a configuration object for testing a reload operation.
+     *
+     * @return the initialized configuration
+     * @throws ConfigurationException if an error occurs
+     */
+    private XMLConfiguration setUpReloadTest() throws ConfigurationException
+    {
+        removeTestFile();
+        conf.save(testSaveConf);
+        XMLConfiguration c = new XMLConfiguration(testSaveConf);
+        c.setReloadingStrategy(new FileChangedReloadingStrategy()
+        {
+            // Report always a change
+            protected boolean hasChanged()
+            {
+                return true;
+            }
+        });
+        conf.setProperty("test(0).entity", "newValue");
+        conf.save(testSaveConf);
+        return c;
+    }
+
     /**
      * Removes the test output file if it exists.
      */
diff --git a/xdocs/changes.xml b/xdocs/changes.xml
index 70442973..39d5cad2 100644
--- a/xdocs/changes.xml
+++ b/xdocs/changes.xml
@@ -23,6 +23,13 @@
 
   <body>
     <release version="1.4-dev" date="in SVN">
+      <action dev="oheger" type="update" issue="CONFIGURATION-228">
+        Some of the methods of file-based hierarchical configurations (e.g.
+        subset() or configurationAt()) did not take an eventually set reloading
+        strategy into account. This is now fixed by overriding the internal
+        fetchNodeList() method in AbstractHierarchicalFileConfiguration and
+        letting it always check for a reload.
+      </action>
     </release>
 
     <release version="1.3" date="2006-09-24">
