diff --git a/src/main/java/org/apache/commons/exec/CommandLine.java b/src/main/java/org/apache/commons/exec/CommandLine.java
index 5fbb1f1f..96609e01 100644
--- a/src/main/java/org/apache/commons/exec/CommandLine.java
+++ b/src/main/java/org/apache/commons/exec/CommandLine.java
@@ -122,7 +122,7 @@ public class CommandLine {
         // Expand the executable and replace '/' and '\\' with the platform
         // specific file seperator char. This is safe here since we know
         // that this is a platform specific command.
-        return StringUtils.fixFileSeperatorChar(expandArgument(executable));
+        return StringUtils.fixFileSeparatorChar(expandArgument(executable));
     }
 
     /** @return Was a file being used to set the executable? */
@@ -408,7 +408,7 @@ public class CommandLine {
         } else if(executable.trim().length() == 0) {
             throw new IllegalArgumentException("Executable can not be empty");
         } else {
-            this.executable = StringUtils.fixFileSeperatorChar(executable);        
+            this.executable = StringUtils.fixFileSeparatorChar(executable);
         }
     }
 }
diff --git a/src/main/java/org/apache/commons/exec/util/StringUtils.java b/src/main/java/org/apache/commons/exec/util/StringUtils.java
index cd59a988..610d18d8 100644
--- a/src/main/java/org/apache/commons/exec/util/StringUtils.java
+++ b/src/main/java/org/apache/commons/exec/util/StringUtils.java
@@ -159,7 +159,7 @@ public class StringUtils {
      * @param arg the argument to fix
      * @return the transformed argument 
      */
-    public static String fixFileSeperatorChar(String arg) {
+    public static String fixFileSeparatorChar(String arg) {
         return arg.replace(SLASH_CHAR, File.separatorChar).replace(
                 BACKSLASH_CHAR, File.separatorChar);
     }
@@ -168,14 +168,14 @@ public class StringUtils {
      * Concatenates an array of string using a seperator.
      *
      * @param strings the strings to concatenate
-     * @param seperator the seperator between two strings
+     * @param separator the seperator between two strings
      * @return the concatened strings
      */
-    public static String toString(String[] strings, String seperator) {    
+    public static String toString(String[] strings, String separator) {
         StringBuffer sb = new StringBuffer();
         for (int i = 0; i < strings.length; i++) {
             if (i > 0) {
-                sb.append(seperator);
+                sb.append(separator);
             }
             sb.append(strings[i]);
         }
