diff --git a/apache-rat-core/src/it/resources/ReportTest/RAT_335/ignore.txt b/apache-rat-core/src/it/resources/ReportTest/RAT_335/commandLine.txt
similarity index 63%
rename from apache-rat-core/src/it/resources/ReportTest/RAT_335/ignore.txt
rename to apache-rat-core/src/it/resources/ReportTest/RAT_335/commandLine.txt
index df056a6f..0a6cbd33 100644
--- a/apache-rat-core/src/it/resources/ReportTest/RAT_335/ignore.txt
+++ b/apache-rat-core/src/it/resources/ReportTest/RAT_335/commandLine.txt
@@ -1,7 +1,5 @@
 --output-style
 xml
---input-exclude
-**/.gitignore
 --input-exclude-parsed-scm
 GIT
 --
diff --git a/apache-rat-core/src/it/resources/ReportTest/RAT_335/src/.gitignore b/apache-rat-core/src/it/resources/ReportTest/RAT_335/src/.gitignore
new file mode 100644
index 00000000..8855fa80
--- /dev/null
+++ b/apache-rat-core/src/it/resources/ReportTest/RAT_335/src/.gitignore
@@ -0,0 +1,7 @@
+*.md
+
+# This makes it ignore dir3/dir3.log and dir3/file3.log
+*.log
+
+# This makes it "unignore" dir3/file3.log
+!file*.log
diff --git a/apache-rat-core/src/it/resources/ReportTest/RAT_335/src/dir1/.gitignore b/apache-rat-core/src/it/resources/ReportTest/RAT_335/src/dir1/.gitignore
new file mode 100644
index 00000000..26fd5c95
--- /dev/null
+++ b/apache-rat-core/src/it/resources/ReportTest/RAT_335/src/dir1/.gitignore
@@ -0,0 +1,3 @@
+*.txt
+!dir1.md
+file1.log
\ No newline at end of file
diff --git a/apache-rat-core/src/it/resources/ReportTest/RAT_335/src/dir1/dir1.txt b/apache-rat-core/src/it/resources/ReportTest/RAT_335/src/dir1/dir1.txt
new file mode 100644
index 00000000..a31cbc89
--- /dev/null
+++ b/apache-rat-core/src/it/resources/ReportTest/RAT_335/src/dir1/dir1.txt
@@ -0,0 +1 @@
+File without a valid license
diff --git a/apache-rat-core/src/it/resources/ReportTest/RAT_335/src/dir1/file1.log b/apache-rat-core/src/it/resources/ReportTest/RAT_335/src/dir1/file1.log
new file mode 100644
index 00000000..a31cbc89
--- /dev/null
+++ b/apache-rat-core/src/it/resources/ReportTest/RAT_335/src/dir1/file1.log
@@ -0,0 +1 @@
+File without a valid license
diff --git a/apache-rat-core/src/it/resources/ReportTest/RAT_335/src/dir2/dir2.md b/apache-rat-core/src/it/resources/ReportTest/RAT_335/src/dir2/dir2.md
new file mode 100644
index 00000000..a31cbc89
--- /dev/null
+++ b/apache-rat-core/src/it/resources/ReportTest/RAT_335/src/dir2/dir2.md
@@ -0,0 +1 @@
+File without a valid license
diff --git a/apache-rat-core/src/it/resources/ReportTest/RAT_335/src/dir3/dir3.log b/apache-rat-core/src/it/resources/ReportTest/RAT_335/src/dir3/dir3.log
new file mode 100644
index 00000000..a31cbc89
--- /dev/null
+++ b/apache-rat-core/src/it/resources/ReportTest/RAT_335/src/dir3/dir3.log
@@ -0,0 +1 @@
+File without a valid license
diff --git a/apache-rat-core/src/it/resources/ReportTest/RAT_335/src/invoker.properties b/apache-rat-core/src/it/resources/ReportTest/RAT_335/src/invoker.properties
deleted file mode 100644
index 6e8c3479..00000000
--- a/apache-rat-core/src/it/resources/ReportTest/RAT_335/src/invoker.properties
+++ /dev/null
@@ -1,16 +0,0 @@
-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to You under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-invoker.goals = clean apache-rat:check
diff --git a/apache-rat-core/src/it/resources/ReportTest/RAT_335/src/root.md b/apache-rat-core/src/it/resources/ReportTest/RAT_335/src/root.md
new file mode 100644
index 00000000..a31cbc89
--- /dev/null
+++ b/apache-rat-core/src/it/resources/ReportTest/RAT_335/src/root.md
@@ -0,0 +1 @@
+File without a valid license
diff --git a/apache-rat-core/src/it/resources/ReportTest/RAT_335/verify.groovy b/apache-rat-core/src/it/resources/ReportTest/RAT_335/verify.groovy
index 8a3e0765..e3917fee 100644
--- a/apache-rat-core/src/it/resources/ReportTest/RAT_335/verify.groovy
+++ b/apache-rat-core/src/it/resources/ReportTest/RAT_335/verify.groovy
@@ -36,48 +36,11 @@ private static Map<String, String> mapOf(String... parts) {
 output = new File(args[0])
 content = output.text
 
-//Map<ClaimStatistic.Counter, String> data = new HashMap<>()
-//data.put(ClaimStatistic.Counter.APPROVED, "2")
-//data.put(ClaimStatistic.Counter.ARCHIVES, "0")
-//data.put(ClaimStatistic.Counter.BINARIES, "0")
-//data.put(ClaimStatistic.Counter.DOCUMENT_TYPES, "3")
-//data.put(ClaimStatistic.Counter.IGNORED, "6")
-//data.put(ClaimStatistic.Counter.LICENSE_CATEGORIES, "2")
-//data.put(ClaimStatistic.Counter.LICENSE_NAMES, "2")
-//data.put(ClaimStatistic.Counter.NOTICES, "1")
-//data.put(ClaimStatistic.Counter.STANDARDS, "6")
-//data.put(ClaimStatistic.Counter.UNAPPROVED, "4")
-//data.put(ClaimStatistic.Counter.UNKNOWN, "4")
-
 Document document = XmlUtils.toDom(new FileInputStream(args[0]))
 XPath xPath = XPathFactory.newInstance().newXPath()
 
-//for (ClaimStatistic.Counter counter : ClaimStatistic.Counter.values()) {
-//    String xpath = String.format("/rat-report/statistics/statistic[@name='%s']", counter.displayName())
-//    Map<String, String> map = mapOf("approval",
-//            counter == ClaimStatistic.Counter.UNAPPROVED ? "false" : "true",
-//            "count", data.get(counter),
-//            "description", counter.getDescription())
-//    XmlUtils.assertAttributes(document, xPath, xpath, map)
-//}
-
-//// license categories
-//XmlUtils.assertAttributes(document, xPath, "/rat-report/statistics/licenseCategory[@name='?????']",
-//        mapOf("count", "4" ))
-//
-//XmlUtils.assertAttributes(document, xPath, "/rat-report/statistics/licenseCategory[@name='AL   ']",
-//        mapOf("count", "2" ))
-//
-//// license names
-//XmlUtils.assertAttributes(document, xPath, "/rat-report/statistics/licenseName[@name='Apache License Version 2.0']",
-//        mapOf("count", "2" ))
-//
-//XmlUtils.assertAttributes(document, xPath, "/rat-report/statistics/licenseName[@name='Unknown license']",
-//        mapOf("count", "4" ))
-
 List<String> ignoredFiles = new ArrayList<>(Arrays.asList(
         "/dir1/dir1.txt",
-        "/dir1/file1.log",
         "/dir1/.gitignore",
         "/dir2/dir2.md",
         "/dir3/dir3.log",
@@ -102,24 +65,4 @@ XmlUtils.assertAttributes(document, xPath, "/rat-report/statistics/documentType[
         mapOf("count", "1" ))
 
 XmlUtils.assertAttributes(document, xPath, "/rat-report/statistics/documentType[@name='STANDARD']",
-        mapOf("count", "6" ))
-
-/*
-TextUtils.assertPatternInTarget("^  Approved:\\s+8 ", content)
-TextUtils.assertPatternInTarget("^  Archives:\\s+1 ", content)
-TextUtils.assertPatternInTarget("^  Binaries:\\s+2 ", content)
-TextUtils.assertPatternInTarget("^  Document types:\\s+5 ", content)
-TextUtils.assertPatternInTarget("^  Ignored:\\s+1 ", content)
-TextUtils.assertPatternInTarget("^  License categories:\\s+4 ", content)
-TextUtils.assertPatternInTarget("^  License names:\\s+5", content)
-TextUtils.assertPatternInTarget("^  Notices:\\s+2 ", content)
-TextUtils.assertPatternInTarget("^  Standards:\\s+8 ", content)
-TextUtils.assertPatternInTarget("^  Unapproved:\\s+2 ", content)
-TextUtils.assertPatternInTarget("^  Unknown:\\s+2 ", content)
-
-logOutput = new File(args[1])
-log = logOutput.text
-
-TextUtils.assertPatternNotInTarget("^ERROR:", log)
-TextUtils.assertPatternNotInTarget("^WARN:", log)
-*/
+        mapOf("count", "4" ))
diff --git a/apache-rat-core/src/main/java/org/apache/rat/document/DocumentName.java b/apache-rat-core/src/main/java/org/apache/rat/document/DocumentName.java
index 74a32671..5e41156a 100644
--- a/apache-rat-core/src/main/java/org/apache/rat/document/DocumentName.java
+++ b/apache-rat-core/src/main/java/org/apache/rat/document/DocumentName.java
@@ -94,7 +94,7 @@ public class DocumentName implements Comparable<DocumentName> {
     }
 
     /**
-     * Creates a builder from a File. The {@link #baseName} is set to the file name if it is a directory otherwise
+     * Creates a builder from a File.  The {@link #baseName} is set to the file name if it is a directory otherwise
      * it is set to the directory containing the file.
      * @param file The file to set defaults from.
      * @return the builder.
diff --git a/apache-rat-core/src/site/markdown/development/write_file_processor.md b/apache-rat-core/src/site/markdown/development/write_file_processor.md
index 77d843b7..11fb3e62 100644
--- a/apache-rat-core/src/site/markdown/development/write_file_processor.md
+++ b/apache-rat-core/src/site/markdown/development/write_file_processor.md
@@ -22,7 +22,7 @@
 >  * Rat [Exclude Expressions](../exclusion_expression.html): The expressions that are used to match file names
 
 
-A FileProcessor is a module that locates files with a specific name in the directory tree and reads from them file patterns that are translated into Rat exclude expressions. These files are normally found in the file directory tree and their restrictions normally only applies to files at the same directory level as the processed file or below.  This type of file is implemented by the `org.apache.rat.config.exclusion.fileProcessors.DescendingFileProcessor`.
+A FileProcessor is a module that locates files with a specific name in the directory tree and reads from them file patterns that are translated into Rat exclude expressions. These files are normally found in the file directory tree and their restrictions normally only applies to files at the same directory level as the processed file or below.  This type of file is implemented by the `org.apache.rat.config.exclusion.MatcherSet.Builder`.
 
 The `DescendingFileProcessor` takes a file name and one or more comment prefixes as in the constructor.  The file name is normally a file that is generally hidden on Linux systems like ".gitignore" or ".hgignore".  The `DescendingFileProcessor` will scan the directories looking for files with the specified name.  If one is found it is passed to the `process(DocumentName)` method which reads the document and returns a list of exclude expressions.
 
