diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/FullStandardEncodingDetector.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/FullStandardEncodingDetector.java
deleted file mode 100644
index ab1edad7a..000000000
--- a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/FullStandardEncodingDetector.java
+++ /dev/null
@@ -1,20 +0,0 @@
-package org.apache.tika.parser.html.charsetdetector;
-
-import org.apache.tika.detect.CompositeEncodingDetector;
-
-import static java.util.Arrays.asList;
-
-/**
- * A composite encoding detector chaining a {@link StandardHtmlEncodingDetector}
- * (that may return null) and a {@link StandardIcu4JEncodingDetector} (that always returns a value)
- * This full detector thus always returns an encoding, and still works very well with data coming
- * from the web.
- */
-public class FullStandardEncodingDetector extends CompositeEncodingDetector {
-    public FullStandardEncodingDetector() {
-        super(asList(
-                new StandardHtmlEncodingDetector(),
-                StandardIcu4JEncodingDetector.STANDARD_ICU4J_ENCODING_DETECTOR
-        ));
-    }
-}
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/PreScanner.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/PreScanner.java
index 85b35a0e0..a00aeb1a1 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/PreScanner.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/PreScanner.java
@@ -85,9 +85,11 @@ class PreScanner {
     }
 
     Charset scan() {
-        while (processAtLeastOneByte())
-            if (detectedCharset.isFound())
+        while (processAtLeastOneByte()) {
+            if (detectedCharset.isFound()) {
                 return detectedCharset.getCharset();
+            }
+        }
         return null;
     }
 
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardHtmlEncodingDetector.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardHtmlEncodingDetector.java
index 041827066..f9d1a1bbf 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardHtmlEncodingDetector.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardHtmlEncodingDetector.java
@@ -36,7 +36,7 @@ import static org.apache.tika.parser.html.charsetdetector.CharsetAliases.getChar
  * https://html.spec.whatwg.org/multipage/parsing.html#the-input-byte-stream
  * <p>
  * If a resource was fetched over HTTP, then HTTP headers should be added to tika metadata
- * when using {@link #detect}, especially {@link Metadata.CONTENT_TYPE}, as it may contain charset information.
+ * when using {@link #detect}, especially {@link Metadata#CONTENT_TYPE}, as it may contain charset information.
  * <p>
  * This encoding detector may return null if no encoding is detected.
  * It is meant to be used inside a {@link org.apache.tika.detect.CompositeDetector}.
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardIcu4JEncodingDetector.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardIcu4JEncodingDetector.java
deleted file mode 100644
index f7ed53f46..000000000
--- a/tika-parsers/src/main/java/org/apache/tika/parser/html/charsetdetector/StandardIcu4JEncodingDetector.java
+++ /dev/null
@@ -1,51 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.tika.parser.html.charsetdetector;
-
-import org.apache.tika.detect.EncodingDetector;
-import org.apache.tika.metadata.Metadata;
-import org.apache.tika.parser.txt.CharsetDetector;
-import org.apache.tika.parser.txt.CharsetMatch;
-
-import java.io.IOException;
-import java.io.InputStream;
-import java.nio.charset.Charset;
-import java.nio.charset.StandardCharsets;
-
-/**
- * Last resort detector, that never returns null.
- * Uses ICU4J for sniffing the charset, and uses standard charset aliases in {@link CharsetAliases}
- * to convert the charset name detected by ICU to a java charset.
- * This detector is stateless and a single instance can be used several times for different streams.
- */
-public class StandardIcu4JEncodingDetector implements EncodingDetector {
-    public static EncodingDetector STANDARD_ICU4J_ENCODING_DETECTOR = new StandardIcu4JEncodingDetector();
-
-    public Charset detect(InputStream input, Metadata metadata) throws IOException {
-        CharsetDetector detector = new CharsetDetector();
-        detector.enableInputFilter(true); // enabling input filtering (stripping of HTML tags)
-        detector.setText(input);
-        for (CharsetMatch match : detector.detectAll()) {
-            Charset detected = CharsetAliases.getCharsetByLabel(match.getName());
-            if (detected != null) return detected;
-        }
-        // This detector is meant to be used in last resort. It should never return null
-        // So if no charset was found, decode the input as simple ASCII.
-        // The ASCII charset is guaranteed to be present in all JVMs.
-        return StandardCharsets.US_ASCII;
-    }
-}
