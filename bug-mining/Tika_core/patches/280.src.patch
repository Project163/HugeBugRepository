diff --git a/tika-core/src/main/java/org/apache/tika/fork/ClassLoaderProxy.java b/tika-core/src/main/java/org/apache/tika/fork/ClassLoaderProxy.java
index 920926d74..01b0ba548 100644
--- a/tika-core/src/main/java/org/apache/tika/fork/ClassLoaderProxy.java
+++ b/tika-core/src/main/java/org/apache/tika/fork/ClassLoaderProxy.java
@@ -112,7 +112,9 @@ class ClassLoaderProxy extends ClassLoader implements ForkProxy {
             // Receive the response
             if (input.readBoolean()) {
                 byte[] data = readStream();
-                return defineClass(name, data, 0, data.length);
+                Class<?> clazz = defineClass(name, data, 0, data.length);
+                definePackageIfNecessary(name, clazz);
+                return clazz;
             } else {
                 throw new ClassNotFoundException("Unable to find class " + name);
             }
@@ -121,6 +123,21 @@ class ClassLoaderProxy extends ClassLoader implements ForkProxy {
         }
     }
 
+    private void definePackageIfNecessary(String className, Class<?> clazz) {
+        String packageName = toPackageName(className);
+        if (packageName != null && getPackage(packageName) == null) {
+            definePackage(packageName, null, null, null, null, null, null, null);
+        }
+    }
+
+    private String toPackageName(String className) {
+        int packageEndIndex = className.lastIndexOf('.');
+        if (packageEndIndex > 0) {
+            return className.substring(0, packageEndIndex);
+        }
+        return null;
+    }
+
     private byte[] readStream() throws IOException {
         ByteArrayOutputStream stream = new ByteArrayOutputStream();
         byte[] buffer = new byte[0xffff];
diff --git a/tika-core/src/test/java/org/apache/tika/fork/ForkParserTest.java b/tika-core/src/test/java/org/apache/tika/fork/ForkParserTest.java
index 5883c75d0..01e08d9d5 100644
--- a/tika-core/src/test/java/org/apache/tika/fork/ForkParserTest.java
+++ b/tika-core/src/test/java/org/apache/tika/fork/ForkParserTest.java
@@ -218,4 +218,21 @@ public class ForkParserTest {
         }
     }
 
+    @Test
+    public void testPackageCanBeAccessed() throws Exception {
+        ForkParser parser = new ForkParser(
+                ForkParserTest.class.getClassLoader(),
+                new ForkTestParser.ForkTestParserAccessingPackage());
+        try {
+            Metadata metadata = new Metadata();
+            ContentHandler output = new BodyContentHandler();
+            InputStream stream = new ByteArrayInputStream(new byte[0]);
+            ParseContext context = new ParseContext();
+            parser.parse(stream, output, metadata, context);
+            assertEquals("Hello, World!", output.toString().trim());
+            assertEquals("text/plain", metadata.get(Metadata.CONTENT_TYPE));
+        } finally {
+            parser.close();
+        }
+    }
 }
diff --git a/tika-core/src/test/java/org/apache/tika/fork/ForkTestParser.java b/tika-core/src/test/java/org/apache/tika/fork/ForkTestParser.java
index 0948cdd64..7e9c0bf2f 100644
--- a/tika-core/src/test/java/org/apache/tika/fork/ForkTestParser.java
+++ b/tika-core/src/test/java/org/apache/tika/fork/ForkTestParser.java
@@ -22,11 +22,13 @@ import java.util.Collections;
 import java.util.Set;
 
 import org.apache.tika.exception.TikaException;
+import org.apache.tika.fork.unusedpackage.ClassInUnusedPackage;
 import org.apache.tika.metadata.Metadata;
 import org.apache.tika.mime.MediaType;
 import org.apache.tika.parser.AbstractParser;
 import org.apache.tika.parser.ParseContext;
 import org.apache.tika.sax.XHTMLContentHandler;
+import org.junit.Assert;
 import org.xml.sax.ContentHandler;
 import org.xml.sax.SAXException;
 
@@ -54,4 +56,12 @@ class ForkTestParser extends AbstractParser {
         xhtml.endDocument();
     }
 
+    static class ForkTestParserAccessingPackage extends ForkTestParser {
+        @Override
+        public void parse(InputStream stream, ContentHandler handler, Metadata metadata,
+                ParseContext context) throws IOException, SAXException, TikaException {
+            Assert.assertNotNull(ClassInUnusedPackage.class.getPackage());
+            super.parse(stream, handler, metadata, context);
+        }
+    }
 }
\ No newline at end of file
diff --git a/tika-core/src/test/java/org/apache/tika/fork/unusedpackage/ClassInUnusedPackage.java b/tika-core/src/test/java/org/apache/tika/fork/unusedpackage/ClassInUnusedPackage.java
new file mode 100644
index 000000000..d82f08ac6
--- /dev/null
+++ b/tika-core/src/test/java/org/apache/tika/fork/unusedpackage/ClassInUnusedPackage.java
@@ -0,0 +1,4 @@
+package org.apache.tika.fork.unusedpackage;
+
+public class ClassInUnusedPackage {
+}
