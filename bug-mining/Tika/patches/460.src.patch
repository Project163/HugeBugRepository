diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java
index 1df89aad0..11ffb7d91 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java
@@ -173,7 +173,7 @@ public class WordExtractor extends AbstractPOIFSExtractor {
        if (document.getStyleSheet().numStyles()>p.getStyleIndex()) {
            StyleDescription style =
               document.getStyleSheet().getStyleDescription(p.getStyleIndex());
-           if (style!=null) {
+           if (style != null && style.getName() != null && style.getName().length() > 0) {
                tas = buildParagraphTagAndStyle(style.getName(), (parentTableLevel>0));
            } else {
                tas = new TagAndStyle("p", null);
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java
index 4f856b652..d69826291 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java
@@ -125,7 +125,7 @@ public class XWPFWordExtractorDecorator extends AbstractOOXMLExtractor {
                 paragraph.getStyleID()
           );
 
-          if (style != null) {
+          if (style != null && style.getName() != null) {
              TagAndStyle tas = WordExtractor.buildParagraphTagAndStyle(
                    style.getName(), paragraph.getPartType() == BodyType.TABLECELL
              );
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/WordParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/WordParserTest.java
index 3f611fc42..dc2b6f0df 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/WordParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/WordParserTest.java
@@ -255,6 +255,26 @@ public class WordParserTest extends TikaTest {
         assertContains("\uD800\uDF32\uD800\uDF3f\uD800\uDF44\uD800\uDF39\uD800\uDF43\uD800\uDF3A", content);
     }
     
+    /**
+     * TIKA-1044 - Handle documents where parts of the
+     *  text have no formatting or styles applied to them
+     */
+    public void testNoFormat() throws Exception {
+       ContentHandler handler = new BodyContentHandler();
+       Metadata metadata = new Metadata();
+
+       InputStream stream = WordParserTest.class.getResourceAsStream(
+               "/test-documents/testWORD_no_format.doc");
+       try {
+           new OfficeParser().parse(stream, handler, metadata, new ParseContext());
+       } finally {
+           stream.close();
+       }
+
+       String content = handler.toString();
+       assertContains("Will generate an exception", content);
+    }
+    
     /**
      * Ensures that custom OLE2 (HPSF) properties are extracted
      */
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParserTest.java
index 978ba6360..8ba6496b9 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParserTest.java
@@ -36,6 +36,8 @@ import org.apache.tika.metadata.TikaMetadataKeys;
 import org.apache.tika.parser.AutoDetectParser;
 import org.apache.tika.parser.ParseContext;
 import org.apache.tika.parser.Parser;
+import org.apache.tika.parser.microsoft.OfficeParser;
+import org.apache.tika.parser.microsoft.WordParserTest;
 import org.apache.tika.sax.BodyContentHandler;
 import org.xml.sax.ContentHandler;
 
@@ -874,6 +876,26 @@ public class OOXMLParserTest extends TikaTest {
       assertContains("Test av styrt dokument", xml);
     }
 
+    /**
+     * TIKA-1044 - Handle word documents where parts of the
+     *  text have no formatting or styles applied to them
+     */
+    public void testNoFormat() throws Exception {
+       ContentHandler handler = new BodyContentHandler();
+       Metadata metadata = new Metadata();
+
+       InputStream stream = WordParserTest.class.getResourceAsStream(
+               "/test-documents/testWORD_no_format.docx");
+       try {
+          new OOXMLParser().parse(stream, handler, metadata, new ParseContext());
+       } finally {
+           stream.close();
+       }
+
+       String content = handler.toString();
+       assertContains("This is a piece of text that causes an exception", content);
+    }
+    
     // TIKA-1005:
     public void testTextInsideTextBox() throws Exception {
         String xml = getXML("testWORD_text_box.docx").xml;
diff --git a/tika-parsers/src/test/resources/test-documents/testWORD_no_format.doc b/tika-parsers/src/test/resources/test-documents/testWORD_no_format.doc
new file mode 100644
index 000000000..d2019d6a6
Binary files /dev/null and b/tika-parsers/src/test/resources/test-documents/testWORD_no_format.doc differ
diff --git a/tika-parsers/src/test/resources/test-documents/testWORD_no_format.docx b/tika-parsers/src/test/resources/test-documents/testWORD_no_format.docx
new file mode 100644
index 000000000..47cb21856
Binary files /dev/null and b/tika-parsers/src/test/resources/test-documents/testWORD_no_format.docx differ
