diff --git a/server/container/core/src/main/java/org/apache/james/core/MimeMessageInputStreamSource.java b/server/container/core/src/main/java/org/apache/james/core/MimeMessageInputStreamSource.java
index f1e1b6dfae..531529a1ac 100644
--- a/server/container/core/src/main/java/org/apache/james/core/MimeMessageInputStreamSource.java
+++ b/server/container/core/src/main/java/org/apache/james/core/MimeMessageInputStreamSource.java
@@ -77,7 +77,7 @@ public class MimeMessageInputStreamSource extends MimeMessageSource implements D
         // We want to immediately read this into a temporary file
         // Create a temp file and channel the input stream into it
         try {
-            out = new DeferredFileOutputStream(THRESHOLD, key, ".m64", TMPDIR);
+            out = new DeferredFileOutputStream(THRESHOLD, "mimemessage-" + key, ".m64", TMPDIR);
             IOUtils.copy(in, out);
             sourceId = key;
         } catch (IOException ioe) {
diff --git a/server/container/core/src/test/java/org/apache/james/core/MimeMessageInputStreamSourceTest.java b/server/container/core/src/test/java/org/apache/james/core/MimeMessageInputStreamSourceTest.java
index 009d4bf0f0..a6f18cb216 100644
--- a/server/container/core/src/test/java/org/apache/james/core/MimeMessageInputStreamSourceTest.java
+++ b/server/container/core/src/test/java/org/apache/james/core/MimeMessageInputStreamSourceTest.java
@@ -50,5 +50,11 @@ public class MimeMessageInputStreamSourceTest {
         testee = new MimeMessageInputStreamSource("myKey", new ZeroedInputStream(_10KB));
         assertThat(testee.getInputStream()).hasContentEqualTo(new ZeroedInputStream(_10KB));
     }
-    
+
+    @Test
+    public void streamWithVeryShortNameShouldWork() throws MessagingException, IOException {
+        String veryShortName = "1";
+        testee = new MimeMessageInputStreamSource(veryShortName, new ZeroedInputStream(_1M));
+        assertThat(testee.getInputStream()).isNotNull();
+    }
 }
