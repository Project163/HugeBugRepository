diff --git a/src/test/java/org/apache/sling/commons/log/logback/integration/ITAppenderServices.java b/src/test/java/org/apache/sling/commons/log/logback/integration/ITAppenderServices.java
index 9abf495..86c13a5 100644
--- a/src/test/java/org/apache/sling/commons/log/logback/integration/ITAppenderServices.java
+++ b/src/test/java/org/apache/sling/commons/log/logback/integration/ITAppenderServices.java
@@ -19,6 +19,8 @@
 
 package org.apache.sling.commons.log.logback.integration;
 
+import static org.junit.Assert.assertEquals;
+
 import java.util.ArrayList;
 import java.util.Dictionary;
 import java.util.Hashtable;
@@ -26,11 +28,6 @@ import java.util.List;
 
 import javax.inject.Inject;
 
-import ch.qos.logback.classic.spi.ILoggingEvent;
-import ch.qos.logback.core.Appender;
-import ch.qos.logback.core.AppenderBase;
-
-import org.apache.sling.commons.log.logback.integration.LogTestBase;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.ops4j.pax.exam.junit.PaxExam;
@@ -38,12 +35,12 @@ import org.ops4j.pax.exam.spi.reactors.ExamReactorStrategy;
 import org.ops4j.pax.exam.spi.reactors.PerClass;
 import org.osgi.framework.BundleContext;
 import org.osgi.framework.ServiceRegistration;
-import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertFalse;
-import static org.junit.Assert.assertTrue;
+import ch.qos.logback.classic.Level;
+import ch.qos.logback.classic.spi.ILoggingEvent;
+import ch.qos.logback.core.Appender;
+import ch.qos.logback.core.AppenderBase;
 
 @RunWith(PaxExam.class)
 @ExamReactorStrategy(PerClass.class)
@@ -64,7 +61,7 @@ public class ITAppenderServices extends LogTestBase {
         Dictionary<String, Object> props = new Hashtable<String, Object>();
 
         String[] loggers = {
-            "foo.bar:DEBUG", "foo.baz:INFO",
+            "foo.bar", "foo.baz",
         };
 
         props.put("loggers", loggers);
@@ -72,11 +69,10 @@ public class ITAppenderServices extends LogTestBase {
 
         delay();
 
-        Logger bar = LoggerFactory.getLogger("foo.bar");
-        assertTrue(bar.isDebugEnabled());
-
-        Logger baz = LoggerFactory.getLogger("foo.baz");
-        assertTrue(baz.isInfoEnabled());
+        ch.qos.logback.classic.Logger bar = (ch.qos.logback.classic.Logger)LoggerFactory.getLogger("foo.bar");
+        bar.setLevel(Level.DEBUG);
+        ch.qos.logback.classic.Logger baz = (ch.qos.logback.classic.Logger)LoggerFactory.getLogger("foo.baz");
+        baz.setLevel(Level.INFO);
 
         bar.debug("Test message");
         baz.debug("Test message"); // Would not be logged
@@ -89,7 +85,6 @@ public class ITAppenderServices extends LogTestBase {
         sr.unregister();
         delay();
 
-        assertFalse(bar.isDebugEnabled());
     }
 
     private static class TestAppender extends AppenderBase<ILoggingEvent> {
diff --git a/src/test/java/org/apache/sling/commons/log/logback/integration/ITFilterSupport.java b/src/test/java/org/apache/sling/commons/log/logback/integration/ITFilterSupport.java
index 398e7b1..eba0eed 100644
--- a/src/test/java/org/apache/sling/commons/log/logback/integration/ITFilterSupport.java
+++ b/src/test/java/org/apache/sling/commons/log/logback/integration/ITFilterSupport.java
@@ -18,15 +18,16 @@
  */
 package org.apache.sling.commons.log.logback.integration;
 
-import ch.qos.logback.classic.Level;
-import ch.qos.logback.classic.Logger;
-import ch.qos.logback.classic.spi.ILoggingEvent;
-import ch.qos.logback.classic.turbo.MatchingFilter;
-import ch.qos.logback.classic.turbo.TurboFilter;
-import ch.qos.logback.core.Appender;
-import ch.qos.logback.core.AppenderBase;
-import ch.qos.logback.core.filter.Filter;
-import ch.qos.logback.core.spi.FilterReply;
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertNotNull;
+import static org.junit.Assert.assertTrue;
+
+import java.util.ArrayList;
+import java.util.Dictionary;
+import java.util.Hashtable;
+import java.util.List;
+
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.ops4j.pax.exam.junit.PaxExam;
@@ -36,15 +37,15 @@ import org.osgi.framework.ServiceRegistration;
 import org.slf4j.LoggerFactory;
 import org.slf4j.Marker;
 
-import java.util.ArrayList;
-import java.util.Dictionary;
-import java.util.Hashtable;
-import java.util.List;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertFalse;
-import static org.junit.Assert.assertTrue;
-import static org.junit.Assert.assertNotNull;
+import ch.qos.logback.classic.Level;
+import ch.qos.logback.classic.Logger;
+import ch.qos.logback.classic.spi.ILoggingEvent;
+import ch.qos.logback.classic.turbo.MatchingFilter;
+import ch.qos.logback.classic.turbo.TurboFilter;
+import ch.qos.logback.core.Appender;
+import ch.qos.logback.core.AppenderBase;
+import ch.qos.logback.core.filter.Filter;
+import ch.qos.logback.core.spi.FilterReply;
 
 @RunWith(PaxExam.class)
 @ExamReactorStrategy(PerClass.class)
@@ -142,9 +143,13 @@ public class ITFilterSupport extends LogTestBase{
         Dictionary<String, Object> props = new Hashtable<String, Object>();
 
         String[] loggers = {
-                prefix + ".foo.bar:DEBUG",
-                prefix + ".foo.baz:INFO",
+                prefix + ".foo.bar",
+                prefix + ".foo.baz",
         };
+        ch.qos.logback.classic.Logger bar = (ch.qos.logback.classic.Logger)LoggerFactory.getLogger(loggers[0]);
+        bar.setLevel(Level.DEBUG);
+        ch.qos.logback.classic.Logger baz = (ch.qos.logback.classic.Logger)LoggerFactory.getLogger(loggers[1]);
+        baz.setLevel(Level.INFO);
 
         props.put("loggers", loggers);
         ServiceRegistration sr = bundleContext.registerService(Appender.class.getName(), ta, props);
diff --git a/src/test/java/org/apache/sling/commons/log/logback/integration/ITJULIntegration.java b/src/test/java/org/apache/sling/commons/log/logback/integration/ITJULIntegration.java
index 22700db..6cd300f 100644
--- a/src/test/java/org/apache/sling/commons/log/logback/integration/ITJULIntegration.java
+++ b/src/test/java/org/apache/sling/commons/log/logback/integration/ITJULIntegration.java
@@ -19,17 +19,19 @@
 
 package org.apache.sling.commons.log.logback.integration;
 
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertTrue;
+import static org.ops4j.pax.exam.CoreOptions.composite;
+import static org.ops4j.pax.exam.CoreOptions.frameworkProperty;
+import static org.ops4j.pax.exam.CoreOptions.systemProperty;
+
 import java.io.File;
 import java.util.ArrayList;
 import java.util.Dictionary;
 import java.util.Hashtable;
 import java.util.List;
 
-import ch.qos.logback.classic.spi.ILoggingEvent;
-import ch.qos.logback.core.Appender;
-import ch.qos.logback.core.AppenderBase;
 import org.apache.commons.io.FilenameUtils;
-import org.apache.sling.commons.log.logback.integration.LogTestBase;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.ops4j.pax.exam.Option;
@@ -39,11 +41,10 @@ import org.ops4j.pax.exam.spi.reactors.PerClass;
 import org.osgi.framework.ServiceRegistration;
 import org.slf4j.LoggerFactory;
 
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertTrue;
-import static org.ops4j.pax.exam.CoreOptions.composite;
-import static org.ops4j.pax.exam.CoreOptions.frameworkProperty;
-import static org.ops4j.pax.exam.CoreOptions.systemProperty;
+import ch.qos.logback.classic.Level;
+import ch.qos.logback.classic.spi.ILoggingEvent;
+import ch.qos.logback.core.Appender;
+import ch.qos.logback.core.AppenderBase;
 
 @RunWith(PaxExam.class)
 @ExamReactorStrategy(PerClass.class)
@@ -79,8 +80,10 @@ public class ITJULIntegration extends LogTestBase {
         Dictionary<String, Object> props = new Hashtable<String, Object>();
 
         String[] loggers = {
-            "foo.jul.1:INFO",
+            "foo.jul.1",
         };
+        ch.qos.logback.classic.Logger bar = (ch.qos.logback.classic.Logger)LoggerFactory.getLogger(loggers[0]);
+        bar.setLevel(Level.INFO);
 
         props.put("loggers", loggers);
         ServiceRegistration sr = bundleContext.registerService(Appender.class.getName(), ta, props);
