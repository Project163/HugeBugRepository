diff --git a/CHANGES.txt b/CHANGES.txt
index d3c54297c..e0acd4c8b 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -12,6 +12,9 @@ Release 0.11 - Current Development
    as Unicode zero-width space (U+200B), and non-breaking hyphen as
    Unicode non-breaking hyphen (U+2011).
 
+ * TIKA-742: Paragraphs are now extracted within each page of a PDF
+   document.
+
 Release 0.10 - 09/25/2011
 
 The most notable changes in Tika 0.10 over previous releases are:
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java b/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java
index 29ba3aca8..c0c626f7b 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java
@@ -37,6 +37,9 @@ import org.xml.sax.SAXException;
  */
 class PDF2XHTML extends PDFTextStripper {
 
+    // TODO: remove once PDFBOX-1130 is fixed:
+    private boolean inParagraph = false;
+
     /**
      * Converts the given PDF document (and related metadata) to a stream
      * of XHTML SAX events sent to the given content handler.
@@ -120,6 +123,37 @@ class PDF2XHTML extends PDFTextStripper {
         }
     }
 
+    @Override
+    protected void writeParagraphStart() throws IOException {
+        // TODO: remove once PDFBOX-1130 is fixed
+        if (inParagraph) {
+            // Close last paragraph
+            writeParagraphEnd();
+        }
+        assert !inParagraph;
+        inParagraph = true;
+        try {
+            handler.startElement("p");
+        } catch (SAXException se) {
+            throw new IOException(se);
+        }
+    }
+
+    @Override
+    protected void writeParagraphEnd() throws IOException {
+        // TODO: remove once PDFBOX-1130 is fixed
+        if (!inParagraph) {
+            writeParagraphStart();
+        }
+        assert inParagraph;
+        inParagraph = false;
+        try {
+            handler.endElement("p");
+        } catch (SAXException se) {
+            throw new IOException(se);
+        }
+    }
+
     @Override
     protected void writeString(String text) throws IOException {
         try {
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/pdf/PDFParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/pdf/PDFParserTest.java
index 6fd83d075..18c867aa4 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/pdf/PDFParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/pdf/PDFParserTest.java
@@ -17,6 +17,12 @@
 package org.apache.tika.parser.pdf;
 
 import java.io.InputStream;
+import java.io.StringWriter;
+
+import javax.xml.transform.OutputKeys;
+import javax.xml.transform.sax.SAXTransformerFactory;
+import javax.xml.transform.sax.TransformerHandler;
+import javax.xml.transform.stream.StreamResult;
 
 import org.apache.tika.TikaTest;
 import org.apache.tika.metadata.Metadata;
@@ -25,7 +31,6 @@ import org.apache.tika.parser.ParseContext;
 import org.apache.tika.parser.Parser;
 import org.apache.tika.sax.BodyContentHandler;
 import org.xml.sax.ContentHandler;
-
 /**
  * Test case for parsing pdf files.
  */
@@ -230,4 +235,41 @@ public class PDFParserTest extends TikaTest {
         assertContains("Here is some text", content);
         assertContains("Here is a comment", content);
     }
+
+    public void testPageNumber() throws Exception {
+        final XMLResult result = getXML("testPageNumber.pdf");
+        final String content = result.xml.replaceAll("\\s+","");
+        assertContains("<p>1</p>", content);
+    }
+
+    private static class XMLResult {
+        public final String xml;
+        public final Metadata metadata;
+
+        public XMLResult(String xml, Metadata metadata) {
+            this.xml = xml;
+            this.metadata = metadata;
+      }
+    }
+
+    private XMLResult getXML(String filename) throws Exception {
+        Metadata metadata = new Metadata();
+        Parser parser = new AutoDetectParser(); // Should auto-detect!        
+        StringWriter sw = new StringWriter();
+        SAXTransformerFactory factory = (SAXTransformerFactory)
+                 SAXTransformerFactory.newInstance();
+        TransformerHandler handler = factory.newTransformerHandler();
+        handler.getTransformer().setOutputProperty(OutputKeys.METHOD, "xml");
+        handler.getTransformer().setOutputProperty(OutputKeys.INDENT, "no");
+        handler.setResult(new StreamResult(sw));
+
+        // Try with a document containing various tables and formattings
+        InputStream input = getResourceAsStream("/test-documents/" + filename);
+        try {
+            parser.parse(input, handler, metadata, new ParseContext());
+            return new XMLResult(sw.toString(), metadata);
+        } finally {
+            input.close();
+        }
+    }
 }
diff --git a/tika-parsers/src/test/resources/test-documents/testPageNumber.pdf b/tika-parsers/src/test/resources/test-documents/testPageNumber.pdf
new file mode 100644
index 000000000..0ec2693a8
Binary files /dev/null and b/tika-parsers/src/test/resources/test-documents/testPageNumber.pdf differ
