diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/dwg/DWGParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/dwg/DWGParser.java
index 5f8fcace2..2cfb53dfd 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/dwg/DWGParser.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/dwg/DWGParser.java
@@ -93,7 +93,12 @@ public class DWGParser extends AbstractParser {
      * How far to skip after the last standard property, before
      *  we find any custom properties that might be there.
      */
-    private static final int CUSTOM_PROPERTIES_SKIP = 20; 
+    private static final int CUSTOM_PROPERTIES_SKIP = 20;
+    
+    /** 
+     * The value of padding bytes other than 0 in some DWG files.
+     */
+    private static final int[] CUSTOM_PROPERTIES_ALT_PADDING_VALUES = new int[] {0x2, 0, 0, 0};
 
     public void parse(
             InputStream stream, ContentHandler handler,
@@ -317,11 +322,16 @@ public class DWGParser extends AbstractParser {
 
     private int skipToCustomProperties(InputStream stream) 
             throws IOException, TikaException {
-       // There should be 4 zero bytes next
+       // There should be 4 zero bytes or CUSTOM_PROPERTIES_ALT_PADDING_VALUES next
        byte[] padding = new byte[4];
        IOUtils.readFully(stream, padding);
-       if(padding[0] == 0 && padding[1] == 0 &&
-             padding[2] == 0 && padding[3] == 0) {
+       if((padding[0] == 0 && padding[1] == 0 &&
+             padding[2] == 0 && padding[3] == 0) ||
+             (padding[0] == CUSTOM_PROPERTIES_ALT_PADDING_VALUES[0] && 
+               padding[1] == CUSTOM_PROPERTIES_ALT_PADDING_VALUES[1] &&
+               padding[2] == CUSTOM_PROPERTIES_ALT_PADDING_VALUES[2] &&
+               padding[3] == CUSTOM_PROPERTIES_ALT_PADDING_VALUES[3])) {
+           
           // Looks hopeful, skip on
           padding = new byte[CUSTOM_PROPERTIES_SKIP];
           IOUtils.readFully(stream, padding);
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/dwg/DWGParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/dwg/DWGParserTest.java
index 4e9ad901b..5bb64bcbb 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/dwg/DWGParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/dwg/DWGParserTest.java
@@ -55,6 +55,29 @@ public class DWGParserTest extends TestCase {
                 "/test-documents/testDWG2010.dwg");
         testParser(input);
     }
+    
+    public void testDWG2010CustomPropertiesParser() throws Exception {
+        // Check that standard parsing works
+        InputStream input = DWGParserTest.class.getResourceAsStream(
+                "/test-documents/testDWG2010_custom_props.dwg");
+        testParser(input);
+        
+        // Check that custom properties with alternate padding work
+        input = DWGParserTest.class.getResourceAsStream(
+                "/test-documents/testDWG2010_custom_props.dwg");
+        try {
+            Metadata metadata = new Metadata();
+            ContentHandler handler = new BodyContentHandler();
+            new DWGParser().parse(input, handler, metadata, null);
+            
+            assertEquals("valueforcustomprop1",
+                    metadata.get("customprop1"));
+            assertEquals("valueforcustomprop2",
+                    metadata.get("customprop2"));
+        } finally {
+            input.close();
+        }
+    }
 
     public void testDWGMechParser() throws Exception {
         String[] types = new String[] {
diff --git a/tika-parsers/src/test/resources/test-documents/testDWG2010_custom_props.dwg b/tika-parsers/src/test/resources/test-documents/testDWG2010_custom_props.dwg
new file mode 100644
index 000000000..11867214a
Binary files /dev/null and b/tika-parsers/src/test/resources/test-documents/testDWG2010_custom_props.dwg differ
