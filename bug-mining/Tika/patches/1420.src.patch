diff --git a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-pkg-module/src/main/java/org/apache/tika/parser/pkg/CompressorParser.java b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-pkg-module/src/main/java/org/apache/tika/parser/pkg/CompressorParser.java
index e5f9767e2..11ecf902e 100644
--- a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-pkg-module/src/main/java/org/apache/tika/parser/pkg/CompressorParser.java
+++ b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-pkg-module/src/main/java/org/apache/tika/parser/pkg/CompressorParser.java
@@ -160,10 +160,12 @@ public class CompressorParser implements Parser {
     }
 
 
+    @Override
     public Set<MediaType> getSupportedTypes(ParseContext context) {
         return SUPPORTED_TYPES;
     }
 
+    @Override
     public void parse(InputStream stream, ContentHandler handler, Metadata metadata,
                       ParseContext context) throws IOException, SAXException, TikaException {
         // At the end we want to close the compression stream to release
@@ -217,7 +219,7 @@ public class CompressorParser implements Parser {
                         name.endsWith(".zlib") || name.endsWith(".pack") || name.endsWith(".br")) {
                     name = name.substring(0, name.lastIndexOf("."));
                 } else if (name.length() > 0) {
-                    name = GzipUtils.getUncompressedFilename(name);
+                    name = GzipUtils.getUncompressedFileName(name);
                 }
                 entrydata.set(TikaCoreProperties.RESOURCE_NAME_KEY, name);
             }
