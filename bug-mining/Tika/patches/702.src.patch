diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESContentHandler.java b/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESContentHandler.java
index 767fa8c8c..25f6c461f 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESContentHandler.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESContentHandler.java
@@ -97,11 +97,15 @@ public class CTAKESContentHandler extends ContentHandlerDecorator {
             // create a JCas, given an AE
             JCas jcas = CTAKESUtils.getJCas(ae);
 
+            // get metadata to process
             StringBuilder metaText = new StringBuilder();
-            for (String name : config.getMetadata()) {
-                for (String value : metadata.getValues(name)) {
-                    metaText.append(value);
-                    metaText.append(System.lineSeparator());
+            String[] metadataToProcess = config.getMetadata();
+            if (metadataToProcess != null) {
+                for (String name : config.getMetadata()) {
+                    for (String value : metadata.getValues(name)) {
+                        metaText.append(value);
+                        metaText.append(System.lineSeparator());
+                    }
                 }
             }
 
@@ -132,8 +136,9 @@ public class CTAKESContentHandler extends ContentHandlerDecorator {
                 CTAKESUtils.serialize(config.getSerializerType(), config.isPrettyPrint(), config.getOutputStream());
             }
         } catch (Exception e) {
-            e.printStackTrace();
             throw new SAXException(e.getMessage());
+        } finally {
+            CTAKESUtils.resetCAS();
         }
     }
 
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESParser.java
index 57bfdfc43..fb04a594d 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESParser.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESParser.java
@@ -38,13 +38,13 @@ import org.xml.sax.SAXException;
  * <code>AutoDetectParser parser = new AutoDetectParser(new CTAKESParser());</code>
  * <p>It can also be used by giving a Tika Config file similar to:
  * <code>
- *  &gt;properties>
- *    &gt;parsers>
- *      &gt;parser class="org.apache.tika.parser.ctakes.CTAKESParser">
- *         &gt;parser class="org.apache.tika.parser.DefaultParser"/>
- *      &gt;/parser>
- *    &gt;/parsers>
- *  &gt;/properties>
+ *  <properties>
+ *    <parsers>
+ *      <parser class="org.apache.tika.parser.ctakes.CTAKESParser">
+ *        <parser class="org.apache.tika.parser.DefaultParser"/>
+ *      </parser>
+ *    </parsers>
+ *  </properties>
  * </code>
  * <p>Because this is a Parser Decorator, and not a normal Parser in
  *  it's own right, it isn't normally selected via the Parser Service Loader.
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESUtils.java b/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESUtils.java
index 3e83b8ec6..76c4e6b99 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESUtils.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/ctakes/CTAKESUtils.java
@@ -238,4 +238,29 @@ public class CTAKESUtils {
         jcas.reset();
         jcas = null;
     }
+
+    /**
+     * Resets the CAS (Common Analysis System), emptying it of all content.
+     */
+    public static void resetCAS() {
+        if (jcas != null) {
+            jcas.reset();
+        }
+    }
+
+    /**
+     * Resets the AE (AnalysisEngine), releasing all resources held by the 
+     * current AE.
+     */
+    public static void resetAE() {
+        if (ae != null) {
+            ae.destroy();
+            ae = null;
+        }
+
+        if (jcas != null) {
+            jcas.reset();
+            jcas = null;
+        }
+    }
 }
