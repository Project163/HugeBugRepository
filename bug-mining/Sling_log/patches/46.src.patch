diff --git a/src/main/java/org/apache/sling/commons/log/logback/internal/FilterTracker.java b/src/main/java/org/apache/sling/commons/log/logback/internal/FilterTracker.java
index 2ab960b..6e4403d 100644
--- a/src/main/java/org/apache/sling/commons/log/logback/internal/FilterTracker.java
+++ b/src/main/java/org/apache/sling/commons/log/logback/internal/FilterTracker.java
@@ -52,7 +52,6 @@ public class FilterTracker extends ServiceTracker implements LogbackResetListene
         this.logbackManager = logbackManager;
         this.loggerContext = logbackManager.getLoggerContext();
         this.contextUtil =  new ContextUtil(loggerContext);
-        super.open();
     }
 
     @SuppressWarnings("unchecked")
diff --git a/src/main/java/org/apache/sling/commons/log/logback/internal/LogbackManager.java b/src/main/java/org/apache/sling/commons/log/logback/internal/LogbackManager.java
index e63c6e5..1dbf11c 100644
--- a/src/main/java/org/apache/sling/commons/log/logback/internal/LogbackManager.java
+++ b/src/main/java/org/apache/sling/commons/log/logback/internal/LogbackManager.java
@@ -170,6 +170,8 @@ public class LogbackManager extends LoggerContextAwareBase {
         serviceTrackers.add(filterTracker);
         serviceTrackers.add(turboFilterTracker);
 
+        this.filterTracker.open();
+        this.turboFilterTracker.open();
         getLoggerContext().addListener(osgiIntegrationListener);
         registerWebConsoleSupport();
         registerEventHandler();
diff --git a/src/main/java/org/apache/sling/commons/log/logback/internal/TurboFilterTracker.java b/src/main/java/org/apache/sling/commons/log/logback/internal/TurboFilterTracker.java
index 7c24493..33cf57b 100644
--- a/src/main/java/org/apache/sling/commons/log/logback/internal/TurboFilterTracker.java
+++ b/src/main/java/org/apache/sling/commons/log/logback/internal/TurboFilterTracker.java
@@ -35,7 +35,6 @@ public class TurboFilterTracker extends ServiceTracker implements LogbackResetLi
     public TurboFilterTracker(BundleContext context, LoggerContext loggerContext) {
         super(context, TurboFilter.class.getName(), null);
         this.loggerContext = loggerContext;
-        super.open();
     }
 
     @Override
