diff --git a/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/Mapper.java b/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/Mapper.java
index 812863cb..8b8c4cd2 100644
--- a/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/Mapper.java
+++ b/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/Mapper.java
@@ -212,15 +212,15 @@ public class Mapper implements Closeable {
     }
 
     public <T> void writeArray(final Object object, final OutputStream stream) {
-        writeArray(asList((T[]) object), stream);
+        writeObject(asList((T[]) object), stream);
     }
 
     public <T> void writeArray(final T[] object, final OutputStream stream) {
-        writeArray(asList(object), stream);
+        writeObject(asList(object), stream);
     }
 
     public <T> void writeArray(final T[] object, final Writer stream) {
-        writeArray(asList(object), stream);
+        writeObject(asList(object), stream);
     }
 
     public <T> void writeArray(final Collection<T> object, final OutputStream stream) {
@@ -230,7 +230,7 @@ public class Mapper implements Closeable {
     public <T> void writeArray(final Collection<T> object, final Writer stream) {
         JsonGenerator generator = generatorFactory.createGenerator(stream(stream));
         try {
-            generator = doWriteArray(object, generator);
+            writeObject(object, generator);
         } finally {
             generator.close();
         }
@@ -261,15 +261,7 @@ public class Mapper implements Closeable {
     public <T> void writeIterable(final Iterable<T> object, final Writer stream) {
         JsonGenerator generator = generatorFactory.createGenerator(stream(stream));
         try {
-            if (object == null) {
-                generator = generator.writeStartArray().writeEnd();
-            } else {
-                generator.writeStartArray();
-                for (final T t : object) {
-                    generator = writeItem(generator, t);
-                }
-                generator.writeEnd();
-            }
+            writeObject(object, generator);
         } finally {
             generator.close();
         }
@@ -309,10 +301,8 @@ public class Mapper implements Closeable {
     }
 
     private void writeObject(Object object, JsonGenerator generator) {
-        MappingGenerator mappingGenerator = new MappingGeneratorImpl(config, generator, mappings);
-        generator.writeStartObject();
-        mappingGenerator.writeObject(object);
-        generator.writeEnd();
+        MappingGeneratorImpl mappingGenerator = new MappingGeneratorImpl(config, generator, mappings);
+        mappingGenerator.doWriteObject(object, true);
         generator.close();
     }
 
@@ -334,25 +324,6 @@ public class Mapper implements Closeable {
         return writer.toString();
     }
 
-    private void doWriteHandlingNullObject(final Object object, final JsonGenerator generator) {
-        if (object == null) {
-            generator.writeStartObject().writeEnd().close();
-            return;
-        }
-        if (object instanceof JsonValue) {
-            generator.write((JsonValue) object);
-            return;
-        }
-
-        JsonGenerator gen = null;
-        try {
-            gen = doWriteObject(generator, object);
-        } finally {
-            if (gen != null) {
-                gen.close();
-            }
-        }
-    }
 
     private JsonGenerator doWriteObject(final JsonGenerator generator, final Object object) {
         try {
diff --git a/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MappingGeneratorImpl.java b/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MappingGeneratorImpl.java
index d823be60..3e82ebd9 100644
--- a/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MappingGeneratorImpl.java
+++ b/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MappingGeneratorImpl.java
@@ -60,7 +60,7 @@ public class MappingGeneratorImpl implements MappingGenerator {
         return this;
     }
 
-    private void doWriteObject(Object object, boolean writeBody) {
+    public void doWriteObject(Object object, boolean writeBody) {
         try {
             if (object instanceof Map) {
                 if (writeBody) {
@@ -85,6 +85,11 @@ public class MappingGeneratorImpl implements MappingGenerator {
                 return;
             }
 
+            if (object instanceof Iterable) {
+                doWriteIterable((Iterable) object);
+                return;
+            }
+
             if (writeBody) {
                 generator.writeStartObject();
             }
@@ -315,13 +320,18 @@ public class MappingGeneratorImpl implements MappingGenerator {
     private void writeItem(final Object o) {
         if (!writePrimitives(o)) {
             if (Collection.class.isInstance(o)) {
-                doWriteArray(Collection.class.cast(o));
+                doWriteIterable(Collection.class.cast(o));
             } else if (o != null && o.getClass().isArray()) {
                 final int length = Array.getLength(o);
                 if (length > 0 || !config.isSkipEmptyArray()) {
                     generator.writeStartArray();
                     for (int i = 0; i < length; i++) {
-                        writeItem(Array.get(o, i));
+                        Object t = Array.get(o, i);
+                        if (t == null) {
+                            generator.writeNull();
+                        } else {
+                            writeItem(t);
+                        }
                     }
                     generator.writeEnd();
                 }
@@ -333,7 +343,7 @@ public class MappingGeneratorImpl implements MappingGenerator {
         }
     }
 
-    private <T> void doWriteArray(final Collection<T> object) {
+    private <T> void doWriteIterable(final Iterable<T> object) {
         if (object == null) {
             generator.writeStartArray().writeEnd();
         } else {
@@ -342,7 +352,11 @@ public class MappingGeneratorImpl implements MappingGenerator {
                 if (JsonValue.class.isInstance(t)) {
                     generator.write(JsonValue.class.cast(t));
                 } else {
-                    writeItem(t);
+                    if (t == null) {
+                        generator.writeNull();
+                    } else {
+                        writeItem(t);
+                    }
                 }
             }
             generator.writeEnd();
diff --git a/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/MapperTest.java b/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/MapperTest.java
index b5c70a7b..8b3d25d9 100644
--- a/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/MapperTest.java
+++ b/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/MapperTest.java
@@ -1010,20 +1010,4 @@ public class MapperTest {
         }
     }
 
-    /*public static class ByteArray {
-        
-        public byte[] byteArray;
-
-        @JohnzonConverter(ByteArrayBase64Converter.class)
-        public byte[] getByteArray() {
-            return byteArray;
-        }
-
-        @JohnzonConverter(ByteArrayBase64Converter.class)
-        public void setByteArray(byte[] byteArray) {
-            this.byteArray = byteArray;
-        }
-        
-        
-    }*/
 }
