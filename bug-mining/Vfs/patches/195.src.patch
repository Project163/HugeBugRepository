diff --git a/commons-vfs2/src/main/java/org/apache/commons/vfs2/provider/jar/JarFileObject.java b/commons-vfs2/src/main/java/org/apache/commons/vfs2/provider/jar/JarFileObject.java
index eb370d68..24727df3 100644
--- a/commons-vfs2/src/main/java/org/apache/commons/vfs2/provider/jar/JarFileObject.java
+++ b/commons-vfs2/src/main/java/org/apache/commons/vfs2/provider/jar/JarFileObject.java
@@ -42,6 +42,12 @@ public class JarFileObject extends ZipFileObject {
     protected JarFileObject(final AbstractFileName name, final ZipEntry entry, final JarFileSystem fs,
             final boolean zipExists) throws FileSystemException {
         super(name, entry, fs, zipExists);
+        if (entry != null) {
+			// For Java 9 and up: Force the certificates to be read and cached now. This avoids an
+			// IllegalStateException in java.util.jar.JarFile.isMultiRelease() when it tries
+			// to read the certificates and the file is closed.
+        	((JarEntry) entry).getCertificates();
+        }
         this.fs = fs;
 
         try {
diff --git a/commons-vfs2/src/test/java/org/apache/commons/vfs2/test/AbstractTestSuite.java b/commons-vfs2/src/test/java/org/apache/commons/vfs2/test/AbstractTestSuite.java
index 0ec2f787..8241c7b8 100644
--- a/commons-vfs2/src/test/java/org/apache/commons/vfs2/test/AbstractTestSuite.java
+++ b/commons-vfs2/src/test/java/org/apache/commons/vfs2/test/AbstractTestSuite.java
@@ -24,21 +24,21 @@ import java.util.ArrayList;
 import java.util.Enumeration;
 import java.util.List;
 
-import junit.extensions.TestSetup;
-import junit.framework.Protectable;
-import junit.framework.Test;
-import junit.framework.TestResult;
-import junit.framework.TestSuite;
-
-import org.apache.commons.io.FileUtils;
-
 import org.apache.commons.AbstractVfsTestCase;
+import org.apache.commons.io.FileUtils;
 import org.apache.commons.vfs2.FileName;
 import org.apache.commons.vfs2.FileObject;
 import org.apache.commons.vfs2.impl.DefaultFileReplicator;
 import org.apache.commons.vfs2.impl.DefaultFileSystemManager;
 import org.apache.commons.vfs2.impl.PrivilegedFileReplicator;
 import org.apache.commons.vfs2.provider.local.DefaultLocalFileProvider;
+import org.junit.Assert;
+
+import junit.extensions.TestSetup;
+import junit.framework.Protectable;
+import junit.framework.Test;
+import junit.framework.TestResult;
+import junit.framework.TestSuite;
 
 /**
  * The suite of tests for a file system.
@@ -173,6 +173,9 @@ public abstract class AbstractTestSuite extends TestSetup {
 
         // Configure the tests
         final Enumeration<Test> tests = testSuite.tests();
+        if (!tests.hasMoreElements()) {
+        	Assert.fail("No tests.");
+        }
         while (tests.hasMoreElements()) {
             final Test test = tests.nextElement();
             if (test instanceof AbstractProviderTestCase) {
diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index b2482a82..9400bd7f 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -50,6 +50,9 @@ The <action> type attribute can be add,update,fix,remove.
 <!--        [Local] Need an easy way to convert from a FileObject to a File. -->
 <!--       </action> -->
 <!-- START Might need to be moved to the next version -->
+      <action issue="VFS-645" dev="ggregory" type="fix">
+		VfsClassLoaderTests and JarProviderTestCase fails on Java 9 and up.
+      </action>
       <action issue="VFS-678" dev="ecki" type="fix">
         Fix various LGTM.com code review warnings.
       </action>
