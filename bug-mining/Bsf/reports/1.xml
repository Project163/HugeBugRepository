<!-- 
RSS generated by JIRA (8.20.10#820010-sha1:ace47f9899e9ee25d7157d59aa17ab06aee30d3d) at Thu Oct 30 15:16:14 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>8.20.10</version>
        <build-number>820010</build-number>
        <build-date>22-06-2022</build-date>
    </build-info>


<item>
            <title>[BSF-7] BSF 2.4: ClassLoader Issue with OpenOffice.org 2.3.0</title>
                <link>https://issues.apache.org/jira/browse/BSF-7</link>
                <project id="12310621" key="BSF">Commons BSF</project>
                    <description>&lt;p&gt;With the new version of OpenOffice.org (OOo) 2.3.0 Java extensions get loaded via a customized ClassLoader. As BSFManager uses the thread&apos;s context class loader first, and not its defined class loader, the properties cannot be retrieved anymore at runtime, which means that BSFManager thinks that no BSF engines are available!&lt;/p&gt;

&lt;p&gt;Looking through the code there are other locations, where the class loading could be improved to cater for all kind of defining class loader configurations for BSFManager.&lt;/p&gt;</description>
                <environment>Any, BSF 2.4</environment>
        <key id="12378931">BSF-7</key>
            <summary>BSF 2.4: ClassLoader Issue with OpenOffice.org 2.3.0</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.svg">Critical</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rony">Rony Flatscher</assignee>
                                    <reporter username="rony">Rony Flatscher</reporter>
                        <labels>
                    </labels>
                <created>Sat, 22 Sep 2007 19:15:12 +0000</created>
                <updated>Tue, 9 Oct 2007 10:47:23 +0000</updated>
                            <resolved>Sat, 22 Sep 2007 19:24:51 +0000</resolved>
                                    <version>BSF-2.4</version>
                                    <fixVersion>BSF-2.4</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                                                                <comments>
                            <comment id="12529688" author="rony" created="Sat, 22 Sep 2007 19:24:51 +0000"  >&lt;p&gt;SVN rev. 578478 includes fixes for this bug.&lt;/p&gt;

&lt;p&gt;The &quot;BSF4Rexx&quot; package (&lt;a href=&quot;http://wi.wu-wien.ac.at/rgf/rexx/bsf4rexx/old/2007/dist.20070921/&quot; class=&quot;external-link&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;http://wi.wu-wien.ac.at/rgf/rexx/bsf4rexx/old/2007/dist.20070921/&lt;/a&gt;) includes these edits (BSF is included in source and in binary form there) and works again for &amp;lt;http:www.OpenOffice.org&amp;gt;.&lt;/p&gt;

&lt;p&gt;Here&apos;s the e-mail from the bsf-developer list, which explains in a little bit more detail the problem and the current resolution.&lt;/p&gt;

&lt;p&gt;--------------------- cut here --------------------&lt;br/&gt;
Date: Thu, 20 Sep 2007 12:24:29 +0200&lt;br/&gt;
From: &quot;Rony G. Flatscher&quot; &amp;lt;Rony.Flatscher@wu-wien.ac.at&amp;gt;&lt;br/&gt;
To: Bean Scripting Framework developers &amp;lt;bsf-dev@jakarta.apache.org&amp;gt;&lt;br/&gt;
Subject: Issue with ClassLoaders ...&lt;/p&gt;


&lt;p&gt;Hi there,&lt;/p&gt;

&lt;p&gt;about two weeks ago I downloaded OpenOffice 2.3.0 (OOo), release&lt;br/&gt;
candidate 2, to test BSF4Rexx, which enables the ooRexx scripting&lt;br/&gt;
language to interface/script/remote-control OpenOffice via its Java&lt;br/&gt;
APIs. OOo is mostly implemented in C++, but has a full set of Java APIs&lt;br/&gt;
to it. Also, OOo has a Java written Scripting framework via which one&lt;br/&gt;
can deploy any of the BSF supported scriping engines. It is in this area&lt;br/&gt;
(allowing a scripting language to be deployed as a macro language by OOo&lt;br/&gt;
itself), where a class loader problem has surfaced, now that OOo uses a&lt;br/&gt;
customized class loader to load OOo extensions written in Java!&lt;/p&gt;

&lt;p&gt;The problem may be a general problem for the current implementation of&lt;br/&gt;
BSF 2.x for the following reasons:&lt;/p&gt;

&lt;p&gt;   1. If the defining class loader which is used to load the BSFManager&lt;br/&gt;
      class is a customized one, then the current implementation of&lt;br/&gt;
      BSFManager may not be successful in getting at the properties file&lt;br/&gt;
      which contains the supported BSF engines, as at the moment the&lt;br/&gt;
      thread&apos;s context class loader is used, which may be different from&lt;br/&gt;
      the customized class loader! (That&apos;s where one of  the problem has&lt;br/&gt;
      materialized with OOo 2.3.0 RC2.)&lt;br/&gt;
   2. Loading classes via &quot;Engine.loadClass()&quot; currently uses the&lt;br/&gt;
      thread&apos;s context class loader to load the classes. As OpenOffice&lt;br/&gt;
      does not set the context class loader explicitly there are cases,&lt;br/&gt;
      where some classes cannot be loaded via &quot;Engine.loadClass()&quot;,&lt;br/&gt;
      which would use by default the passed-in BSFManager instance&lt;br/&gt;
      (which might have been loaded with a yet different class loader!).&lt;/p&gt;

&lt;p&gt;To recollect the different possibilities a brief overview of class&lt;br/&gt;
loaders (CL):&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&quot;Bootstrap&quot; class loader (BCL): part of the JVM, a class being&lt;br/&gt;
      loaded by it would return &quot;null&quot; as its own class loader.&lt;/li&gt;
	&lt;li&gt;&quot;Extension class loader&quot; (ECL; &quot;extension&quot; now called &quot;option&quot;&lt;br/&gt;
      starting with Java 6): responsible for loading those classes that&lt;br/&gt;
      can be found in the java extension directories (cf. System&lt;br/&gt;
      property &quot;java.ext.dirs&quot;), supplied by the Java runtime&lt;/li&gt;
	&lt;li&gt;&quot;System class loader&quot;, dubbed &quot;Application class loader&quot; (ACL):&lt;br/&gt;
      responsible for loading the classes that can be found in the Java&lt;br/&gt;
      classpath (cf. System property &quot;java.class.path&quot;), supplied by the&lt;br/&gt;
      Java runtime.&lt;/li&gt;
	&lt;li&gt;&quot;Custom class loader&quot; (CCL), usually a subclass of URLClassLoader&lt;br/&gt;
      or one of its subclasses; there can be any number of CCLs in the&lt;br/&gt;
      system. CCLs are supposed to delegate the class loading to their&lt;br/&gt;
      parent, if any, before attempting to load a class by themselves,&lt;br/&gt;
      but they are free to not do so!&lt;/li&gt;
	&lt;li&gt;&quot;Context class loader&quot; (CTXCL): each thread may have a so called&lt;br/&gt;
      &quot;context class loader&quot;, which one is supposed to honor (and e.g.&lt;br/&gt;
      use for class loading); a programmer may freely get and set the&lt;br/&gt;
      thread&apos;s context class loader (e.g.&lt;br/&gt;
      &quot;Thread.getCurrentThread().
{get|set}
&lt;p&gt;ContextClassLoader()&quot;).&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;&quot;Defining class loader&quot; (DCL): the class loader used to load a&lt;br/&gt;
      specific class (is stored with the class object).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The class loaders create a hierarchy, typically BCL, ECL, ACL, and CCL&lt;br/&gt;
are organized as:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;BCL (bootstrap)&lt;/li&gt;
	&lt;li&gt;ECL (extensions)&lt;/li&gt;
	&lt;li&gt;ACL (system/application)&lt;br/&gt;
          o CCL1&lt;br/&gt;
          o CCL2&lt;br/&gt;
                + CCL21&lt;br/&gt;
                + etc.&lt;br/&gt;
          o etc.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;As each CL may have a different environment set up, it may not be clear&lt;br/&gt;
at runtime, which CL is able to load which classes.&lt;/p&gt;

&lt;p&gt;Originally, BSF used the BSFManager&apos;s DCL to load classes. In addition&lt;br/&gt;
it allowed to set the class loader to use for loading classes. As the&lt;br/&gt;
DCL may have been different to the CTXCL about two years ago I added the&lt;br/&gt;
usage of CTXCL with the exception of &quot;EngineUtils.loadClass()&quot; which&lt;br/&gt;
only would use the CTXCL, if the BSFManager stored class loader was null&lt;br/&gt;
(which for all practical purposes never would be the case).&lt;/p&gt;

&lt;p&gt;Now, being confronted with the new OOo possible deployments, and the&lt;br/&gt;
manyfold possibilities of CLs being used (ECL, ACL, CCLs) it may become&lt;br/&gt;
a challenge to apply a strategy of deploying the possible CLs at runtime&lt;br/&gt;
in a way which still keeps the system quick, and makes sure that all&lt;br/&gt;
meaningful CL are excercised to load classes for the purpose of BSF.&lt;br/&gt;
(Again, CCLs could adhere to the Java suggested convention of first&lt;br/&gt;
using their parent to load classes - which would be great; however, we&lt;br/&gt;
could not rely that CCLs truly implement that delegation, as they are&lt;br/&gt;
not forced to.)&lt;/p&gt;

&lt;p&gt;Thinking and experimenting with different kind of possibilities and&lt;br/&gt;
solutions, and trying to keep the implementation as simple as possible,&lt;br/&gt;
I would like to propose the following approaches to the aforementioned&lt;br/&gt;
two principle problems:&lt;/p&gt;

&lt;p&gt;   1. ad loading rexources (i.e. BSF&apos;s property file that defines the&lt;br/&gt;
      BSF engines available):&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;first use the CTXCL and if no properties can be retrieved&lt;br/&gt;
            via it,&lt;/li&gt;
	&lt;li&gt;then use BSFManager&apos;s DCL&lt;br/&gt;
   2. ad class loading in &quot;EngineUtils.loadClass8)&quot;:&lt;br/&gt;
         1. first use the CTXCL and if the class cannot be loaded,&lt;br/&gt;
         2. then use the CL that is stored with BSFManager (using&lt;br/&gt;
            &quot;mgr.getClassLoader()&quot; &lt;span class=&quot;error&quot;&gt;&amp;#91;as originally implemented&amp;#93;&lt;/span&gt;) and if&lt;br/&gt;
            the class cannot be loaded,&lt;br/&gt;
         3. then use the DL of BSFManager, if that is different from CL&lt;br/&gt;
            returned by &quot;mg.getClassLoader()&quot; and if the class cannot be&lt;br/&gt;
            loaded,&lt;br/&gt;
         4. then use the BSF-CL, which tries to load the class from the&lt;br/&gt;
            BSF temporary directory &lt;span class=&quot;error&quot;&gt;&amp;#91;as originally implemented&amp;#93;&lt;/span&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So the rule would be simple:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;first always use the CTXCL (which usually is the ACL), and only if&lt;br/&gt;
      a resource/class is not found extend the search,&lt;/li&gt;
	&lt;li&gt;next use the BSFManager&apos;s DCL (&quot;EngineUtils.loadClass()&quot; would&lt;br/&gt;
      honor the CL stored with the BSFManager instance and retrievable&lt;br/&gt;
      via its &quot;getClassLoader()&quot; first; but in most cases it can be&lt;br/&gt;
      expected that that CL would be BSFManager&apos;s DCL).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&amp;#8212;&lt;/p&gt;

&lt;p&gt;Now, all my tests so far (also in different use cases) indicate that&lt;br/&gt;
issues like the one encountered with the new OOo 2.3.0 would be solved&lt;br/&gt;
by these changes. In most cases resolving via CTXCL will succeed (as it&lt;br/&gt;
did in the past).&lt;/p&gt;

&lt;p&gt;However, before checking the changes in (after a few more tests in&lt;br/&gt;
different use cases), I would like to get feedback from this list, such&lt;br/&gt;
that we can discuss this further.&lt;/p&gt;

&lt;p&gt;Regards,&lt;/p&gt;

&lt;p&gt;---rony&lt;/p&gt;

&lt;p&gt;P.S.: Please note, not getting any feedback on this will be interpreted&lt;br/&gt;
by me that you concur with this assessment and changes to BSF 2.x!&lt;br/&gt;
 &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;br/&gt;
--------------------- cut here --------------------&lt;/p&gt;

&lt;p&gt;---rony&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>102159</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            18 years, 8 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0tatr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>169063</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfields>
    </item>
</channel>
</rss>