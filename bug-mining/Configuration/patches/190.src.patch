diff --git a/src/main/java/org/apache/commons/configuration/PropertiesConfigurationLayout.java b/src/main/java/org/apache/commons/configuration/PropertiesConfigurationLayout.java
index ff54ba1d..05e1af9e 100644
--- a/src/main/java/org/apache/commons/configuration/PropertiesConfigurationLayout.java
+++ b/src/main/java/org/apache/commons/configuration/PropertiesConfigurationLayout.java
@@ -724,7 +724,7 @@ public class PropertiesConfigurationLayout implements EventListener<Configuratio
      */
     static String stripCommentChar(String s, boolean comment)
     {
-        if (s.length() < 1 || (isCommentLine(s) == comment))
+        if (StringUtils.isBlank(s) || (isCommentLine(s) == comment))
         {
             return s;
         }
diff --git a/src/test/java/org/apache/commons/configuration/TestPropertiesConfigurationLayout.java b/src/test/java/org/apache/commons/configuration/TestPropertiesConfigurationLayout.java
index 15a84c4b..1ab3ee02 100644
--- a/src/test/java/org/apache/commons/configuration/TestPropertiesConfigurationLayout.java
+++ b/src/test/java/org/apache/commons/configuration/TestPropertiesConfigurationLayout.java
@@ -660,6 +660,21 @@ public class TestPropertiesConfigurationLayout
                 + TEST_VALUE + lf);
     }
 
+    /**
+     * Tests whether a line with whitespace is handled correctly. This is
+     * related to CONFIGURATION-582.
+     */
+    @Test
+    public void testLineWithBlank() throws ConfigurationException
+    {
+        builder.addComment(TEST_COMMENT);
+        builder.addLine(" ");
+        builder.addProperty(TEST_KEY, TEST_VALUE);
+        layout.load(config, builder.getReader());
+        assertEquals("Wrong comment", TEST_COMMENT + CRNORM + " ",
+                layout.getCanonicalComment(TEST_KEY, false));
+    }
+
     /**
      * Helper method for filling the layout object with some properties.
      */
@@ -719,6 +734,16 @@ public class TestPropertiesConfigurationLayout
         /** A counter for varying the comment character. */
         private int commentCounter;
 
+        /**
+         * Adds a line verbatim to the simulated file.
+         *
+         * @param s the content of the line
+         */
+        public void addLine(String s)
+        {
+            buf.append(s).append(CR);
+        }
+
         /**
          * Adds a property to the simulated file.
          *
