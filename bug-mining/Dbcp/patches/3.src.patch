diff --git a/src/java/org/apache/commons/dbcp/BasicDataSource.java b/src/java/org/apache/commons/dbcp/BasicDataSource.java
index 1d950e7f..554e6a56 100644
--- a/src/java/org/apache/commons/dbcp/BasicDataSource.java
+++ b/src/java/org/apache/commons/dbcp/BasicDataSource.java
@@ -133,7 +133,7 @@ public class BasicDataSource implements DataSource {
 
     /**
      * The maximum number of active connections that can be allocated from
-     * this pool at the same time, or zero for no limit.
+     * this pool at the same time, or non-positive for no limit.
      */
     protected int maxActive = GenericObjectPool.DEFAULT_MAX_ACTIVE;
 
@@ -151,7 +151,7 @@ public class BasicDataSource implements DataSource {
 
     /**
      * The maximum number of active connections that can remain idle in the
-     * pool, without extra ones being released, or zero for no limit.
+     * pool, without extra ones being released, or negative for no limit.
      */
     protected int maxIdle = GenericObjectPool.DEFAULT_MAX_IDLE;;
 
@@ -241,7 +241,7 @@ public class BasicDataSource implements DataSource {
 
     /**
      * The maximum number of open statements that can be allocated from
-     * the statement pool at the same time, or zero for no limit.  Since 
+     * the statement pool at the same time, or non-positive for no limit.  Since 
      * a connection usually only uses one or two statements at a time, this is
      * mostly used to help detect resource leaks.
      */
diff --git a/src/java/org/apache/commons/dbcp/cpdsadapter/DriverAdapterCPDS.java b/src/java/org/apache/commons/dbcp/cpdsadapter/DriverAdapterCPDS.java
index fb4e57b4..030607fc 100644
--- a/src/java/org/apache/commons/dbcp/cpdsadapter/DriverAdapterCPDS.java
+++ b/src/java/org/apache/commons/dbcp/cpdsadapter/DriverAdapterCPDS.java
@@ -148,7 +148,7 @@ public class DriverAdapterCPDS
         */
         KeyedObjectPool stmtPool = null;
         if (isPoolPreparedStatements()) {
-            if (getMaxPreparedStatements() == -1)
+            if (getMaxPreparedStatements() <= 0)
             {
                 // since there is no limit, create a prepared statement pool with an eviction thread
                 //  evictor settings are the same as the connection pool settings.
@@ -465,7 +465,7 @@ public class DriverAdapterCPDS
 
     /**
      * The maximum number of active statements that can be allocated from
-     * this pool at the same time, or zero for no limit.
+     * this pool at the same time, or non-positive for no limit.
      */
     public int getMaxActive() {
         return (this.maxActive);
@@ -473,7 +473,7 @@ public class DriverAdapterCPDS
 
     /**
      * The maximum number of active statements that can be allocated from
-     * this pool at the same time, or zero for no limit.
+     * this pool at the same time, or non-positive for no limit.
      */
     public void setMaxActive(int maxActive) {
         assertInitializationAllowed();
@@ -482,7 +482,7 @@ public class DriverAdapterCPDS
 
     /**
      * The maximum number of statements that can remain idle in the
-     * pool, without extra ones being released, or zero for no limit.
+     * pool, without extra ones being released, or negative for no limit.
      */
     public int getMaxIdle() {
         return (this.maxIdle);
@@ -490,7 +490,7 @@ public class DriverAdapterCPDS
 
     /**
      * The maximum number of statements that can remain idle in the
-     * pool, without extra ones being released, or zero for no limit.
+     * pool, without extra ones being released, or negative for no limit.
      */
     public void setMaxIdle(int maxIdle) {
         assertInitializationAllowed();
diff --git a/src/java/org/apache/commons/dbcp/datasources/PerUserPoolDataSource.java b/src/java/org/apache/commons/dbcp/datasources/PerUserPoolDataSource.java
index e304c3e9..42bc18f5 100644
--- a/src/java/org/apache/commons/dbcp/datasources/PerUserPoolDataSource.java
+++ b/src/java/org/apache/commons/dbcp/datasources/PerUserPoolDataSource.java
@@ -97,9 +97,9 @@ public class PerUserPoolDataSource
 
     /**
      * The maximum number of active connections that can be allocated from
-     * this pool at the same time, or zero for no limit.
+     * this pool at the same time, or non-positive for no limit.
      * This value is used for any username which is not specified
-     * in perUserMaxConnections.  The default is 0.
+     * in perUserMaxConnections.
      */
     public int getDefaultMaxActive() {
         return (this.defaultMaxActive);
@@ -107,9 +107,9 @@ public class PerUserPoolDataSource
 
     /**
      * The maximum number of active connections that can be allocated from
-     * this pool at the same time, or zero for no limit.
+     * this pool at the same time, or non-positive for no limit.
      * This value is used for any username which is not specified
-     * in perUserMaxConnections.  The default is 0.
+     * in perUserMaxConnections.  The default is 8.
      */
     public void setDefaultMaxActive(int maxActive) {
         assertInitializationAllowed();
@@ -118,9 +118,9 @@ public class PerUserPoolDataSource
 
     /**
      * The maximum number of active connections that can remain idle in the
-     * pool, without extra ones being released, or zero for no limit.
+     * pool, without extra ones being released, or negative for no limit.
      * This value is used for any username which is not specified
-     * in perUserMaxIdle.  The default is 0.
+     * in perUserMaxIdle.
      */
     public int getDefaultMaxIdle() {
         return (this.defaultMaxIdle);
@@ -128,9 +128,9 @@ public class PerUserPoolDataSource
 
     /**
      * The maximum number of active connections that can remain idle in the
-     * pool, without extra ones being released, or zero for no limit.
+     * pool, without extra ones being released, or negative for no limit.
      * This value is used for any username which is not specified
-     * in perUserMaxIdle.  The default is 0.
+     * in perUserMaxIdle.  The default is 8.
      */
     public void setDefaultMaxIdle(int defaultMaxIdle) {
         assertInitializationAllowed();
@@ -213,7 +213,7 @@ public class PerUserPoolDataSource
 
     /**
      * The maximum number of active connections that can be allocated from
-     * this pool at the same time, or zero for no limit.
+     * this pool at the same time, or non-positive for no limit.
      * The keys are usernames and the value is the maximum connections.  Any 
      * username specified here will override the value of defaultMaxActive.
      */
@@ -227,7 +227,7 @@ public class PerUserPoolDataSource
     
     /**
      * The maximum number of active connections that can be allocated from
-     * this pool at the same time, or zero for no limit.
+     * this pool at the same time, or non-positive for no limit.
      * The keys are usernames and the value is the maximum connections.  Any 
      * username specified here will override the value of defaultMaxActive.
      */
@@ -242,7 +242,7 @@ public class PerUserPoolDataSource
 
     /**
      * The maximum number of active connections that can remain idle in the
-     * pool, without extra ones being released, or zero for no limit.
+     * pool, without extra ones being released, or negative for no limit.
      * The keys are usernames and the value is the maximum connections.  Any 
      * username specified here will override the value of defaultMaxIdle.
      */
@@ -256,7 +256,7 @@ public class PerUserPoolDataSource
     
     /**
      * The maximum number of active connections that can remain idle in the
-     * pool, without extra ones being released, or zero for no limit.
+     * pool, without extra ones being released, or negative for no limit.
      * The keys are usernames and the value is the maximum connections.  Any 
      * username specified here will override the value of defaultMaxIdle.
      */
diff --git a/src/java/org/apache/commons/dbcp/datasources/SharedPoolDataSource.java b/src/java/org/apache/commons/dbcp/datasources/SharedPoolDataSource.java
index b5d70154..510aa05e 100644
--- a/src/java/org/apache/commons/dbcp/datasources/SharedPoolDataSource.java
+++ b/src/java/org/apache/commons/dbcp/datasources/SharedPoolDataSource.java
@@ -74,8 +74,7 @@ public class SharedPoolDataSource
 
     /**
      * The maximum number of active connections that can be allocated from
-     * this pool at the same time, or zero for no limit.
-     * The default is 0.
+     * this pool at the same time, or non-positive for no limit.
      */
     public int getMaxActive() {
         return (this.maxActive);
@@ -83,8 +82,8 @@ public class SharedPoolDataSource
 
     /**
      * The maximum number of active connections that can be allocated from
-     * this pool at the same time, or zero for no limit.
-     * The default is 0.
+     * this pool at the same time, or non-positive for no limit.
+     * The default is 8.
      */
     public void setMaxActive(int maxActive) {
         assertInitializationAllowed();
@@ -93,8 +92,7 @@ public class SharedPoolDataSource
 
     /**
      * The maximum number of active connections that can remain idle in the
-     * pool, without extra ones being released, or zero for no limit.
-     * The default is 0.
+     * pool, without extra ones being released, or negative for no limit.
      */
     public int getMaxIdle() {
         return (this.maxIdle);
@@ -102,8 +100,8 @@ public class SharedPoolDataSource
 
     /**
      * The maximum number of active connections that can remain idle in the
-     * pool, without extra ones being released, or zero for no limit.
-     * The default is 0.
+     * pool, without extra ones being released, or negative for no limit.
+     * The default is 8.
      */
     public void setMaxIdle(int maxIdle) {
         assertInitializationAllowed();
diff --git a/xdocs/changes.xml b/xdocs/changes.xml
index b1dc9e53..3d3ed0b7 100644
--- a/xdocs/changes.xml
+++ b/xdocs/changes.xml
@@ -124,6 +124,12 @@ The <action> type attribute can be add,update,fix,remove.
         Added connection info to SQLException messages when closed connections
         (resp stmts) are accessed in DelegatingConnection, DelegatingStatement.
       </action>
+      <action dev="psteitz" type="fix" issue="DBCP-41" due-to="Anton Tagunov">
+        Fixed errors in pool parameter documentation and made
+        0 value for _maxPreparedStatements in DriverAdapterCPDS behave
+        like a negative value, to be consistent with documentation
+        and pool behavior.
+      </action>
     </release>   
 
     <release version="1.2.1" date="2004-06-12" description="Maintenance Release to restore JDK 1.3 compatibility">
diff --git a/xdocs/configuration.xml b/xdocs/configuration.xml
index be95c62a..1278849b 100644
--- a/xdocs/configuration.xml
+++ b/xdocs/configuration.xml
@@ -130,7 +130,7 @@ testWhileIdle
    <td>8</td>
    <td>
       The maximum number of active connections that can be allocated from
-      this pool at the same time, or negative for no limit.
+      this pool at the same time, or non-positive for no limit.
    </td>
 </tr>
 <tr>
@@ -138,7 +138,7 @@ testWhileIdle
    <td>8</td>
    <td>
       The maximum number of active connections that can remain idle in the
-      pool, without extra ones being released, or zero for no limit.
+      pool, without extra ones being released, or negative for no limit.
    </td>
 </tr>
 <tr>
