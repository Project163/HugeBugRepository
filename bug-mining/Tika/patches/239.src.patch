diff --git a/tika-core/src/main/java/org/apache/tika/io/TaggedInputStream.java b/tika-core/src/main/java/org/apache/tika/io/TaggedInputStream.java
index e78cd0009..f63e6118e 100644
--- a/tika-core/src/main/java/org/apache/tika/io/TaggedInputStream.java
+++ b/tika-core/src/main/java/org/apache/tika/io/TaggedInputStream.java
@@ -63,7 +63,7 @@ public class TaggedInputStream extends ProxyInputStream {
      *
      * @param proxy input stream to be decorated
      */
-    private TaggedInputStream(InputStream proxy) {
+    public TaggedInputStream(InputStream proxy) {
         super(proxy);
     }
     
diff --git a/tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java b/tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java
index d5458f25f..810381158 100644
--- a/tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java
+++ b/tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java
@@ -57,7 +57,7 @@ import org.apache.tika.metadata.Metadata;
  *
  * @since Apache Tika 0.8
  */
-public class TikaInputStream extends ProxyInputStream {
+public class TikaInputStream extends TaggedInputStream {
 
     /**
      * Checks whether the given stream is a TikaInputStream instance.
diff --git a/tika-core/src/main/java/org/apache/tika/parser/CompositeParser.java b/tika-core/src/main/java/org/apache/tika/parser/CompositeParser.java
index 1a74fdf34..fd8db2373 100644
--- a/tika-core/src/main/java/org/apache/tika/parser/CompositeParser.java
+++ b/tika-core/src/main/java/org/apache/tika/parser/CompositeParser.java
@@ -29,7 +29,8 @@ import java.util.logging.Level;
 import java.util.logging.Logger;
 
 import org.apache.tika.exception.TikaException;
-import org.apache.tika.io.TaggedInputStream;
+import org.apache.tika.io.TemporaryFiles;
+import org.apache.tika.io.TikaInputStream;
 import org.apache.tika.metadata.Metadata;
 import org.apache.tika.mime.MediaType;
 import org.apache.tika.mime.MediaTypeRegistry;
@@ -210,21 +211,26 @@ public class CompositeParser extends AbstractParser {
             Metadata metadata, ParseContext context)
             throws IOException, SAXException, TikaException {
         Parser parser = getParser(metadata);
-        TaggedInputStream taggedStream = TaggedInputStream.get(stream);
-        TaggedContentHandler taggedHandler = new TaggedContentHandler(handler);
+        TemporaryFiles tmp = new TemporaryFiles();
         try {
-            parser.parse(taggedStream, taggedHandler, metadata, context);
-        } catch (RuntimeException e) {
-            throw new TikaException(
-                    "Unexpected RuntimeException from " + parser, e);
-        } catch (IOException e) {
-            taggedStream.throwIfCauseOf(e);
-            throw new TikaException(
-                    "TIKA-198: Illegal IOException from " + parser, e);
-        } catch (SAXException e) {
-            taggedHandler.throwIfCauseOf(e);
-            throw new TikaException(
-                    "TIKA-237: Illegal SAXException from " + parser, e);
+            TikaInputStream taggedStream = TikaInputStream.get(stream, tmp);
+            TaggedContentHandler taggedHandler = new TaggedContentHandler(handler);
+            try {
+                parser.parse(taggedStream, taggedHandler, metadata, context);
+            } catch (RuntimeException e) {
+                throw new TikaException(
+                        "Unexpected RuntimeException from " + parser, e);
+            } catch (IOException e) {
+                taggedStream.throwIfCauseOf(e);
+                throw new TikaException(
+                        "TIKA-198: Illegal IOException from " + parser, e);
+            } catch (SAXException e) {
+                taggedHandler.throwIfCauseOf(e);
+                throw new TikaException(
+                        "TIKA-237: Illegal SAXException from " + parser, e);
+            }
+        } finally {
+            tmp.dispose();
         }
     }
 
diff --git a/tika-core/src/main/java/org/apache/tika/parser/NetworkParser.java b/tika-core/src/main/java/org/apache/tika/parser/NetworkParser.java
index de0b09562..b83d9d47b 100644
--- a/tika-core/src/main/java/org/apache/tika/parser/NetworkParser.java
+++ b/tika-core/src/main/java/org/apache/tika/parser/NetworkParser.java
@@ -30,7 +30,8 @@ import java.util.Set;
 import org.apache.tika.exception.TikaException;
 import org.apache.tika.io.CloseShieldInputStream;
 import org.apache.tika.io.IOUtils;
-import org.apache.tika.io.TaggedInputStream;
+import org.apache.tika.io.TemporaryFiles;
+import org.apache.tika.io.TikaInputStream;
 import org.apache.tika.metadata.Metadata;
 import org.apache.tika.mime.MediaType;
 import org.apache.tika.sax.TaggedContentHandler;
@@ -63,6 +64,19 @@ public class NetworkParser extends AbstractParser {
             InputStream stream, ContentHandler handler,
             Metadata metadata, ParseContext context)
             throws IOException, SAXException, TikaException {
+        TemporaryFiles tmp = new TemporaryFiles();
+        try {
+            TikaInputStream tis = TikaInputStream.get(stream, tmp);
+            parse(tis, handler, metadata, context);
+        } finally {
+            tmp.dispose();
+        }
+    }
+
+    private void parse(
+            TikaInputStream stream, ContentHandler handler,
+            Metadata metadata, ParseContext context)
+            throws IOException, SAXException, TikaException {
         if ("telnet".equals(uri.getScheme())) {
             final Socket socket = new Socket(uri.getHost(), uri.getPort());
             try {
@@ -95,14 +109,14 @@ public class NetworkParser extends AbstractParser {
 
     private static class ParsingTask implements Runnable {
 
-        private final TaggedInputStream input;
+        private final TikaInputStream input;
 
         private final OutputStream output;
 
         private volatile Exception exception = null;
 
-        public ParsingTask(InputStream input, OutputStream output) {
-            this.input = TaggedInputStream.get(input);
+        public ParsingTask(TikaInputStream input, OutputStream output) {
+            this.input = input;
             this.output = output;
         }
 
