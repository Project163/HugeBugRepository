diff --git a/apache-rat-core/src/main/java/org/apache/rat/api/Document.java b/apache-rat-core/src/main/java/org/apache/rat/api/Document.java
index dc73fb12..24a29b34 100644
--- a/apache-rat-core/src/main/java/org/apache/rat/api/Document.java
+++ b/apache-rat-core/src/main/java/org/apache/rat/api/Document.java
@@ -35,7 +35,7 @@ public interface Document {
      * @throws CompositeDocumentException if this document can only be read as
      * a composite archive
      */
-	public Reader reader() throws IOException;
+    public Reader reader() throws IOException;
     
     /**
      * Streams the document's contents.
diff --git a/apache-rat-core/src/test/java/org/apache/rat/document/impl/guesser/BinaryGuesserTest.java b/apache-rat-core/src/test/java/org/apache/rat/document/impl/guesser/BinaryGuesserTest.java
index 9966f761..540fb938 100644
--- a/apache-rat-core/src/test/java/org/apache/rat/document/impl/guesser/BinaryGuesserTest.java
+++ b/apache-rat-core/src/test/java/org/apache/rat/document/impl/guesser/BinaryGuesserTest.java
@@ -18,6 +18,10 @@
  */ 
 package org.apache.rat.document.impl.guesser;
 
+import java.io.File;
+import java.io.IOException;
+import java.io.Reader;
+import org.apache.rat.document.impl.FileDocument;
 import org.apache.rat.document.MockDocument;
 import junit.framework.TestCase;
 
@@ -63,4 +67,37 @@ public class BinaryGuesserTest extends TestCase {
         assertTrue(BinaryGuesser.isBinary("data.dat"));
         assertTrue(BinaryGuesser.isBinary("libicudata.so.34."));
     }
+
+    /**
+     * Used to swallow a MalformedInputException and return false
+     * because the encoding of the stream was different from the
+     * platform's default encoding.
+     *
+     * @see RAT-81
+     */
+    public void testBinaryWithMalformedInput() throws Throwable {
+        FileDocument doc = new FileDocument(new File("src/test/resources/binaries/UTF16_with_signature.xml"));
+        Reader r = null;
+        try {
+            char[] dummy = new char[100];
+            r = doc.reader();
+            r.read(dummy);
+            // if we get here, the UTF-16 encoded file didn't throw
+            // any exception, try the UTF-8 encoded one
+            r.close();
+            doc = new FileDocument(new File("src/test/resources/binaries/UTF8_with_signature.xml"));
+            r = doc.reader();
+            r.read(dummy);
+            // still here?  can't test on this platform
+            System.err.println("Skipping testBinaryWithMalformedInput");
+        } catch (IOException e) {
+            r.close();
+            r = null;
+            assertTrue(guesser.isBinary(doc));
+        } finally {
+            if (r != null) {
+                r.close();
+            }
+        }
+    }
 }
diff --git a/apache-rat-core/src/test/resources/binaries/UTF16_with_signature.xml b/apache-rat-core/src/test/resources/binaries/UTF16_with_signature.xml
new file mode 100644
index 00000000..452a9704
Binary files /dev/null and b/apache-rat-core/src/test/resources/binaries/UTF16_with_signature.xml differ
diff --git a/apache-rat-core/src/test/resources/binaries/UTF8_with_signature.xml b/apache-rat-core/src/test/resources/binaries/UTF8_with_signature.xml
new file mode 100644
index 00000000..ea2bf48d
--- /dev/null
+++ b/apache-rat-core/src/test/resources/binaries/UTF8_with_signature.xml
@@ -0,0 +1,29 @@
+﻿<?xml version="1.0" encoding="UTF-8"?>
+	
+        <!--
+	 ***************************************************************
+	 * Licensed to the Apache Software Foundation (ASF) under one
+	 * or more contributor license agreements.  See the NOTICE file
+	 * distributed with this work for additional information
+	 * regarding copyright ownership.  The ASF licenses this file
+	 * to you under the Apache License, Version 2.0 (the
+	 * "License"); you may not use this file except in compliance
+	 * with the License.  You may obtain a copy of the License at
+         *
+	 *   http://www.apache.org/licenses/LICENSE-2.0
+	 * 
+	 * Unless required by applicable law or agreed to in writing,
+	 * software distributed under the License is distributed on an
+	 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+	 * KIND, either express or implied.  See the License for the
+	 * specific language governing permissions and limitations
+	 * under the License.
+	 ***************************************************************
+   -->
+
+
+<xmlRoot>
+<descrition>
+The file encoding is UTF-8 with signature. (Special chars: äöü)
+</descrition>
+</xmlRoot>
