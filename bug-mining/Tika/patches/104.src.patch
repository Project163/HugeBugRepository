diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlParser.java
index efb94e722..e0d7ac2c9 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlParser.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlParser.java
@@ -106,13 +106,18 @@ public class HtmlParser implements Parser {
             if (Charset.isSupported(match.getName())) {
                 metadata.set(Metadata.CONTENT_ENCODING, match.getName());
 
-                // Is the encoding language-specific (KOI8-R, SJIS, etc.)?
+                // TIKA-339: Don't set language, as it's typically not a very good
+                // guess, and it can create ambiguity if another (better) language
+                // value is specified by a meta tag in the HTML (or via HTTP response
+                // header).
+                /*
                 String language = match.getLanguage();
                 if (language != null) {
                     metadata.set(Metadata.CONTENT_LANGUAGE, match.getLanguage());
                     metadata.set(Metadata.LANGUAGE, match.getLanguage());
                 }
-
+                */
+                
                 break;
             }
         }
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/txt/TXTParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/txt/TXTParser.java
index 772e047b8..6194fde06 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/txt/TXTParser.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/txt/TXTParser.java
@@ -100,8 +100,8 @@ public class TXTParser implements Parser {
                 // Is the encoding language-specific (KOI8-R, SJIS, etc.)?
                 String language = match.getLanguage();
                 if (language != null) {
-                    metadata.set(Metadata.CONTENT_LANGUAGE, match.getLanguage());
-                    metadata.set(Metadata.LANGUAGE, match.getLanguage());
+                    metadata.add(Metadata.CONTENT_LANGUAGE, language);
+                    metadata.add(Metadata.LANGUAGE, language);
                 }
 
                 break;
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/html/HtmlParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/html/HtmlParserTest.java
index 5ae842010..c8cfa8a17 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/html/HtmlParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/html/HtmlParserTest.java
@@ -292,4 +292,19 @@ public class HtmlParserTest extends TestCase {
         assertEquals("baz", parts[2]);
     }
 
+    /**
+     * Test case for TIKA-339: Don't use language returned by CharsetDetector
+     * @see <a href="https://issues.apache.org/jira/browse/TIKA-339">TIKA-339</a>
+     */
+    public void testIgnoreCharsetDetectorLanguage() throws Exception {
+        String test = "<html><title>Simple Content</title><body></body></html>";
+        Metadata metadata = new Metadata();
+        metadata.add(Metadata.CONTENT_LANGUAGE, "en");
+        new HtmlParser().parse (
+                new ByteArrayInputStream(test.getBytes("UTF-8")),
+                new BodyContentHandler(),  metadata, new ParseContext());
+
+        assertEquals("en", metadata.get(Metadata.CONTENT_LANGUAGE));
+    }
+
 }
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/txt/TXTParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/txt/TXTParserTest.java
index 6a77064ca..aca870315 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/txt/TXTParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/txt/TXTParserTest.java
@@ -161,4 +161,22 @@ public class TXTParserTest extends TestCase {
         assertEquals(msg, expected, handler.toString());
     }
 
+    /**
+     * Test case for TIKA-339: don't override incoming language
+     *
+     * @see <a href="https://issues.apache.org/jira/browse/TIKA-335">TIKA-335</a> 
+     */
+    public void testRetainIncomingLanguage() throws Exception {
+        final String test = "Simple Content";
+
+        Metadata metadata = new Metadata();
+        metadata.set(Metadata.LANGUAGE, "en");
+
+        parser.parse(
+                new ByteArrayInputStream(test.getBytes("UTF-8")),
+                new BodyContentHandler(),  metadata, new ParseContext());
+
+        assertEquals("en", metadata.get(Metadata.LANGUAGE));
+    }
+
 }
