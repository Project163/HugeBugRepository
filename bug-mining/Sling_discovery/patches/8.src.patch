diff --git a/src/main/java/org/apache/sling/discovery/commons/providers/spi/base/IdMapService.java b/src/main/java/org/apache/sling/discovery/commons/providers/spi/base/IdMapService.java
index 947e587..7828103 100644
--- a/src/main/java/org/apache/sling/discovery/commons/providers/spi/base/IdMapService.java
+++ b/src/main/java/org/apache/sling/discovery/commons/providers/spi/base/IdMapService.java
@@ -120,6 +120,8 @@ public class IdMapService extends AbstractServiceWithBackgroundCheck implements
             eventHandlerRegistration.unregister();
             eventHandlerRegistration = null;
         }
+        // SLING-5592: cancel the potentially running background thread
+        cancelPreviousBackgroundCheck();
     }
     
     private void registerEventHandler() {
diff --git a/src/test/java/org/apache/sling/discovery/commons/providers/spi/base/TestOakSyncTokenService.java b/src/test/java/org/apache/sling/discovery/commons/providers/spi/base/TestOakSyncTokenService.java
index e767571..c692b50 100644
--- a/src/test/java/org/apache/sling/discovery/commons/providers/spi/base/TestOakSyncTokenService.java
+++ b/src/test/java/org/apache/sling/discovery/commons/providers/spi/base/TestOakSyncTokenService.java
@@ -23,6 +23,7 @@ import static org.junit.Assert.assertFalse;
 import static org.junit.Assert.assertNotNull;
 import static org.junit.Assert.assertTrue;
 
+import java.lang.reflect.Field;
 import java.util.UUID;
 import java.util.concurrent.locks.Lock;
 import java.util.concurrent.locks.ReentrantLock;
@@ -38,6 +39,7 @@ import org.apache.sling.discovery.commons.providers.spi.base.AbstractServiceWith
 import org.apache.sling.jcr.api.SlingRepository;
 import org.junit.After;
 import org.junit.Before;
+import org.junit.Ignore;
 import org.junit.Test;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -242,4 +244,22 @@ public class TestOakSyncTokenService {
         assertEquals(3, l.countEvents());
     }
     
+    @Test
+    public void testRapidIdMapServiceActivateDeactivate() throws Exception {
+        BackgroundCheckRunnable bgCheckRunnable = getBackgroundCheckRunnable(idMapService1);
+        assertNotNull(bgCheckRunnable);
+        assertFalse(bgCheckRunnable.isDone());
+        idMapService1.deactivate();
+        assertFalse(idMapService1.waitForInit(2500));
+        bgCheckRunnable = getBackgroundCheckRunnable(idMapService1);
+        assertNotNull(bgCheckRunnable);
+        assertTrue(bgCheckRunnable.isDone());
+    }
+    
+    private BackgroundCheckRunnable getBackgroundCheckRunnable(IdMapService idMapService) throws NoSuchFieldException, IllegalAccessException {
+        Field field = idMapService.getClass().getSuperclass().getDeclaredField("backgroundCheckRunnable");
+        field.setAccessible(true);
+        Object backgroundCheckRunnable = field.get(idMapService);
+        return (BackgroundCheckRunnable) backgroundCheckRunnable;
+    }
 }
