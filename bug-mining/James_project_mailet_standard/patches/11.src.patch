diff --git a/mailet/standard/src/main/java/org/apache/james/transport/mailets/AddDeliveredToHeader.java b/mailet/standard/src/main/java/org/apache/james/transport/mailets/AddDeliveredToHeader.java
index ac339b1404..d4a40820e4 100644
--- a/mailet/standard/src/main/java/org/apache/james/transport/mailets/AddDeliveredToHeader.java
+++ b/mailet/standard/src/main/java/org/apache/james/transport/mailets/AddDeliveredToHeader.java
@@ -26,6 +26,15 @@ import org.apache.mailet.MailAddress;
 import org.apache.mailet.PerRecipientHeaders;
 import org.apache.mailet.base.GenericMailet;
 
+/**
+ * This mailet adds the de-facto standard QMail Delivered-To header.
+ *
+ * Upon processing by LocalDelivery, a Delivered-To header matching the recipient mail address will be added before storage.
+ *
+ * <pre><code>
+ * &lt;mailet match=&quot;All&quot; class=&quot;&lt;AddDeliveredToHeader&gt;&quot;/&gt;
+ * </code></pre>
+ */
 public class AddDeliveredToHeader extends GenericMailet {
 
     public static final String DELIVERED_TO = "Delivered-To";
diff --git a/mailet/standard/src/main/java/org/apache/james/transport/mailets/AddFooter.java b/mailet/standard/src/main/java/org/apache/james/transport/mailets/AddFooter.java
index 9cf44f9c00..7e1b38c7a2 100644
--- a/mailet/standard/src/main/java/org/apache/james/transport/mailets/AddFooter.java
+++ b/mailet/standard/src/main/java/org/apache/james/transport/mailets/AddFooter.java
@@ -38,7 +38,7 @@ import org.apache.mailet.base.RFC2822Headers;
 
 import com.google.common.base.Optional;
 
-/*
+/**
  * Takes the message and attaches a footer message to it.  Right now, it only
  * supports simple messages.  Needs to have additions to make it support
  * messages with alternate content types or with attachments.
diff --git a/mailet/standard/src/main/java/org/apache/james/transport/matchers/RecipientIs.java b/mailet/standard/src/main/java/org/apache/james/transport/matchers/RecipientIs.java
index 3dce3117b2..6030e915b5 100644
--- a/mailet/standard/src/main/java/org/apache/james/transport/matchers/RecipientIs.java
+++ b/mailet/standard/src/main/java/org/apache/james/transport/matchers/RecipientIs.java
@@ -29,6 +29,18 @@ import org.apache.mailet.base.GenericRecipientMatcher;
 
 import com.google.common.base.Strings;
 
+
+/**
+ * This matcher matches a specific recipient (in the envelope of the mail), passed as a condition to this matcher.
+ *
+ *
+ * <p>The example below will match only the recipient user@domain</p>
+ *
+ * <pre><code>
+ * &lt;mailet match=&quot;RecipientIs=user@domain&quot; class=&quot;&lt;any-class&gt;&quot;&gt;
+ * &lt;/mailet&gt;
+ * </code></pre>
+ */
 public class RecipientIs extends GenericRecipientMatcher {
 
     private Collection<MailAddress> recipients;
diff --git a/mailet/standard/src/main/java/org/apache/james/transport/matchers/SenderIs.java b/mailet/standard/src/main/java/org/apache/james/transport/matchers/SenderIs.java
index 0774a2c242..b0d72394db 100644
--- a/mailet/standard/src/main/java/org/apache/james/transport/matchers/SenderIs.java
+++ b/mailet/standard/src/main/java/org/apache/james/transport/matchers/SenderIs.java
@@ -32,6 +32,18 @@ import org.apache.mailet.base.GenericMatcher;
 import com.google.common.annotations.VisibleForTesting;
 import com.google.common.base.Strings;
 
+
+/**
+ * This matcher matches a specific sender, passed as a condition to this matcher.
+ *
+ *
+ * <p>The example below will match mail with a sender being user@domain</p>
+ *
+ * <pre><code>
+ * &lt;mailet match=&quot;SenderIs=user@domain&quot; class=&quot;&lt;any-class&gt;&quot;&gt;
+ * &lt;/mailet&gt;
+ * </code></pre>
+ */
 public class SenderIs extends GenericMatcher {
 
     private Set<MailAddress> senders;
diff --git a/mailet/standard/src/main/java/org/apache/james/transport/matchers/SentByMailet.java b/mailet/standard/src/main/java/org/apache/james/transport/matchers/SentByMailet.java
index 0df6e96eb4..df173cf070 100644
--- a/mailet/standard/src/main/java/org/apache/james/transport/matchers/SentByMailet.java
+++ b/mailet/standard/src/main/java/org/apache/james/transport/matchers/SentByMailet.java
@@ -17,8 +17,6 @@
  * under the License.                                           *
  ****************************************************************/
 
-
-
 package org.apache.james.transport.matchers;
 
 import java.util.Collection;
@@ -28,6 +26,15 @@ import org.apache.mailet.Mail;
 import org.apache.mailet.MailAddress;
 import org.apache.mailet.base.GenericMatcher;
 
+/**
+ * This matcher matches email sent automatically by mailets.
+ *
+ * <pre><code>
+ * &lt;mailet match=&quot;SentByMailetAny&quot; class=&quot;&lt;any-class&gt;&quot;/&gt;
+ * </code></pre>
+ *
+ * This matcher allows you, for instance, to enable/disable routing automatically generated emails out of your server.
+ */
 public class SentByMailet extends GenericMatcher {
 
     public Collection<MailAddress> match(Mail mail) {
diff --git a/mailet/standard/src/main/java/org/apache/james/transport/matchers/TooManyLines.java b/mailet/standard/src/main/java/org/apache/james/transport/matchers/TooManyLines.java
index aa37378b4c..958990f622 100644
--- a/mailet/standard/src/main/java/org/apache/james/transport/matchers/TooManyLines.java
+++ b/mailet/standard/src/main/java/org/apache/james/transport/matchers/TooManyLines.java
@@ -30,6 +30,16 @@ import org.apache.mailet.base.MailetUtil;
 
 import com.google.common.collect.ImmutableList;
 
+/**
+ * This matcher matches emails that have too many lines. This allows better rejection of emails when, for instance, MIME4J
+ * is configured with a limited number of lines.
+ *
+ * <p>The example below will match mail with more than 10000 lines</p>
+ *
+ * <pre><code>
+ * &lt;mailet match=&quot;TooManyLines=10000&quot; class=&quot;&lt;any-class&gt;&quot;/&gt;
+ * </code></pre>
+ */
 public class TooManyLines extends GenericMatcher {
 
     private int maximumLineCount;
diff --git a/mailet/standard/src/main/java/org/apache/james/transport/matchers/TooManyRecipients.java b/mailet/standard/src/main/java/org/apache/james/transport/matchers/TooManyRecipients.java
index abaeb96f50..f7d3e92ba6 100644
--- a/mailet/standard/src/main/java/org/apache/james/transport/matchers/TooManyRecipients.java
+++ b/mailet/standard/src/main/java/org/apache/james/transport/matchers/TooManyRecipients.java
@@ -30,6 +30,15 @@ import org.apache.mailet.base.MailetUtil;
 
 import com.google.common.collect.ImmutableList;
 
+/**
+ * This matcher matches emails that have too many recipients.
+ *
+ * <p>The example below will reject any email with more than 5 recipients</p>
+ *
+ * <pre><code>
+ * &lt;mailet match=&quot;TooManyRecipients=5&quot; class=&quot;&lt;any-class&gt;&quot;/&gt;
+ * </code></pre>
+ */
 public class TooManyRecipients extends GenericMatcher {
 
     private int maximumRecipientCount;
