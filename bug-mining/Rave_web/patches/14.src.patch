diff --git a/rave-components/rave-web/src/main/java/org/apache/rave/portal/web/controller/ProfileController.java b/rave-components/rave-web/src/main/java/org/apache/rave/portal/web/controller/ProfileController.java
index 5fd23d3e..38e125d0 100644
--- a/rave-components/rave-web/src/main/java/org/apache/rave/portal/web/controller/ProfileController.java
+++ b/rave-components/rave-web/src/main/java/org/apache/rave/portal/web/controller/ProfileController.java
@@ -62,24 +62,25 @@ public class ProfileController {
     /**
 	 * Views the main page of another user's profile
 	 *
-     * @param username			    username (allows for a period in the username)
+     * @param userid			    userid 
      * @param model                 {@link Model} map
      * @param referringPageId		page reference id (optional)
 	 * @return the view name of the user profile page
 	 */
-	@RequestMapping(value = {"/{username:.*}"}, method = RequestMethod.GET)
-	public String viewProfile(@PathVariable String username, ModelMap model, @RequestParam(required = false) Long referringPageId) {
-		logger.debug("Viewing person profile for: " + username);
-		User user = userService.getUserByUsername(username);
-        Page personProfilePage = pageService.getPersonProfilePage(user.getId());
+	
+	@RequestMapping(value = {"/{userid:.*}"}, method = RequestMethod.GET)
+	public String viewProfile(@PathVariable Long userid, ModelMap model, @RequestParam(required = false) Long referringPageId) {
+		User user = userService.getUserById(userid);
+		logger.debug("Viewing person profile for: " + user.getUsername());
+		
+		Page personProfilePage = pageService.getPersonProfilePage(user.getId());
         addAttributesToModel(model, user, referringPageId);
         model.addAttribute(ModelKeys.PAGE, personProfilePage);
 		String view =  ViewNames.getPersonPageView(personProfilePage.getPageLayout().getCode());
-        List<Person> friendRequests = userService.getFriendRequestsReceived(username);
+        List<Person> friendRequests = userService.getFriendRequestsReceived(user.getUsername());
         addNavItemsToModel(view, model, referringPageId, user, friendRequests);
         return view;
 	}
-
 	/**
 	 * Updates the user's personal information
 	 *
diff --git a/rave-components/rave-web/src/main/java/org/apache/rave/portal/web/controller/util/ControllerUtils.java b/rave-components/rave-web/src/main/java/org/apache/rave/portal/web/controller/util/ControllerUtils.java
index d4c1d0bd..d0f3ac56 100644
--- a/rave-components/rave-web/src/main/java/org/apache/rave/portal/web/controller/util/ControllerUtils.java
+++ b/rave-components/rave-web/src/main/java/org/apache/rave/portal/web/controller/util/ControllerUtils.java
@@ -72,14 +72,13 @@ public class ControllerUtils {
     public static NavigationMenu getTopMenu(String view, long referringPageId, User user, boolean addStoreLink) {
         NavigationMenu menu = new NavigationMenu("topnav");
         if(view.startsWith(ViewNames.PAGE) || view.startsWith(ViewNames.MOBILE_HOME)) {
-            NavigationItem profile = new NavigationItem("page.profile.title", getDisplayName(user), "/app/person/" + user.getUsername() + "?referringPageId=" + referringPageId);
+            NavigationItem profile = new NavigationItem("page.profile.title", getDisplayName(user), "/app/person/" + user.getId() + "?referringPageId=" + referringPageId);
             menu.addNavigationItem(profile);
 
             if(addStoreLink){
                 NavigationItem store = new NavigationItem("page.store.title", null, "/app/store?referringPageId=" + referringPageId);
                 menu.addNavigationItem(store);
             }
-
             NavigationItem admin = getAdminItem();
             menu.addNavigationItem(admin);
 
diff --git a/rave-components/rave-web/src/test/java/org/apache/rave/portal/web/controller/ProfileControllerTest.java b/rave-components/rave-web/src/test/java/org/apache/rave/portal/web/controller/ProfileControllerTest.java
index 60f91d2f..8d56c515 100644
--- a/rave-components/rave-web/src/test/java/org/apache/rave/portal/web/controller/ProfileControllerTest.java
+++ b/rave-components/rave-web/src/test/java/org/apache/rave/portal/web/controller/ProfileControllerTest.java
@@ -106,13 +106,13 @@ public class ProfileControllerTest {
         personProfile.setPageLayout(pageLayout);
         List<Person> personObjects = new ArrayList<Person>();
 
-		expect(userService.getUserByUsername(username)).andReturn(user).once();
+		expect(userService.getUserById(USER_ID)).andReturn(user).once();
         expect(pageService.getPersonProfilePage(user.getId())).andReturn(personProfile);
 		expect(userService.getFriendRequestsReceived(username)).andReturn(personObjects);
 
 		replay(userService, pageService);
 
-		String view = profileController.viewProfile(username, model, null);
+		String view = profileController.viewProfile(USER_ID, model, null);
 
 		//assert that the model is not null
 		assertThat(model, CoreMatchers.notNullValue());
@@ -137,17 +137,17 @@ public class ProfileControllerTest {
         final User user = null;
         final ModelMap model = new ModelMap();
         final int modelSize = 4;
-        final String username="Canonical";
+        final String username="canonical";
         Page personProfile = new PageImpl();
         PageLayout pageLayout = new PageLayoutImpl();
         pageLayout.setCode("person_profile");
         personProfile.setPageLayout(pageLayout);
 
-        expect(userService.getUserByUsername(username)).andThrow(new UsernameNotFoundException("Username does not exist"));
+        expect(userService.getUserById(USER_ID)).andThrow(new UsernameNotFoundException("Username does not exist"));
 
         replay(userService, pageService);
 
-        profileController.viewProfile(username, model, null);
+        profileController.viewProfile(USER_ID, model, null);
 
         verify(userService, pageService);
     }
