diff --git a/src/test/org/apache/commons/jelly/core/TestFileTag.java b/src/test/org/apache/commons/jelly/core/TestFileTag.java
new file mode 100644
index 00000000..de2cc1c1
--- /dev/null
+++ b/src/test/org/apache/commons/jelly/core/TestFileTag.java
@@ -0,0 +1,129 @@
+/*
+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jelly/src/test/org/apache/commons/jelly/core/TestFileTag.java,v 1.1 2004/08/12 07:02:14 dion Exp $
+ * $Revision: 1.1 $
+ * $Date: 2004/08/12 07:02:14 $
+ *
+ * ====================================================================
+ *
+ * The Apache Software License, Version 1.1
+ *
+ * Copyright (c) 2002 The Apache Software Foundation.  All rights
+ * reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ *
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ *
+ * 3. The end-user documentation included with the redistribution, if
+ *    any, must include the following acknowlegement:
+ *       "This product includes software developed by the
+ *        Apache Software Foundation (http://www.apache.org/)."
+ *    Alternately, this acknowlegement may appear in the software itself,
+ *    if and wherever such third-party acknowlegements normally appear.
+ *
+ * 4. The names "The Jakarta Project", "Commons", and "Apache Software
+ *    Foundation" must not be used to endorse or promote products derived
+ *    from this software without prior written permission. For written
+ *    permission, please contact apache@apache.org.
+ *
+ * 5. Products derived from this software may not be called "Apache"
+ *    nor may "Apache" appear in their names without prior written
+ *    permission of the Apache Group.
+ *
+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+ * SUCH DAMAGE.
+ * ====================================================================
+ *
+ * This software consists of voluntary contributions made by many
+ * individuals on behalf of the Apache Software Foundation.  For more
+ * information on the Apache Software Foundation, please see
+ * <http://www.apache.org/>.
+ *
+ * $Id: TestFileTag.java,v 1.1 2004/08/12 07:02:14 dion Exp $
+ */
+package org.apache.commons.jelly.core;
+
+import java.io.FileInputStream;
+import java.io.IOException;
+import java.io.InputStream;
+
+import junit.framework.TestSuite;
+
+import org.apache.commons.jelly.Script;
+
+/**
+ * @author <a href="mailto:robert@bull-enterprises.com">Robert McIntosh</a>
+ * @version $Revision: 1.1 $
+ */
+public class TestFileTag extends BaseJellyTest
+{
+
+    public TestFileTag(String name)
+    {
+        super(name);
+    }
+
+    public static TestSuite suite() throws Exception
+    {
+        return new TestSuite(TestFileTag.class);
+    }
+
+    public void testSimpleFileTag() throws Exception
+    {
+        setUpScript("testFileTag.jelly");
+        Script script = getJelly().compileScript();
+
+        script.run(getJellyContext(), getXMLOutput());
+
+        FileInputStream fis = new FileInputStream("target/testFileTag.tmp");
+        String data = readInputStreamIntoString(fis);
+        fis.close();
+
+
+        //FIXME This doesn't take into account attribute ordering
+        //assertEquals("target/testFileTag.tmp", "<html xmlns=\"http://www.w3.org/1999/xhtml\"  xml:lang=\"en\"  lang=\"en\"></html>", data);
+
+        //assertTrue( System.getProperty( "java.runtime.version" ).equals( getJellyContext().getVariable("propertyName" ) ) );
+    }
+
+    /**
+     * Transfers an input stream to a string
+     * @param is the stream to read the data from
+     * @return A string containing the data from the input stream
+     **/
+    protected static final int BUFFER_SIZE = 16384;
+
+    public static String readInputStreamIntoString(InputStream is) throws IOException {
+        StringBuffer buffer = new StringBuffer();
+
+        final byte b[] = new byte[BUFFER_SIZE];
+        while (true) {
+            int read = is.read(b);
+            if (read == -1)
+                break;
+
+            String s = new String(b, 0, read);
+            buffer.append(s);
+        }
+        return buffer.toString();
+    }
+
+}
diff --git a/src/test/org/apache/commons/jelly/core/testFileTag.jelly b/src/test/org/apache/commons/jelly/core/testFileTag.jelly
new file mode 100644
index 00000000..243cb899
--- /dev/null
+++ b/src/test/org/apache/commons/jelly/core/testFileTag.jelly
@@ -0,0 +1,6 @@
+<j:jelly xmlns:j="jelly:core">
+	<j:file name="target/testFileTag.tmp" outputMode="html">
+      <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
+      </html>
+    </j:file>
+</j:jelly>
\ No newline at end of file
