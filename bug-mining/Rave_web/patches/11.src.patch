diff --git a/rave-components/rave-web/src/main/java/org/apache/rave/portal/web/tag/RegionWidgetTag.java b/rave-components/rave-web/src/main/java/org/apache/rave/portal/web/tag/RegionWidgetTag.java
index 4a05fc15..f56c6cf7 100644
--- a/rave-components/rave-web/src/main/java/org/apache/rave/portal/web/tag/RegionWidgetTag.java
+++ b/rave-components/rave-web/src/main/java/org/apache/rave/portal/web/tag/RegionWidgetTag.java
@@ -34,6 +34,8 @@ import javax.servlet.jsp.JspException;
 public class RegionWidgetTag extends AbstractContextAwareSingletonBeanDependentTag<RenderService> {
 
     private RegionWidget regionWidget;
+    
+    private static final String REGISTER_DISABLED_WIDGET_KEY = "disabledRegisterWidget";
 
     // Script block for disabled gadget
     private static final String DISABLED_SCRIPT_BLOCK =
@@ -72,7 +74,8 @@ public class RegionWidgetTag extends AbstractContextAwareSingletonBeanDependentT
                         StringEscapeUtils.escapeJavaScript(regionWidget.getWidget().getDisableRenderingMessage()),
                         regionWidget.isCollapsed(),
                         regionWidget.getWidget().getId());
-                scriptManager.registerScriptBlock(widgetScript, ScriptLocation.AFTER_RAVE, RenderScope.CURRENT_REQUEST, getContext());
+                String key = REGISTER_DISABLED_WIDGET_KEY + "-" + regionWidget.getWidget().getId();
+                scriptManager.registerScriptBlock(key, widgetScript, ScriptLocation.AFTER_RAVE, RenderScope.CURRENT_REQUEST, getContext());
             } else {
                 writeString(getBean().render(regionWidget, getContext()));
             }
diff --git a/rave-components/rave-web/src/main/java/org/apache/rave/portal/web/util/PortalPreferenceKeys.java b/rave-components/rave-web/src/main/java/org/apache/rave/portal/web/util/PortalPreferenceKeys.java
deleted file mode 100644
index 217d5615..00000000
--- a/rave-components/rave-web/src/main/java/org/apache/rave/portal/web/util/PortalPreferenceKeys.java
+++ /dev/null
@@ -1,31 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *   http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied.  See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-
-package org.apache.rave.portal.web.util;
-
-/**
- * Utility class for {@link org.apache.rave.portal.model.PortalPreference} keys
- */
-public final class PortalPreferenceKeys {
-    private PortalPreferenceKeys() { }
-
-    public static final String TITLE_SUFFIX = "titleSuffix";
-    public static final String PAGE_SIZE = "pageSize";
-    public static final String JAVASCRIPT_DEBUG_MODE = "javaScriptDebugMode";
-}
diff --git a/rave-components/rave-web/src/test/java/org/apache/rave/portal/web/tag/RegionWidgetTagTest.java b/rave-components/rave-web/src/test/java/org/apache/rave/portal/web/tag/RegionWidgetTagTest.java
index 1790e7cb..4c7c3140 100644
--- a/rave-components/rave-web/src/test/java/org/apache/rave/portal/web/tag/RegionWidgetTagTest.java
+++ b/rave-components/rave-web/src/test/java/org/apache/rave/portal/web/tag/RegionWidgetTagTest.java
@@ -181,7 +181,7 @@ public class RegionWidgetTagTest {
         strings.add(WIDGET_TYPE);
 
         expect(service.getSupportedWidgetTypes()).andReturn(strings);
-        scriptManager.registerScriptBlock(anyObject(String.class), anyObject(ScriptLocation.AFTER_RAVE.getClass()), anyObject(RenderScope.CURRENT_REQUEST.getClass()), anyObject(RenderContext.class));
+        scriptManager.registerScriptBlock(anyObject(String.class), anyObject(String.class), anyObject(ScriptLocation.AFTER_RAVE.getClass()), anyObject(RenderScope.CURRENT_REQUEST.getClass()), anyObject(RenderContext.class));
         expectLastCall();
         replay(service, scriptManager);
 
