diff --git a/johnzon-jaxrs/src/main/java/org/apache/johnzon/jaxrs/JohnzonMessageBodyReader.java b/johnzon-jaxrs/src/main/java/org/apache/johnzon/jaxrs/JohnzonMessageBodyReader.java
index fb718efc..f3d9a18c 100644
--- a/johnzon-jaxrs/src/main/java/org/apache/johnzon/jaxrs/JohnzonMessageBodyReader.java
+++ b/johnzon-jaxrs/src/main/java/org/apache/johnzon/jaxrs/JohnzonMessageBodyReader.java
@@ -58,8 +58,8 @@ public class JohnzonMessageBodyReader<T> extends IgnorableTypes implements Messa
     public boolean isReadable(final Class<?> rawType, final Type genericType,
                               final Annotation[] annotations, final MediaType mediaType) {
         return !isIgnored(rawType)
-                && InputStream.class != rawType && Reader.class != rawType && Response.class != rawType
-                && String.class != rawType
+                && InputStream.class != genericType && Reader.class != genericType && Response.class != genericType
+                && String.class != genericType
                 && !JsonStructure.class.isAssignableFrom(rawType);
     }
 
diff --git a/johnzon-jaxrs/src/main/java/org/apache/johnzon/jaxrs/JohnzonMessageBodyWriter.java b/johnzon-jaxrs/src/main/java/org/apache/johnzon/jaxrs/JohnzonMessageBodyWriter.java
index f7b7c8a0..07d63672 100644
--- a/johnzon-jaxrs/src/main/java/org/apache/johnzon/jaxrs/JohnzonMessageBodyWriter.java
+++ b/johnzon-jaxrs/src/main/java/org/apache/johnzon/jaxrs/JohnzonMessageBodyWriter.java
@@ -66,12 +66,12 @@ public class JohnzonMessageBodyWriter<T> extends IgnorableTypes implements Messa
     public boolean isWriteable(final Class<?> rawType, final Type genericType,
                                final Annotation[] annotations, final MediaType mediaType) {
         return !isIgnored(rawType)
-                && InputStream.class != rawType
-                && OutputStream.class != rawType
-                && Writer.class != rawType
-                && StreamingOutput.class != rawType
-                && String.class != rawType
-                && Response.class != rawType
+                && InputStream.class != genericType
+                && OutputStream.class != genericType
+                && Writer.class != genericType
+                && StreamingOutput.class != genericType
+                && String.class != genericType
+                && Response.class != genericType
                 && !JsonStructure.class.isAssignableFrom(rawType);
     }
 
diff --git a/johnzon-jaxrs/src/test/java/org/apache/johnzon/jaxrs/JohnzonProviderTest.java b/johnzon-jaxrs/src/test/java/org/apache/johnzon/jaxrs/JohnzonProviderTest.java
index 3cccf831..b29a290b 100644
--- a/johnzon-jaxrs/src/test/java/org/apache/johnzon/jaxrs/JohnzonProviderTest.java
+++ b/johnzon-jaxrs/src/test/java/org/apache/johnzon/jaxrs/JohnzonProviderTest.java
@@ -30,8 +30,12 @@ import org.junit.Test;
 import javax.ws.rs.GET;
 import javax.ws.rs.POST;
 import javax.ws.rs.Path;
+import javax.ws.rs.WebApplicationException;
 import javax.ws.rs.core.GenericType;
 import javax.ws.rs.core.MediaType;
+import javax.ws.rs.core.StreamingOutput;
+import java.io.IOException;
+import java.io.OutputStream;
 import java.lang.reflect.ParameterizedType;
 import java.lang.reflect.Type;
 import java.util.List;
@@ -72,6 +76,12 @@ public class JohnzonProviderTest {
         assertEquals("johnzon", johnzon.getName());
     }
 
+    @Test
+    public void streamOutput() {
+        final String stream = client().path("johnzon/stream").get(String.class);
+        assertEquals("ok", stream);
+    }
+
     @Test
     public void array() {
         final Johnzon[] johnzon = client().path("johnzon/all1").get(Johnzon[].class);
@@ -157,5 +167,16 @@ public class JohnzonProviderTest {
         public String asParam(final Johnzon f) {
             return Boolean.toString("client".equals(f.getName()));
         }
+
+        @GET
+        @Path("stream")
+        public StreamingOutput out() {
+            return new StreamingOutput() {
+                @Override
+                public void write(OutputStream outputStream) throws IOException, WebApplicationException {
+                    outputStream.write("ok".getBytes());
+                }
+            };
+        }
     }
 }
