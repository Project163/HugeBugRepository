diff --git a/commons-vfs2-sandbox/src/main/java/org/apache/commons/vfs2/provider/smb/SmbFileNameParser.java b/commons-vfs2-sandbox/src/main/java/org/apache/commons/vfs2/provider/smb/SmbFileNameParser.java
index 3623b1c1..261a3e79 100644
--- a/commons-vfs2-sandbox/src/main/java/org/apache/commons/vfs2/provider/smb/SmbFileNameParser.java
+++ b/commons-vfs2-sandbox/src/main/java/org/apache/commons/vfs2/provider/smb/SmbFileNameParser.java
@@ -45,7 +45,7 @@ public class SmbFileNameParser extends URLFileNameParser {
         final StringBuilder name = new StringBuilder();
 
         // Extract the scheme and authority parts
-        final Authority auth = extractToPath(filename, name);
+        final Authority auth = extractToPath(context, filename, name);
 
         // extract domain
         String username = auth.getUserName();
diff --git a/commons-vfs2/src/main/java/org/apache/commons/vfs2/provider/GenericURLFileNameParser.java b/commons-vfs2/src/main/java/org/apache/commons/vfs2/provider/GenericURLFileNameParser.java
index 81bb4515..63ade7e8 100644
--- a/commons-vfs2/src/main/java/org/apache/commons/vfs2/provider/GenericURLFileNameParser.java
+++ b/commons-vfs2/src/main/java/org/apache/commons/vfs2/provider/GenericURLFileNameParser.java
@@ -44,7 +44,7 @@ public class GenericURLFileNameParser extends HostFileNameParser {
         final StringBuilder name = new StringBuilder();
 
         // Extract the scheme and authority parts
-        final Authority auth = extractToPath(fileName, name);
+        final Authority auth = extractToPath(context, fileName, name);
 
         // Extract the queryString
         final String queryString = UriParser.extractQueryString(name);
diff --git a/commons-vfs2/src/main/java/org/apache/commons/vfs2/provider/HostFileNameParser.java b/commons-vfs2/src/main/java/org/apache/commons/vfs2/provider/HostFileNameParser.java
index 08ead99f..4e7f1938 100644
--- a/commons-vfs2/src/main/java/org/apache/commons/vfs2/provider/HostFileNameParser.java
+++ b/commons-vfs2/src/main/java/org/apache/commons/vfs2/provider/HostFileNameParser.java
@@ -18,6 +18,7 @@ package org.apache.commons.vfs2.provider;
 
 import org.apache.commons.vfs2.FileName;
 import org.apache.commons.vfs2.FileSystemException;
+import org.apache.commons.vfs2.FileSystemManager;
 import org.apache.commons.vfs2.FileType;
 import org.apache.commons.vfs2.VFS;
 import org.apache.commons.vfs2.util.Cryptor;
@@ -49,7 +50,7 @@ public class HostFileNameParser extends AbstractFileNameParser {
         final StringBuilder name = new StringBuilder();
 
         // Extract the scheme and authority parts
-        final Authority auth = extractToPath(fileName, name);
+        final Authority auth = extractToPath(context, fileName, name);
 
         // Decode and normalise the file name
         UriParser.canonicalizePath(name, 0, name.length(), this);
@@ -69,11 +70,18 @@ public class HostFileNameParser extends AbstractFileNameParser {
      * @return Authority extracted host authority, never null.
      * @throws FileSystemException if authority cannot be extracted.
      */
-    protected Authority extractToPath(final String uri, final StringBuilder name) throws FileSystemException {
+    protected Authority extractToPath(final VfsComponentContext context, final String uri, final StringBuilder name) throws FileSystemException {
         final Authority auth = new Authority();
 
+        final FileSystemManager fsm;
+        if (context != null) {
+        	fsm = context.getFileSystemManager();
+        } else {
+        	fsm = VFS.getManager();
+        }
+        
         // Extract the scheme
-        auth.scheme = UriParser.extractScheme(VFS.getManager().getSchemes(), uri, name);
+        auth.scheme = UriParser.extractScheme(fsm.getSchemes(), uri, name);
 
         // Expecting "//"
         if (name.length() < 2 || name.charAt(0) != '/' || name.charAt(1) != '/') {
diff --git a/commons-vfs2/src/main/java/org/apache/commons/vfs2/provider/URLFileNameParser.java b/commons-vfs2/src/main/java/org/apache/commons/vfs2/provider/URLFileNameParser.java
index 27853aa8..a7cc8330 100644
--- a/commons-vfs2/src/main/java/org/apache/commons/vfs2/provider/URLFileNameParser.java
+++ b/commons-vfs2/src/main/java/org/apache/commons/vfs2/provider/URLFileNameParser.java
@@ -45,7 +45,7 @@ public class URLFileNameParser extends HostFileNameParser {
         final StringBuilder name = new StringBuilder();
 
         // Extract the scheme and authority parts
-        final Authority auth = extractToPath(fileName, name);
+        final Authority auth = extractToPath(context, fileName, name);
 
         // Extract the queryString
         final String queryString = UriParser.extractQueryString(name);
diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 91d6614d..3b770aef 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -56,6 +56,9 @@ The <action> type attribute can be add,update,fix,remove.
       <action issue="VFS-704" dev="ggregory" type="fix" due-to="Boris Petrov, Gary Gregory">
         Some providers wrap their input/output streams twice in a BufferedInputStream.
       </action>
+      <action issue="VFS-727" dev="ggregory" type="fix" due-to="Michiel Hendriks, Gary Gregory">
+        Prevented creation of singleton file system manager from providers.
+      </action>
     </release>
     <release version="2.4.1" date="2019-08-10" description="Bug fix release.">
       <action issue="VFS-725" dev="ggregory" type="fix" due-to="Gary Gregory">
