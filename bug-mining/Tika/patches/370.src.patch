diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java
index adefd9a26..c3947472c 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java
@@ -16,10 +16,12 @@
  */
 package org.apache.tika.parser.microsoft.ooxml;
 
+import java.math.BigDecimal;
 import java.util.Date;
 
 import org.apache.poi.POIXMLTextExtractor;
 import org.apache.poi.POIXMLProperties.CoreProperties;
+import org.apache.poi.POIXMLProperties.CustomProperties;
 import org.apache.poi.POIXMLProperties.ExtendedProperties;
 import org.apache.poi.openxml4j.opc.internal.PackagePropertiesPart;
 import org.apache.poi.openxml4j.util.Nullable;
@@ -28,6 +30,7 @@ import org.apache.tika.exception.TikaException;
 import org.apache.tika.metadata.Metadata;
 import org.apache.tika.metadata.PagedText;
 import org.apache.tika.metadata.Property;
+import org.openxmlformats.schemas.officeDocument.x2006.customProperties.CTProperty;
 import org.openxmlformats.schemas.officeDocument.x2006.extendedProperties.CTProperties;
 
 /**
@@ -56,6 +59,7 @@ public class MetadataExtractor {
                extractor.getPackage() != null)) {
             extractMetadata(extractor.getCoreProperties(), metadata);
             extractMetadata(extractor.getExtendedProperties(), metadata);
+            extractMetadata(extractor.getCustomProperties(), metadata);
         }
     }
 
@@ -127,6 +131,59 @@ public class MetadataExtractor {
         addProperty(metadata, Metadata.WORD_COUNT, propsHolder.getWords());
     }
 
+    private void extractMetadata(CustomProperties properties,
+          Metadata metadata) {
+       org.openxmlformats.schemas.officeDocument.x2006.customProperties.CTProperties
+           props = properties.getUnderlyingProperties();
+
+       for(CTProperty property : props.getPropertyList()) {
+          String val = null;
+          Date date = null;
+
+          if (property.isSetLpwstr()) {
+             val = property.getLpwstr(); 
+          }
+          else if (property.isSetFiletime()) {
+             date = property.getFiletime().getTime(); 
+          }
+          else if (property.isSetDate()) {
+             date = property.getDate().getTime(); 
+          }
+          else if (property.isSetDecimal()) {
+             BigDecimal d = property.getDecimal();
+             if (d == null) {
+                val = null;
+             } else {
+                val = d.toPlainString();
+             }
+          }
+          else if (property.isSetBool()) {
+             val = Boolean.toString( property.getBool() );
+          }
+          else if (property.isSetInt()) {
+             val = Integer.toString( property.getInt() ); 
+          }
+          else if (property.isSetLpstr()) {
+             val = property.getLpstr(); 
+          }
+          else if (property.isSetI4()) {
+             /* Int4 */ 
+             val = Integer.toString(property.getI4()); 
+          }
+          else {
+             // This type isn't currently supported yet, skip the property
+          }
+          
+          String propName = "custom:" + property.getName();
+          if (date != null) {
+             Property tikaProp = Property.externalDate(propName);
+             metadata.set(tikaProp, date);
+          } else if (val != null) {
+             metadata.set(propName, val);
+          }
+       }
+    }
+    
     private void addProperty(Metadata metadata, Property property, Nullable<Date> value) {
         if (value.getValue() != null) {
             metadata.set(property, value.getValue());
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParserTest.java
index 478a8ab8c..1d4f37a57 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParserTest.java
@@ -667,4 +667,36 @@ public class OOXMLParserTest extends TikaTest {
         assertContains("Here is some red word Art", content);
     }
 
+    /**
+     * Ensures that custom OOXML properties are extracted
+     */
+    public void testExcelCustomProperties() throws Exception {
+       InputStream input = OOXMLParserTest.class.getResourceAsStream(
+             "/test-documents/testEXCEL_custom_props.xlsx");
+       Metadata metadata = new Metadata();
+       
+       try {
+          ContentHandler handler = new BodyContentHandler(-1);
+          ParseContext context = new ParseContext();
+          context.set(Locale.class, Locale.US);
+          new OOXMLParser().parse(input, handler, metadata, context);
+       } finally {
+          input.close();
+       }
+       
+       assertEquals(
+             "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", 
+             metadata.get(Metadata.CONTENT_TYPE));
+       assertEquals(null,                   metadata.get(Metadata.AUTHOR));
+       assertEquals(null,                   metadata.get(Metadata.LAST_AUTHOR));
+       assertEquals("2006-09-12T15:06:44Z", metadata.get(Metadata.DATE));
+       assertEquals("2006-09-12T15:06:44Z", metadata.get(Metadata.CREATION_DATE));
+       assertEquals("2011-08-22T14:24:38Z", metadata.get(Metadata.LAST_MODIFIED));
+       assertEquals("Microsoft Excel",      metadata.get(Metadata.APPLICATION_NAME));
+       assertEquals("true",                 metadata.get("custom:myCustomBoolean"));
+       assertEquals("3",                    metadata.get("custom:myCustomNumber"));
+       assertEquals("MyStringValue",        metadata.get("custom:MyCustomString"));
+       assertEquals("2010-12-30T22:00:00Z", metadata.get("custom:MyCustomDate"));
+       assertEquals("2010-12-29T22:00:00Z", metadata.get("custom:myCustomSecondDate"));
+    }
 }
