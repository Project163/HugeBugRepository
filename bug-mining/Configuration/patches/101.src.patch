diff --git a/src/java/org/apache/commons/configuration/BaseConfiguration.java b/src/java/org/apache/commons/configuration/BaseConfiguration.java
index 695b7cfb..e78e0760 100644
--- a/src/java/org/apache/commons/configuration/BaseConfiguration.java
+++ b/src/java/org/apache/commons/configuration/BaseConfiguration.java
@@ -18,6 +18,7 @@
 package org.apache.commons.configuration;
 
 import java.util.ArrayList;
+import java.util.Collection;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
@@ -25,7 +26,7 @@ import java.util.Map;
 import org.apache.commons.collections.map.LinkedMap;
 
 /**
- * Basic configuration classe. Stores the configuration data but does not
+ * Basic configuration class. Stores the configuration data but does not
  * provide any load or save functions. If you want to load your Configuration
  * from a file use PropertiesConfiguration or XmlConfiguration.
  *
@@ -45,7 +46,7 @@ import org.apache.commons.collections.map.LinkedMap;
  * @author <a href="mailto:mpoeschl@marmot.at">Martin Poeschl</a>
  * @author <a href="mailto:hps@intermeta.de">Henning P. Schmiedehausen</a>
  * @author <a href="mailto:ksh@scand.com">Konstantin Shaposhnikov</a>
- * @author <a href="mailto:oliver.heger@t-online.de">Oliver Heger</a>
+ * @author Oliver Heger
  * @version $Id$
  */
 public class BaseConfiguration extends AbstractConfiguration implements Cloneable
@@ -165,6 +166,18 @@ public class BaseConfiguration extends AbstractConfiguration implements Cloneabl
         {
             BaseConfiguration copy = (BaseConfiguration) super.clone();
             copy.store = (Map) ConfigurationUtils.clone(store);
+
+            // Handle collections in the map; they have to be cloned, too
+            for (Iterator it = store.entrySet().iterator(); it.hasNext();)
+            {
+                Map.Entry e = (Map.Entry) it.next();
+                if (e.getValue() instanceof Collection)
+                {
+                    copy.store.put(e.getKey(), new ArrayList((Collection) e
+                            .getValue()));
+                }
+            }
+
             return copy;
         }
         catch (CloneNotSupportedException cex)
diff --git a/src/test/org/apache/commons/configuration/TestBaseConfiguration.java b/src/test/org/apache/commons/configuration/TestBaseConfiguration.java
index 11780c53..b8014a46 100644
--- a/src/test/org/apache/commons/configuration/TestBaseConfiguration.java
+++ b/src/test/org/apache/commons/configuration/TestBaseConfiguration.java
@@ -804,4 +804,18 @@ public class TestBaseConfiguration extends TestCase
         assertEquals("Event listener was copied", 0, config2
                 .getConfigurationListeners().size());
     }
+
+    /**
+     * Tests the clone() method if a list property is involved.
+     */
+    public void testCloneListProperty()
+    {
+        final String key = "list";
+        config.addProperty(key, "value1");
+        config.addProperty(key, "value2");
+        BaseConfiguration config2 = (BaseConfiguration) config.clone();
+        config2.addProperty(key, "value3");
+        assertEquals("Wrong number of original properties", 2, config.getList(
+                key).size());
+    }
 }
diff --git a/xdocs/changes.xml b/xdocs/changes.xml
index 85d415c5..0b3ee176 100644
--- a/xdocs/changes.xml
+++ b/xdocs/changes.xml
@@ -23,6 +23,10 @@
 
   <body>
     <release version="1.7" date="in SVN" description="">
+      <action dev="oheger" type="fix" issue="CONFIGURATION-393">
+        BaseConfiguration.clone() now also clones collections stored in the
+        internal map. This causes list properties to be handled correctly.
+      </action>
       <action dev="rgoers" type="fix" issue="CONFIGURATION-388">
         Attribute or element values will not be escaped when attribute or element splitting are disabled.
       </action>
