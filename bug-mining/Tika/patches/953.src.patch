diff --git a/CHANGES.txt b/CHANGES.txt
index d9d0eb754..72ed77fda 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -1,5 +1,8 @@
 Release 1.17 - ???
 
+  * Narrow mime detection for ms-owner files and add detection
+    for .nls files (TIKA-2469).
+
   * Fix bug in CharsetDetector that led to different detected charsets
     depending on whether user setText with a byte[] or an InputStream
     via Sean Story (TIKA-2475).
diff --git a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml
index dd5d0664f..3d4284de1 100644
--- a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml
+++ b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml
@@ -3608,8 +3608,19 @@
   <mime-type type="application/x-ms-owner">
     <_comment>Temporary files created by MSOffice applications</_comment>
     <_comment>PRONOM fmt-473</_comment>
+    <_comment>First byte and 53rd byte are the same -- the length of the name.</_comment>
+    <_comment>Based on TIKA-2469, we've added a heuristic/wild guess that the first 10 chars</_comment>
+    <_comment>after the length byte should be \x00 or a non-control character.</_comment>
     <magic priority="80">
-      <match value="(?s)^([\\x05-\\x0F]).{53}\\1\x00" type="regex" offset="0"/>
+      <match value="(?s)^([\\x05-\\x0F])[\\x00\\x20-\\x7E]{10}.{43}\\1\x00" type="regex" offset="0"/>
+    </magic>
+  </mime-type>
+  <mime-type type="application/x-ms-nls">
+    <_comment>Microsoft National Language Support</_comment>
+    <_comment>Should take precedence over x-ms-owner</_comment>
+    <magic priority="70">
+      <match value="(?s)^\\x0D.{51}\\x0C\\x00\\x0D\\x00\\x0E" type="regex" offset="0"/>
+      <match value="(?s)^\\x44\\x43.\\x01" type="regex" offset="0"/>
     </magic>
   </mime-type>
   <mime-type type="application/x-ms-wmd">
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/MSOwnerFileParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/MSOwnerFileParser.java
index c7019f2a5..df0cc7396 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/MSOwnerFileParser.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/MSOwnerFileParser.java
@@ -17,6 +17,7 @@
 package org.apache.tika.parser.microsoft;
 
 import org.apache.commons.io.IOUtils;
+import org.apache.tika.Tika;
 import org.apache.tika.exception.TikaException;
 import org.apache.tika.metadata.Metadata;
 import org.apache.tika.metadata.TikaCoreProperties;
@@ -65,16 +66,25 @@ public class MSOwnerFileParser extends AbstractParser {
         byte[] asciiNameBytes = new byte[ASCII_CHUNK_LENGTH];
         IOUtils.readFully(stream, asciiNameBytes);
         int asciiNameLength = (int)asciiNameBytes[0];//don't need to convert to unsigned int because it can't be that long
+        //sanity check name length
+        if (asciiNameLength < 0) {
+            throw new TikaException("ascii name length must be >= 0");
+        } else if (asciiNameLength > ASCII_CHUNK_LENGTH) {
+            throw new TikaException("ascii name length must be < 55");
+        }
+
         String asciiName = new String(asciiNameBytes, 1, asciiNameLength, StandardCharsets.US_ASCII);
         metadata.set(TikaCoreProperties.MODIFIER, asciiName);
 
         int unicodeCharLength = stream.read();
-        if (unicodeCharLength > 0) {
+        if (asciiNameLength == unicodeCharLength) {
             stream.read();//zero after the char length
             byte[] unicodeBytes = new byte[unicodeCharLength * 2];
             IOUtils.readFully(stream, unicodeBytes);
             String unicodeName = new String(unicodeBytes, StandardCharsets.UTF_16LE);
             metadata.set(TikaCoreProperties.MODIFIER, unicodeName);
+        } else {
+            throw new TikaException("Ascii name length should be the same as the unicode length");
         }
         xhtml.endDocument();
     }
diff --git a/tika-parsers/src/test/java/org/apache/tika/mime/TestMimeTypes.java b/tika-parsers/src/test/java/org/apache/tika/mime/TestMimeTypes.java
index 058035ce6..e423fddab 100644
--- a/tika-parsers/src/test/java/org/apache/tika/mime/TestMimeTypes.java
+++ b/tika-parsers/src/test/java/org/apache/tika/mime/TestMimeTypes.java
@@ -1148,6 +1148,11 @@ public class TestMimeTypes {
         assertTypeByData("text/plain", "testSAS.sas");
     }
 
+    @Test
+    public void testNLS() throws Exception {
+        assertTypeByData("application/x-ms-nls", "testNLS1.nls");
+        assertTypeByData("application/x-ms-nls", "testNLS2.nls");
+    }
 
     private void assertText(byte[] prefix) throws IOException {
         assertMagic("text/plain", prefix);
diff --git a/tika-parsers/src/test/resources/test-documents/testNLS1.nls b/tika-parsers/src/test/resources/test-documents/testNLS1.nls
new file mode 100644
index 000000000..02f4e4efc
Binary files /dev/null and b/tika-parsers/src/test/resources/test-documents/testNLS1.nls differ
diff --git a/tika-parsers/src/test/resources/test-documents/testNLS2.nls b/tika-parsers/src/test/resources/test-documents/testNLS2.nls
new file mode 100644
index 000000000..dca333471
Binary files /dev/null and b/tika-parsers/src/test/resources/test-documents/testNLS2.nls differ
