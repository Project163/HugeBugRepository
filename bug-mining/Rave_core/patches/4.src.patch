diff --git a/rave-components/rave-core/src/main/java/org/apache/rave/portal/service/WidgetService.java b/rave-components/rave-core/src/main/java/org/apache/rave/portal/service/WidgetService.java
index 468f3dcd..c614324f 100644
--- a/rave-components/rave-core/src/main/java/org/apache/rave/portal/service/WidgetService.java
+++ b/rave-components/rave-core/src/main/java/org/apache/rave/portal/service/WidgetService.java
@@ -119,12 +119,8 @@ public interface WidgetService {
      *
      * @param widget new Widget to store
      * @return Widget if it is new and can be stored, otherwise {@literal null}
-     * 
-     * TODO: change the security annotation to:
-     * @PostAuthorize("hasPermission(returnObject, 'create')") 
-     * once RAVE-319 has been resolved
      */        
-    @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#widget.owner.entityId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.Widget', 'create')")    
+    @PostAuthorize("hasPermission(returnObject, 'create')") 
     Widget registerNewWidget(Widget widget);
     
     /**
diff --git a/rave-components/rave-core/src/main/java/org/apache/rave/portal/service/impl/DefaultWidgetService.java b/rave-components/rave-core/src/main/java/org/apache/rave/portal/service/impl/DefaultWidgetService.java
index aeda8ed1..e2c1e9ae 100644
--- a/rave-components/rave-core/src/main/java/org/apache/rave/portal/service/impl/DefaultWidgetService.java
+++ b/rave-components/rave-core/src/main/java/org/apache/rave/portal/service/impl/DefaultWidgetService.java
@@ -33,6 +33,7 @@ import org.springframework.stereotype.Service;
 
 import java.util.List;
 import java.util.Map;
+import org.springframework.transaction.annotation.Transactional;
 
 @Service
 public class DefaultWidgetService implements WidgetService {
@@ -122,11 +123,12 @@ public class DefaultWidgetService implements WidgetService {
     }
 
     @Override
+    @Transactional
     public Widget registerNewWidget(Widget widget) {
         if (getWidgetByUrl(widget.getUrl()) != null) {
             logger.debug("Trying to add an existing widget for url {}", widget.getUrl());
             return null;
-        }
+        }                      
         return widgetRepository.save(widget);
     }
 
@@ -141,6 +143,7 @@ public class DefaultWidgetService implements WidgetService {
     }
 
     @Override
+    @Transactional
     public void updateWidget(Widget widget) {
         widgetRepository.save(widget);
     }
