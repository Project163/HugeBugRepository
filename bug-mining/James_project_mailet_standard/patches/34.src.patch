diff --git a/mailet/standard/src/main/java/org/apache/james/transport/matchers/HasMailAttributeWithValueRegex.java b/mailet/standard/src/main/java/org/apache/james/transport/matchers/HasMailAttributeWithValueRegex.java
index 3a56f173e3..6d19242aa9 100644
--- a/mailet/standard/src/main/java/org/apache/james/transport/matchers/HasMailAttributeWithValueRegex.java
+++ b/mailet/standard/src/main/java/org/apache/james/transport/matchers/HasMailAttributeWithValueRegex.java
@@ -73,6 +73,7 @@ public class HasMailAttributeWithValueRegex extends GenericMatcher {
         } else {
             throw new MessagingException("malformed condition for HasMailAttributeWithValueRegex. must be of the form: attr,regex");
         }
+        super.init(conf);
     }
 
     /**
diff --git a/mailet/standard/src/test/java/org/apache/james/transport/matchers/HasMailAttributeWithValueRegexTest.java b/mailet/standard/src/test/java/org/apache/james/transport/matchers/HasMailAttributeWithValueRegexTest.java
index c8fb3c650c..7fc3bf161b 100644
--- a/mailet/standard/src/test/java/org/apache/james/transport/matchers/HasMailAttributeWithValueRegexTest.java
+++ b/mailet/standard/src/test/java/org/apache/james/transport/matchers/HasMailAttributeWithValueRegexTest.java
@@ -65,6 +65,15 @@ public class HasMailAttributeWithValueRegexTest extends AbstractHasMailAttribute
                 .size()).isEqualTo(matchedRecipients.size());
     }
 
+    @Test
+    public void getMatcherConfigShouldNotReturnNull() throws MessagingException {
+        init();
+        setRegex(".*");
+        setupAll();
+
+        assertThat(matcher.getMatcherConfig()).isNotNull();
+    }
+
     @Test
     void testHeaderIsNotMatched() throws MessagingException {
         setRegex("\\d");
