diff --git a/core/src/main/java/org/apache/commons/vfs/provider/ftp/FtpClientFactory.java b/core/src/main/java/org/apache/commons/vfs/provider/ftp/FtpClientFactory.java
index 3c793ba6..f8529280 100644
--- a/core/src/main/java/org/apache/commons/vfs/provider/ftp/FtpClientFactory.java
+++ b/core/src/main/java/org/apache/commons/vfs/provider/ftp/FtpClientFactory.java
@@ -157,6 +157,12 @@ public final class FtpClientFactory
                     client.setDataTimeout(dataTimeout.intValue());
                 }
 
+                Integer socketTimeout = FtpFileSystemConfigBuilder.getInstance().getSoTimeout(fileSystemOptions);
+                if (socketTimeout != null)
+                {
+                    client.setSoTimeout(socketTimeout.intValue());
+                }
+
                 // Change to root by default
                 // All file operations a relative to the filesystem-root
                 // String root = getRoot().getName().getPath();
diff --git a/core/src/main/java/org/apache/commons/vfs/provider/ftp/FtpFileSystemConfigBuilder.java b/core/src/main/java/org/apache/commons/vfs/provider/ftp/FtpFileSystemConfigBuilder.java
index 7a0c95fb..20db4ce4 100644
--- a/core/src/main/java/org/apache/commons/vfs/provider/ftp/FtpFileSystemConfigBuilder.java
+++ b/core/src/main/java/org/apache/commons/vfs/provider/ftp/FtpFileSystemConfigBuilder.java
@@ -34,6 +34,7 @@ public final class FtpFileSystemConfigBuilder extends FileSystemConfigBuilder
     private static final String PASSIVE_MODE = FtpFileSystemConfigBuilder.class.getName() + ".PASSIVE";
     private static final String USER_DIR_IS_ROOT = FtpFileSystemConfigBuilder.class.getName() + ".USER_DIR_IS_ROOT";
     private static final String DATA_TIMEOUT = FtpFileSystemConfigBuilder.class.getName() + ".DATA_TIMEOUT";
+    private final static String SO_TIMEOUT = FtpFileSystemConfigBuilder.class.getName() + ".SO_TIMEOUT";
 
     private static final String SERVER_LANGUAGE_CODE =
             FtpFileSystemConfigBuilder.class.getName() + ".SERVER_LANGUAGE_CODE";
@@ -172,6 +173,28 @@ public final class FtpFileSystemConfigBuilder extends FileSystemConfigBuilder
         setParam(opts, DATA_TIMEOUT, dataTimeout);
     }
 
+    /**
+     * @param opts
+     * @see #getDataTimeout
+     */
+    public Integer getSoTimeout(FileSystemOptions opts)
+    {
+        return (Integer) getParam(opts, SO_TIMEOUT);
+    }
+
+    /**
+     * set the socket timeout for the ftp client.<br />
+     * If you set the socketTimeout to <code>null</code> no socketTimeout will be set on the
+     * ftp client.
+     *
+     * @param opts
+     * @param soTimeout
+     */
+    public void setSoTimeout(FileSystemOptions opts, Integer soTimeout)
+    {
+        setParam(opts, SO_TIMEOUT, soTimeout);
+    }
+
     /**
      * get the language code used by the server. see {@link org.apache.commons.net.ftp.FTPClientConfig}
      * for details and examples.
diff --git a/xdocs/changes.xml b/xdocs/changes.xml
index ea23b76a..acbdb2fd 100644
--- a/xdocs/changes.xml
+++ b/xdocs/changes.xml
@@ -23,6 +23,10 @@
 
   <body>
     <release version="2.0" date="in SVN" description="">
+      <action dev="rgoers" type="fix" issue="VFS-216" due-to="Reetu Mutti">
+        The FTP Configuration includes an option to set a timeout for the data connection, but not for the socket 
+        timeout. This is a problem, as idle sockets can cause your download to hang forever and never timeout.
+      </action>
       <action dev="rgoers" type="fix" issue="VFS-289" due-to="Kirill Safonov">
         FTP connection is not released If exception is thrown out of FtpFileObject.doGetOutputStream().
       </action>
