diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index da71653d..538819d7 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -109,10 +109,15 @@ The <action> type attribute can be add,update,fix,remove.
         remains but is deprecated so not to break clients currently using the
         incorrect name.
       </action>
-     <action dev="markt" type="add" issue="DBCP-462" due-to=" Keiichi Fujino">
-       Refactoring to prepare for a future patch to enable pooling of all
-       prepared and callable statements in PoolingConnection.
-     </action>
+       <action dev="markt" type="add" issue="DBCP-462" due-to=" Keiichi Fujino">
+         Refactoring to prepare for a future patch to enable pooling of all
+         prepared and callable statements in PoolingConnection.
+       </action>
+       <action dev="markt" type="fix" issue="DBCP-459">
+         Ensure that a thread's interrupt status is visible to the caller if the
+         thread is interrupted during a call to
+         PoolingDataSource.getConnection().
+       </action>
     </release>
     <release version="2.1.1" date="6 Aug 2015" description=
 "This is a patch release, including bug fixes only.">
diff --git a/src/main/java/org/apache/commons/dbcp2/PoolingDataSource.java b/src/main/java/org/apache/commons/dbcp2/PoolingDataSource.java
index 319c36cf..52f69ba1 100644
--- a/src/main/java/org/apache/commons/dbcp2/PoolingDataSource.java
+++ b/src/main/java/org/apache/commons/dbcp2/PoolingDataSource.java
@@ -143,6 +143,10 @@ public class PoolingDataSource<C extends Connection> implements DataSource, Auto
             throw new SQLException("Cannot get a connection, pool error " + e.getMessage(), e);
         } catch(final RuntimeException e) {
             throw e;
+        } catch(final InterruptedException e) {
+            // Reset the interrupt status so it is visible to callers
+            Thread.currentThread().interrupt();
+            throw new SQLException("Cannot get a connection, general error", e);
         } catch(final Exception e) {
             throw new SQLException("Cannot get a connection, general error", e);
         }
