diff --git a/src/java/org/apache/commons/dbcp/DelegatingConnection.java b/src/java/org/apache/commons/dbcp/DelegatingConnection.java
index 3d183c21..407e79ff 100644
--- a/src/java/org/apache/commons/dbcp/DelegatingConnection.java
+++ b/src/java/org/apache/commons/dbcp/DelegatingConnection.java
@@ -359,8 +359,14 @@ public class DelegatingConnection extends AbandonedTrace
     protected void checkOpen() throws SQLException {
         if(_closed) {
             if (null != _conn) {
+                String label = "";
+                try {
+                    label = _conn.toString();
+                } catch (Exception ex) {
+                    // ignore, leave label empty
+                }
                 throw new SQLException
-                    ("Connection " + _conn + " is closed.");
+                    ("Connection " + label + " is closed.");
             } else {
                 throw new SQLException
                     ("Connection is null.");
diff --git a/src/test/org/apache/commons/dbcp/TestDelegatingConnection.java b/src/test/org/apache/commons/dbcp/TestDelegatingConnection.java
index 2ba7ed1c..a5fe6ebc 100644
--- a/src/test/org/apache/commons/dbcp/TestDelegatingConnection.java
+++ b/src/test/org/apache/commons/dbcp/TestDelegatingConnection.java
@@ -125,6 +125,29 @@ public class TestDelegatingConnection extends TestCase {
             fail("Expecting SQLException");
         } catch (SQLException ex) {
             assertTrue(ex.getMessage().endsWith("invalid PoolingConnection."));
-        }   
+        }  
+        
+        try {
+            conn = new DelegatingConnection(new RTEGeneratingConnection());
+            conn.close();
+            conn.checkOpen();
+            fail("Expecting SQLException");
+        } catch (SQLException ex) {
+            assertTrue(ex.getMessage().endsWith("is closed."));
+        }
+    }
+    
+    /**
+     * Delegate that will throw RTE on toString
+     * Used to validate fix for DBCP-241
+     */
+    class RTEGeneratingConnection extends TesterConnection {
+        public RTEGeneratingConnection() {
+            super("","");
+        }
+        public String toString() {
+            throw new RuntimeException("bang!");
+        }
+        
     }
 }
