diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParser.java
index 2968773f5..cfd504cd1 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParser.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParser.java
@@ -76,9 +76,11 @@ public class OfficeParser implements Parser {
             } else if ("WordDocument".equals(name)) {
                 setType(metadata, "application/msword");
                 WordExtractor extractor = new WordExtractor(filesystem);
+                addTextIfAny(xhtml, "header", extractor.getHeaderText());
                 for (String paragraph : extractor.getParagraphText()) {
                     xhtml.element("p", paragraph);
                 }
+                addTextIfAny(xhtml, "footer", extractor.getFooterText());
             } else if ("PowerPoint Document".equals(name)) {
                 setType(metadata, "application/vnd.ms-powerpoint");
                 PowerPointExtractor extractor =
@@ -185,4 +187,22 @@ public class OfficeParser implements Parser {
         }
     }
 
+    /**
+     * Outputs a section of text if the given text is non-empty.
+     *
+     * @param xhtml XHTML content handler
+     * @param section the class of the &lt;div/&gt; section emitted
+     * @param text text to be emitted, if any
+     * @throws SAXException if an error occurs
+     */
+    private void addTextIfAny(
+            XHTMLContentHandler xhtml, String section, String text)
+            throws SAXException {
+        if (text != null && text.length() > 0) {
+            xhtml.startElement("div", "class", section);
+            xhtml.element("p", text);
+            xhtml.endElement("div");
+        }
+    }
+
 }
