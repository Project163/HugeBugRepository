diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/mp3/CompositeTagHandler.java b/tika-parsers/src/main/java/org/apache/tika/parser/mp3/CompositeTagHandler.java
index 7e389152f..a4d778438 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/mp3/CompositeTagHandler.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/mp3/CompositeTagHandler.java
@@ -16,6 +16,9 @@
  */
 package org.apache.tika.parser.mp3;
 
+import java.util.Collections;
+import java.util.List;
+
 /**
  * Takes an array of {@link ID3Tags} in preference order, and when asked for
  * a given tag, will return it from the first {@link ID3Tags} that has it.
@@ -82,13 +85,14 @@ public class CompositeTagHandler implements ID3Tags {
         return null;
     }
 
-    public String getComment() {
+    public List<ID3Comment> getComments() {
         for (ID3Tags tag : tags) {
-            if (tag.getComment() != null) {
-                return tag.getComment();
+            List<ID3Comment> comments = tag.getComments();
+            if (comments != null && comments.size() > 0) {
+                return comments;
             }
         }
-        return null;
+        return Collections.emptyList();
     }
 
     public String getGenre() {
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3Tags.java b/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3Tags.java
index 62438aa44..074235d98 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3Tags.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3Tags.java
@@ -16,6 +16,8 @@
  */
 package org.apache.tika.parser.mp3;
 
+import java.util.List;
+
 
 /**
  * Interface that defines the common interface for ID3 tag parsers,
@@ -176,7 +178,12 @@ public interface ID3Tags {
     
     String getComposer();
 
-    String getComment();
+    /**
+     * Retrieves the comments, if any.
+     * Files may have more than one comment, but normally only 
+     *  one with any language/description pair.
+     */
+    List<ID3Comment> getComments();
 
     String getGenre();
 
@@ -184,4 +191,47 @@ public interface ID3Tags {
 
     String getTrackNumber();
 
+    /**
+     * Represents a comments in ID3 (especially ID3 v2), where are 
+     *  made up of several parts
+     */
+    public static class ID3Comment {
+        private String language;
+        private String description;
+        private String text;
+        
+        /**
+         * Creates an ID3 v1 style comment tag
+         */
+        public ID3Comment(String id3v1Text) {
+           this.text = id3v1Text;
+        }
+        /**
+         * Creates an ID3 v2 style comment tag
+         */
+        public ID3Comment(String language, String description, String text) {
+            this.language = language;
+            this.description = description;
+            this.text = text;
+        }
+
+        /**
+         * Gets the language, if present
+         */
+        public String getLanguage() {
+           return language;
+        }
+        /**
+         * Gets the description, if present
+         */
+        public String getDescription() {
+           return description;
+        }
+        /**
+         * Gets the text, if present
+         */
+        public String getText() {
+           return text;
+        }
+    }
 }
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v1Handler.java b/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v1Handler.java
index e265636e9..5cf603cf2 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v1Handler.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v1Handler.java
@@ -19,6 +19,8 @@ package org.apache.tika.parser.mp3;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.UnsupportedEncodingException;
+import java.util.Arrays;
+import java.util.List;
 
 import org.apache.tika.exception.TikaException;
 import org.xml.sax.ContentHandler;
@@ -35,7 +37,7 @@ public class ID3v1Handler implements ID3Tags {
     private String artist;
     private String album;
     private String year;
-    private String comment;
+    private ID3Comment comment;
     private String genre;
     private String trackNumber;
 
@@ -60,7 +62,9 @@ public class ID3v1Handler implements ID3Tags {
             artist = getString(tagData, 33, 63);
             album = getString(tagData, 63, 93);
             year = getString(tagData, 93, 97);
-            comment = getString(tagData, 97, 127);
+            
+            String commentStr = getString(tagData, 97, 127);
+            comment = new ID3Comment(commentStr);
 
             int genreID = (int) tagData[127] & 0xff; // unsigned byte
             genre = GENRES[Math.min(genreID, GENRES.length - 1)];
@@ -96,8 +100,8 @@ public class ID3v1Handler implements ID3Tags {
         return year;
     }
 
-    public String getComment() {
-        return comment;
+    public List<ID3Comment> getComments() {
+       return Arrays.asList(new ID3Comment[] {comment});
     }
 
     public String getGenre() {
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v22Handler.java b/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v22Handler.java
index 46341adbf..f6ca0ee51 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v22Handler.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v22Handler.java
@@ -17,6 +17,8 @@
 package org.apache.tika.parser.mp3;
 
 import java.io.IOException;
+import java.util.ArrayList;
+import java.util.List;
 
 import org.apache.tika.exception.TikaException;
 import org.apache.tika.parser.mp3.ID3v2Frame.RawTag;
@@ -35,9 +37,9 @@ public class ID3v22Handler implements ID3Tags {
     private String album;
     private String year;
     private String composer;
-    private String comment;
     private String genre;
     private String trackNumber;
+    private List<ID3Comment> comments = new ArrayList<ID3Comment>();
 
     public ID3v22Handler(ID3v2Frame frame)
             throws IOException, SAXException, TikaException {
@@ -55,7 +57,7 @@ public class ID3v22Handler implements ID3Tags {
             } else if (tag.name.equals("TCM")) {
                 composer = getTagString(tag.data, 0, tag.data.length); 
             } else if (tag.name.equals("COM")) {
-                comment = getCommentString(tag.data, 0, tag.data.length); 
+                comments.add( getComment(tag.data, 0, tag.data.length) ); 
             } else if (tag.name.equals("TRK")) {
                 trackNumber = getTagString(tag.data, 0, tag.data.length); 
             } else if (tag.name.equals("TCO")) {
@@ -67,8 +69,8 @@ public class ID3v22Handler implements ID3Tags {
     private String getTagString(byte[] data, int offset, int length) {
         return ID3v2Frame.getTagString(data, offset, length);
     }
-    private String getCommentString(byte[] data, int offset, int length) {
-        return ID3v2Frame.getCommentString(data, offset, length);
+    private ID3Comment getComment(byte[] data, int offset, int length) {
+        return ID3v2Frame.getComment(data, offset, length);
     }
     
     protected static String extractGenre(String rawGenre) {
@@ -115,8 +117,8 @@ public class ID3v22Handler implements ID3Tags {
         return composer;
     }
 
-    public String getComment() {
-        return comment;
+    public List<ID3Comment> getComments() {
+        return comments;
     }
 
     public String getGenre() {
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v23Handler.java b/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v23Handler.java
index 72c0b9f22..daee47e34 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v23Handler.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v23Handler.java
@@ -17,6 +17,8 @@
 package org.apache.tika.parser.mp3;
 
 import java.io.IOException;
+import java.util.ArrayList;
+import java.util.List;
 
 import org.apache.tika.exception.TikaException;
 import org.apache.tika.parser.mp3.ID3v2Frame.RawTag;
@@ -35,9 +37,9 @@ public class ID3v23Handler implements ID3Tags {
     private String album;
     private String year;
     private String composer;
-    private String comment;
     private String genre;
     private String trackNumber;
+    private List<ID3Comment> comments = new ArrayList<ID3Comment>();
 
     public ID3v23Handler(ID3v2Frame frame)
             throws IOException, SAXException, TikaException {
@@ -55,7 +57,7 @@ public class ID3v23Handler implements ID3Tags {
             } else if (tag.name.equals("TCOM")) {
                 composer = getTagString(tag.data, 0, tag.data.length); 
             } else if (tag.name.equals("COMM")) {
-                comment = getCommentString(tag.data, 0, tag.data.length); 
+                comments.add( getComment(tag.data, 0, tag.data.length) ); 
             } else if (tag.name.equals("TRCK")) {
                 trackNumber = getTagString(tag.data, 0, tag.data.length); 
             } else if (tag.name.equals("TCON")) {
@@ -67,8 +69,8 @@ public class ID3v23Handler implements ID3Tags {
     private String getTagString(byte[] data, int offset, int length) {
         return ID3v2Frame.getTagString(data, offset, length);
     }
-    private String getCommentString(byte[] data, int offset, int length) {
-       return ID3v2Frame.getCommentString(data, offset, length);
+    private ID3Comment getComment(byte[] data, int offset, int length) {
+       return ID3v2Frame.getComment(data, offset, length);
     }
 
     public boolean getTagsPresent() {
@@ -95,8 +97,8 @@ public class ID3v23Handler implements ID3Tags {
         return composer;
     }
 
-    public String getComment() {
-        return comment;
+    public List<ID3Comment> getComments() {
+        return comments;
     }
 
     public String getGenre() {
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v24Handler.java b/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v24Handler.java
index dda81bda6..33d4a0145 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v24Handler.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v24Handler.java
@@ -17,6 +17,8 @@
 package org.apache.tika.parser.mp3;
 
 import java.io.IOException;
+import java.util.ArrayList;
+import java.util.List;
 
 import org.apache.tika.exception.TikaException;
 import org.apache.tika.parser.mp3.ID3v2Frame.RawTag;
@@ -36,9 +38,9 @@ public class ID3v24Handler implements ID3Tags {
     private String album;
     private String year;
     private String composer;
-    private String comment;
     private String genre;
     private String trackNumber;
+    private List<ID3Comment> comments = new ArrayList<ID3Comment>();
 
     public ID3v24Handler(ID3v2Frame frame)
             throws IOException, SAXException, TikaException {
@@ -60,7 +62,7 @@ public class ID3v24Handler implements ID3Tags {
             } else if (tag.name.equals("TCOM")) {
                 composer = getTagString(tag.data, 0, tag.data.length); 
             } else if (tag.name.equals("COMM")) {
-                comment = getCommentString(tag.data, 0, tag.data.length); 
+                comments.add( getComment(tag.data, 0, tag.data.length) ); 
             } else if (tag.name.equals("TRCK")) {
                 trackNumber = getTagString(tag.data, 0, tag.data.length); 
             } else if (tag.name.equals("TCON")) {
@@ -72,8 +74,8 @@ public class ID3v24Handler implements ID3Tags {
     private String getTagString(byte[] data, int offset, int length) {
         return ID3v2Frame.getTagString(data, offset, length);
     }
-    private String getCommentString(byte[] data, int offset, int length) {
-        return ID3v2Frame.getCommentString(data, offset, length);
+    private ID3Comment getComment(byte[] data, int offset, int length) {
+        return ID3v2Frame.getComment(data, offset, length);
     }
 
     public boolean getTagsPresent() {
@@ -100,8 +102,8 @@ public class ID3v24Handler implements ID3Tags {
         return composer;
     }
 
-    public String getComment() {
-        return comment;
+    public List<ID3Comment> getComments() {
+        return comments;
     }
 
     public String getGenre() {
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v2Frame.java b/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v2Frame.java
index d790741a5..0175756d8 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v2Frame.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v2Frame.java
@@ -21,6 +21,8 @@ import java.io.InputStream;
 import java.io.UnsupportedEncodingException;
 import java.util.Iterator;
 
+import org.apache.tika.parser.mp3.ID3Tags.ID3Comment;
+
 /**
  * A frame of ID3v2 data, which is then passed to a handler to 
  * be turned into useful data.
@@ -234,16 +236,17 @@ public class ID3v2Frame implements MP3Frame {
         }
     }
     /**
-     * Returns the comment string, in the form [LANG]: [Desc]\n[Text]
+     * Builds up the ID3 comment, by parsing and extracting
+     *  the comment string parts from the given data. 
      */
-    protected static String getCommentString(byte[] data, int offset, int length) {
+    protected static ID3Comment getComment(byte[] data, int offset, int length) {
        // Comments must have an encoding
        int encodingFlag = data[offset];
        if (encodingFlag >= 0 && encodingFlag < encodings.length) {
           // Good, valid flag
        } else {
           // Invalid string
-          return "";
+          return null;
        }
        
        TextEncoding encoding = encodings[encodingFlag];
@@ -285,11 +288,7 @@ public class ID3v2Frame implements MP3Frame {
           }
           
           // Return
-          if (description == null || description.length() == 0) {
-             return lang + " - " + text;
-          } else {
-             return lang + " - " + description + "\n" + text;
-          }
+          return new ID3Comment(lang, description, text);
        } catch (UnsupportedEncodingException e) {
           throw new RuntimeException(
                   "Core encoding " + encoding.encoding + " is not available", e);
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java b/tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java
index 78a22ad7f..91493d6f9 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java
@@ -29,6 +29,7 @@ import org.apache.tika.metadata.XMPDM;
 import org.apache.tika.mime.MediaType;
 import org.apache.tika.parser.AbstractParser;
 import org.apache.tika.parser.ParseContext;
+import org.apache.tika.parser.mp3.ID3Tags.ID3Comment;
 import org.apache.tika.sax.XHTMLContentHandler;
 import org.xml.sax.ContentHandler;
 import org.xml.sax.SAXException;
@@ -77,7 +78,27 @@ public class Mp3Parser extends AbstractParser {
            metadata.set(XMPDM.ALBUM, tag.getAlbum());
            metadata.set(XMPDM.RELEASE_DATE, tag.getYear());
            metadata.set(XMPDM.GENRE, tag.getGenre());
-           metadata.set(XMPDM.LOG_COMMENT, tag.getComment());
+           
+           List<String> comments = new ArrayList<String>();
+           for (ID3Comment comment : tag.getComments()) {
+              StringBuffer cmt = new StringBuffer();
+              if (comment.getLanguage() != null) {
+                 cmt.append(comment.getLanguage());
+                 cmt.append(" - ");
+              }
+              if (comment.getDescription() != null) {
+                 cmt.append(comment.getDescription());
+                 if (comment.getText() != null) {
+                    cmt.append("\n");
+                 }
+              }
+              if (comment.getText() != null) {
+                 cmt.append(comment.getText());
+              }
+              
+              comments.add(cmt.toString());
+              metadata.add(XMPDM.LOG_COMMENT.getName(), cmt.toString());
+           }
 
            xhtml.element("h1", tag.getTitle());
            xhtml.element("p", tag.getArtist());
@@ -90,8 +111,10 @@ public class Mp3Parser extends AbstractParser {
                 xhtml.element("p", tag.getAlbum());
             }
             xhtml.element("p", tag.getYear());
-            xhtml.element("p", tag.getComment());
             xhtml.element("p", tag.getGenre());
+            for (String comment : comments) {
+               xhtml.element("p", comment);
+            }
         }
         if (audioAndTags.audio != null) {
             metadata.set("samplerate", String.valueOf(audioAndTags.audio.getSampleRate()));
