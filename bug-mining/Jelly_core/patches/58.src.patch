diff --git a/src/java/org/apache/commons/jelly/impl/TagScript.java b/src/java/org/apache/commons/jelly/impl/TagScript.java
index 92d7687f..38163d6d 100644
--- a/src/java/org/apache/commons/jelly/impl/TagScript.java
+++ b/src/java/org/apache/commons/jelly/impl/TagScript.java
@@ -54,7 +54,7 @@ import org.xml.sax.SAXException;
  * concurrently by multiple threads.
  *
  * @author <a href="mailto:jstrachan@apache.org">James Strachan</a>
- * @version $Revision: 1.49 $
+ * @version $Revision: 1.50 $
  */
 public class TagScript implements Script {
 
@@ -286,11 +286,11 @@ public class TagScript implements Script {
      * @return the tag to be evaluated, creating it lazily if required.
      */
     public Tag getTag(JellyContext context) throws JellyException {
-        Tag tag = context.getTagOfTagScript(this);
+        Tag tag = (Tag) context.getThreadScriptData(this);
         if ( tag == null ) {
             tag = createTag();
             if ( tag != null ) {
-                context.setTagForScript(this,tag);
+                context.setThreadScriptData(this,tag);
                 configureTag(tag,context);
             }
         }
@@ -514,7 +514,7 @@ public class TagScript implements Script {
      * when a StaticTag is switched with a DynamicTag
      */
     protected void setTag(Tag tag, JellyContext context) {
-        context.setTagForScript(this,tag);
+        context.setThreadScriptData(this,tag);
     }
 
     /**
diff --git a/src/test/org/apache/commons/jelly/core/BaseMemoryLeakTest.java b/src/test/org/apache/commons/jelly/core/BaseMemoryLeakTest.java
index 144314b3..3bcd1c04 100644
--- a/src/test/org/apache/commons/jelly/core/BaseMemoryLeakTest.java
+++ b/src/test/org/apache/commons/jelly/core/BaseMemoryLeakTest.java
@@ -117,6 +117,10 @@ public class BaseMemoryLeakTest extends TestCase {
             // PL: I don't see why but removing the clear here 
             //     does make the test fail!
             //     As if the WeakHashMap wasn't weak enough...
+            
+            //Hans: The structure of the relationship
+            //  between TagScript and Tag prevents WeakHashMap
+            //  from working in this case, which is why I removed it.
             jc.clear();
 
             if (outputEveryXIterations != 0 && i % outputEveryXIterations == 0) {
@@ -126,7 +130,7 @@ public class BaseMemoryLeakTest extends TestCase {
                 rt.runFinalization();
                 rt.gc();
                 long middle = rt.totalMemory() - rt.freeMemory();
-                log.info("TagHolderMap has " + jc.getTagHolderMap().size() + " entries.");
+                log.info("TagHolderMap has " + jc.getThreadScriptDataMap().size() + " entries.");
                 log.info("Memory test after " + i + " runs: "
                         + (middle - start));
             }
