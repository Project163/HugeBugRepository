diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 0eb65d78..aef9eef6 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -27,6 +27,10 @@
   <body>
     <release version="1.9" date="in SVN"
       description="TBD">
+      <action dev="oheger" type="fix" issue="CONFIGURATION-487">
+        DataConfiguration.get() now also works with String properties and if no
+        data type conversion is required.
+      </action>
       <action dev="oheger" type="fix" issue="CONFIGURATION-481">
         Variable substitution in configuration sources declared in a definition
         file for DefaultConfigurationBuilder now works across multiple sources.
diff --git a/src/main/java/org/apache/commons/configuration/PropertyConverter.java b/src/main/java/org/apache/commons/configuration/PropertyConverter.java
index 52de00de..6f052319 100644
--- a/src/main/java/org/apache/commons/configuration/PropertyConverter.java
+++ b/src/main/java/org/apache/commons/configuration/PropertyConverter.java
@@ -97,6 +97,11 @@ public final class PropertyConverter
      */
     static Object to(Class<?> cls, Object value, Object[] params) throws ConversionException
     {
+        if (cls.isInstance(value))
+        {
+            return value; // no conversion needed
+        }
+
         if (Boolean.class.equals(cls) || Boolean.TYPE.equals(cls))
         {
             return toBoolean(value);
diff --git a/src/test/java/org/apache/commons/configuration/TestDataConfiguration.java b/src/test/java/org/apache/commons/configuration/TestDataConfiguration.java
index a592a72b..405aca5d 100644
--- a/src/test/java/org/apache/commons/configuration/TestDataConfiguration.java
+++ b/src/test/java/org/apache/commons/configuration/TestDataConfiguration.java
@@ -2386,4 +2386,17 @@ public class TestDataConfiguration
             // expected
         }
     }
+
+    /**
+     * Tests whether a string property can be obtained through get() if no type
+     * conversion is required.
+     */
+    @Test
+    public void testGetPropertyWithoutConversion()
+    {
+        String key = "test.str";
+        String value = "someTestValue";
+        conf.addProperty(key, value);
+        assertEquals("Wrong result", value, conf.get(String.class, key));
+    }
 }
diff --git a/src/test/java/org/apache/commons/configuration/TestPropertyConverter.java b/src/test/java/org/apache/commons/configuration/TestPropertyConverter.java
index 3ed9ffa4..0f3b48c1 100644
--- a/src/test/java/org/apache/commons/configuration/TestPropertyConverter.java
+++ b/src/test/java/org/apache/commons/configuration/TestPropertyConverter.java
@@ -338,4 +338,15 @@ public class TestPropertyConverter
     {
         PropertyConverter.toEnum(Integer.valueOf(-1), ENUM_CLASS);
     }
+
+    /**
+     * Tests a trivial conversion: the value has already the desired type.
+     */
+    @Test
+    public void testToNoConversionNeeded()
+    {
+        String value = "testValue";
+        assertEquals("Wrong conversion result", value,
+                PropertyConverter.to(String.class, value, null));
+    }
 }
