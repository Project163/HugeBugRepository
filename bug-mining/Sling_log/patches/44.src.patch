diff --git a/src/main/java/org/apache/sling/commons/log/logback/internal/LogConfigManager.java b/src/main/java/org/apache/sling/commons/log/logback/internal/LogConfigManager.java
index e4bf32b..61c3295 100644
--- a/src/main/java/org/apache/sling/commons/log/logback/internal/LogConfigManager.java
+++ b/src/main/java/org/apache/sling/commons/log/logback/internal/LogConfigManager.java
@@ -232,10 +232,6 @@ public class LogConfigManager implements LogbackResetListener, LogConfig.LogWrit
         return configByPid.values();
     }
 
-    public Iterable<LogWriter> getLogWriters(){
-        return writerByFileName.values();
-    }
-
     public Appender<ILoggingEvent> getDefaultAppender() {
         OutputStreamAppender<ILoggingEvent> appender = new ConsoleAppender<ILoggingEvent>();
         appender.setName(DEFAULT_CONSOLE_APPENDER_NAME);
@@ -555,6 +551,12 @@ public class LogConfigManager implements LogbackResetListener, LogConfig.LogWrit
                 pattern = LogConfigManager.LOG_PATTERN_DEFAULT;
             }
 
+            //Map empty fileName to console logger
+            //null fileName is for scenario where intention is just to change the log level
+            if (fileName != null && fileName.trim().length() == 0) {
+                fileName = LogWriter.FILE_NAME_CONSOLE;
+            }
+
             // FileName being just null means that we want to change the
             // LogLevel
             if (fileName != null && !isConsole(fileName)) {
