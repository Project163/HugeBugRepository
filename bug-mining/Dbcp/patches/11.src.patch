diff --git a/src/java/org/apache/commons/dbcp/DelegatingConnection.java b/src/java/org/apache/commons/dbcp/DelegatingConnection.java
index 54a6e73d..66efdd98 100644
--- a/src/java/org/apache/commons/dbcp/DelegatingConnection.java
+++ b/src/java/org/apache/commons/dbcp/DelegatingConnection.java
@@ -120,15 +120,30 @@ public class DelegatingConnection extends AbandonedTrace
     public Connection getDelegate() {
         return _conn;
     }
+    
+    public boolean innermostDelegateEquals(Connection c) {
+        Connection innerCon = getInnermostDelegate();
+        if (innerCon == null) {
+            return c == null;
+        } else {
+            return innerCon.equals(c);
+        }
+    }
 
     public boolean equals(Object obj) {
+        if (obj == null) {
+            return false;
+        }
+        if (obj == this) {
+            return true;
+        }
         Connection delegate = getInnermostDelegate();
         if (delegate == null) {
             return false;
         }
-        if (obj instanceof DelegatingConnection) {
+        if (obj instanceof DelegatingConnection) {    
             DelegatingConnection c = (DelegatingConnection) obj;
-            return delegate.equals(c.getInnermostDelegate());
+            return c.innermostDelegateEquals(delegate);
         }
         else {
             return delegate.equals(obj);
diff --git a/src/java/org/apache/commons/dbcp/PoolingDataSource.java b/src/java/org/apache/commons/dbcp/PoolingDataSource.java
index 11a3773f..4c760126 100644
--- a/src/java/org/apache/commons/dbcp/PoolingDataSource.java
+++ b/src/java/org/apache/commons/dbcp/PoolingDataSource.java
@@ -209,25 +209,15 @@ public class PoolingDataSource implements DataSource {
             return delegate.createStatement(resultSetType, resultSetConcurrency);
         }
 
-        
-        public boolean equals(Object obj) {
-            if (obj == null) {
-                return false;
-            }
-            if (obj == this) {
-                return true;
-            }
-            if (delegate == null) {
-                return false;
-            }
-            if (obj instanceof PoolGuardConnectionWrapper) {
-                PoolGuardConnectionWrapper w = (PoolGuardConnectionWrapper) obj;
-                return delegate.equals(w.delegate);
+        public boolean innermostDelegateEquals(Connection c) {
+            Connection innerCon = super.getInnermostDelegate();
+            if (innerCon == null) {
+                return c == null;
             } else {
-                return delegate.equals(obj);
+                return innerCon.equals(c);
             }
         }
-
+        
         public boolean getAutoCommit() throws SQLException {
             checkOpen();
             return delegate.getAutoCommit();
@@ -264,6 +254,27 @@ public class PoolingDataSource implements DataSource {
             }
             return delegate.hashCode();
         }
+        
+        public boolean equals(Object obj) {
+            if (obj == null) {
+                return false;
+            }
+            if (obj == this) {
+                return true;
+            }
+            // Use superclass accessor to skip access test
+            Connection delegate = super.getInnermostDelegate();
+            if (delegate == null) {
+                return false;
+            }
+            if (obj instanceof DelegatingConnection) {    
+                DelegatingConnection c = (DelegatingConnection) obj;
+                return c.innermostDelegateEquals(delegate);
+            }
+            else {
+                return delegate.equals(obj);
+            }
+        }
 
         public boolean isReadOnly() throws SQLException {
             checkOpen();
diff --git a/src/test/org/apache/commons/dbcp/TestDelegatingConnection.java b/src/test/org/apache/commons/dbcp/TestDelegatingConnection.java
index 327e0563..4c43ebfa 100644
--- a/src/test/org/apache/commons/dbcp/TestDelegatingConnection.java
+++ b/src/test/org/apache/commons/dbcp/TestDelegatingConnection.java
@@ -77,6 +77,7 @@ public class TestDelegatingConnection extends TestCase {
         assertTrue(!conn.equals(null));
         assertTrue(conn.equals(conn2));
         assertTrue(!conn.equals(conn3));
+        assertTrue(conn.equals(conn));
     }
     
     public void testCheckOpen() throws Exception {
diff --git a/src/test/org/apache/commons/dbcp/TestPoolingDataSource.java b/src/test/org/apache/commons/dbcp/TestPoolingDataSource.java
index 5278e5ed..6fd28065 100755
--- a/src/test/org/apache/commons/dbcp/TestPoolingDataSource.java
+++ b/src/test/org/apache/commons/dbcp/TestPoolingDataSource.java
@@ -143,6 +143,18 @@ public class TestPoolingDataSource extends TestConnectionPool {
         con1.close();
     }
     
+    public void testestPoolGuardConnectionWrapperEqualInnermost() throws Exception {
+        ds.setAccessToUnderlyingConnectionAllowed(true);
+        DelegatingConnection con = (DelegatingConnection) ds.getConnection();
+        Connection inner = con.getInnermostDelegate();
+        ds.setAccessToUnderlyingConnectionAllowed(false);
+        DelegatingConnection con2 = new DelegatingConnection(inner);
+        assertTrue(con2.equals(con));
+        assertTrue(con.innermostDelegateEquals(con2.getInnermostDelegate()));
+        assertTrue(con2.innermostDelegateEquals(inner));
+        assertTrue(con.equals(con2));
+    }
+    
     /** Factory to return non-delegating connections for DBCP-198 test */
     private class NonDelegatingPoolableConnectionFactory extends
         PoolableConnectionFactory {
