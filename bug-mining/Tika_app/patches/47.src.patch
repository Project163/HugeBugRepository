diff --git a/tika-app/src/main/java/org/apache/tika/cli/BatchCommandLineBuilder.java b/tika-app/src/main/java/org/apache/tika/cli/BatchCommandLineBuilder.java
index c3039cd72..b6528d493 100644
--- a/tika-app/src/main/java/org/apache/tika/cli/BatchCommandLineBuilder.java
+++ b/tika-app/src/main/java/org/apache/tika/cli/BatchCommandLineBuilder.java
@@ -69,7 +69,7 @@ class BatchCommandLineBuilder {
         }
         //use the log4j config file inside the app /resources/log4j2_batch_process.properties
         if (!hasLog4j) {
-            jvmOpts.put("-Dlog4j.configuration=log4j_batch_process.properties", "");
+            jvmOpts.put("-Dlog4j.configurationFile=log4j2_batch_process.properties", "");
         }
         //now build the full command line
         List<String> fullCommand = new ArrayList<>();
@@ -88,6 +88,7 @@ class BatchCommandLineBuilder {
         if (!foundHeadlessOption) {
             fullCommand.add("-Djava.awt.headless=true");
         }
+
         fullCommand.add("org.apache.tika.batch.fs.FSBatchProcessCLI");
         //now add the process commands
         for (Map.Entry<String, String> e : processArgs.entrySet()) {
@@ -172,6 +173,8 @@ class BatchCommandLineBuilder {
             if (arg.startsWith("--config=")) {
                 String configPath = arg.substring("--config=".length());
                 map.put("-c", configPath);
+                //now remove --config=x.config from the map :)
+                map.remove(arg);
                 break;
             }
         }
diff --git a/tika-app/src/test/java/org/apache/tika/cli/TikaCLIBatchIntegrationTest.java b/tika-app/src/test/java/org/apache/tika/cli/TikaCLIBatchIntegrationTest.java
index 6870d451d..79c31caa9 100644
--- a/tika-app/src/test/java/org/apache/tika/cli/TikaCLIBatchIntegrationTest.java
+++ b/tika-app/src/test/java/org/apache/tika/cli/TikaCLIBatchIntegrationTest.java
@@ -30,6 +30,7 @@ import java.io.Reader;
 import java.nio.file.Files;
 import java.nio.file.Path;
 import java.nio.file.Paths;
+import java.nio.file.StandardCopyOption;
 import java.util.List;
 
 import org.apache.commons.io.FileUtils;
@@ -52,13 +53,15 @@ public class TikaCLIBatchIntegrationTest {
     private OutputStream out = null;
     private OutputStream err = null;
     private ByteArrayOutputStream outBuffer = null;
+    private ByteArrayOutputStream errBuffer = null;
+    private Path configFile = null;
 
     @Before
     public void setup() throws Exception {
         tempOutputDir = Files.createTempDirectory("tika-cli-test-batch-");
         outBuffer = new ByteArrayOutputStream();
         PrintStream outWriter = new PrintStream(outBuffer, true, UTF_8.name());
-        ByteArrayOutputStream errBuffer = new ByteArrayOutputStream();
+        errBuffer = new ByteArrayOutputStream();
         PrintStream errWriter = new PrintStream(errBuffer, true, UTF_8.name());
         out = System.out;
         err = System.err;
@@ -67,7 +70,10 @@ public class TikaCLIBatchIntegrationTest {
         testInputDirForCommandLine = testInputDir.toAbsolutePath().toString();
         tempOutputDirForCommandLine = tempOutputDir.toAbsolutePath().toString();
         customBatchLogging = tempOutputDir.resolve(propsFileName);
+        configFile = Files.createTempFile("tika-app-batch-", ".xml");
         Files.copy(this.getClass().getResourceAsStream("/" + propsFileName), customBatchLogging);
+        Files.copy(this.getClass().getResourceAsStream("/test-data/tika-config1.xml"),
+                configFile, StandardCopyOption.REPLACE_EXISTING);
     }
 
     @After
@@ -76,17 +82,27 @@ public class TikaCLIBatchIntegrationTest {
         System.setErr(new PrintStream(err, true, UTF_8.name()));
         //TODO: refactor to use our deleteDirectory with straight path
         FileUtils.deleteDirectory(tempOutputDir.toFile());
+        Files.delete(configFile);
     }
 
     @Test
     public void testSimplestBatchIntegration() throws Exception {
         String[] params = {testInputDirForCommandLine, tempOutputDirForCommandLine};
         TikaCLI.main(params);
-
         assertFileExists(tempOutputDir.resolve("bad_xml.xml.xml"));
         assertFileExists(tempOutputDir.resolve("coffee.xls.xml"));
     }
 
+    @Test
+    public void testTikaConfig() throws Exception {
+        String[] params = {
+                "-i", testInputDirForCommandLine,
+                "-o", tempOutputDirForCommandLine,
+                "--config="+configFile.toAbsolutePath().toString()};
+        TikaCLI.main(params);
+        assertFileExists(tempOutputDir.resolve("bad_xml.xml.xml"));
+        assertFileExists(tempOutputDir.resolve("coffee.xls.xml"));
+    }
     @Test
     public void testBasicBatchIntegration() throws Exception {
         String[] params = {"-i", testInputDirForCommandLine, "-o", tempOutputDirForCommandLine,
diff --git a/tika-app/src/test/resources/test-data/tika-config1.xml b/tika-app/src/test/resources/test-data/tika-config1.xml
index dd38aa870..ff03407bc 100644
--- a/tika-app/src/test/resources/test-data/tika-config1.xml
+++ b/tika-app/src/test/resources/test-data/tika-config1.xml
@@ -1,7 +1,6 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no"?>
 <properties>
   <parsers>
-
     <parser class="org.apache.tika.parser.html.HtmlParser">
       <mime>application/vnd.wap.xhtml+xml</mime>
       <mime>application/x-asp</mime>
