diff --git a/src/main/java/org/apache/commons/configuration/BaseHierarchicalConfiguration.java b/src/main/java/org/apache/commons/configuration/BaseHierarchicalConfiguration.java
index 4ebae665..1741f930 100644
--- a/src/main/java/org/apache/commons/configuration/BaseHierarchicalConfiguration.java
+++ b/src/main/java/org/apache/commons/configuration/BaseHierarchicalConfiguration.java
@@ -42,7 +42,6 @@ import org.apache.commons.configuration.tree.ConfigurationNode;
 import org.apache.commons.configuration.tree.ConfigurationNodeVisitorAdapter;
 import org.apache.commons.configuration.tree.DefaultConfigurationNode;
 import org.apache.commons.configuration.tree.DefaultExpressionEngine;
-import org.apache.commons.configuration.tree.DefaultExpressionEngineSymbols;
 import org.apache.commons.configuration.tree.ExpressionEngine;
 import org.apache.commons.configuration.tree.NodeAddData;
 
@@ -173,9 +172,6 @@ public class BaseHierarchicalConfiguration extends AbstractConfiguration
      */
     private static final long serialVersionUID = 3373812230395363192L;
 
-    /** Stores the default expression engine to be used for new objects.*/
-    private static ExpressionEngine defaultExpressionEngine;
-
     /** Stores the root configuration node.*/
     private ConfigurationNode rootNode;
 
@@ -315,40 +311,6 @@ public class BaseHierarchicalConfiguration extends AbstractConfiguration
         return getRootNode().getName();
     }
 
-    /**
-     * Returns the default expression engine.
-     *
-     * @return the default expression engine
-     * @since 1.3
-     */
-    public static synchronized ExpressionEngine getDefaultExpressionEngine()
-    {
-        if (defaultExpressionEngine == null)
-        {
-            defaultExpressionEngine = new DefaultExpressionEngine(DefaultExpressionEngineSymbols.DEFAULT_SYMBOLS);
-        }
-        return defaultExpressionEngine;
-    }
-
-    /**
-     * Sets the default expression engine. This expression engine will be used
-     * if no specific engine was set for an instance. It is shared between all
-     * hierarchical configuration instances. So modifying its properties will
-     * impact all instances, for which no specific engine is set.
-     *
-     * @param engine the new default expression engine
-     * @since 1.3
-     */
-    public static synchronized void setDefaultExpressionEngine(ExpressionEngine engine)
-    {
-        if (engine == null)
-        {
-            throw new IllegalArgumentException(
-                    "Default expression engine must not be null!");
-        }
-        defaultExpressionEngine = engine;
-    }
-
     /**
      * Returns the expression engine used by this configuration. This method
      * will never return <b>null</b>; if no specific expression engine was set,
@@ -360,7 +322,7 @@ public class BaseHierarchicalConfiguration extends AbstractConfiguration
     public ExpressionEngine getExpressionEngine()
     {
         return (expressionEngine != null) ? expressionEngine
-                : getDefaultExpressionEngine();
+                : DefaultExpressionEngine.INSTANCE;
     }
 
     /**
diff --git a/src/test/java/org/apache/commons/configuration/TestHierarchicalConfiguration.java b/src/test/java/org/apache/commons/configuration/TestHierarchicalConfiguration.java
index ed87812c..4f069421 100644
--- a/src/test/java/org/apache/commons/configuration/TestHierarchicalConfiguration.java
+++ b/src/test/java/org/apache/commons/configuration/TestHierarchicalConfiguration.java
@@ -855,37 +855,13 @@ public class TestHierarchicalConfiguration
     {
         config.setExpressionEngine(null);
         assertNotNull("Expression engine is null", config.getExpressionEngine());
-        assertSame("Default engine is not used", BaseHierarchicalConfiguration
-                .getDefaultExpressionEngine(), config.getExpressionEngine());
+        assertSame("Default engine is not used",
+                DefaultExpressionEngine.INSTANCE, config.getExpressionEngine());
 
         config.setExpressionEngine(createAlternativeExpressionEngine());
         checkAlternativeSyntax();
     }
 
-    /**
-     * Tests setting the default expression engine. This should impact all
-     * configuration instances that do not have their own engine.
-     */
-    @Test
-    public void testSetDefaultExpressionEngine()
-    {
-        ExpressionEngine engineOld = BaseHierarchicalConfiguration.getDefaultExpressionEngine();
-        BaseHierarchicalConfiguration
-                .setDefaultExpressionEngine(createAlternativeExpressionEngine());
-        checkAlternativeSyntax();
-        BaseHierarchicalConfiguration.setDefaultExpressionEngine(engineOld);
-    }
-
-    /**
-     * Tests setting the default expression engine to null. This should not be
-     * allowed.
-     */
-    @Test(expected = IllegalArgumentException.class)
-    public void testSetDefaultExpressionEngineNull()
-    {
-        BaseHierarchicalConfiguration.setDefaultExpressionEngine(null);
-    }
-
     /**
      * Tests the copy constructor.
      */
