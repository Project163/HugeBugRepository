diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 0c7dcab..3a6ccb1 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -58,6 +58,10 @@
       <action issue="DAEMON-392" type="fix" dev="ggregory" due-to="Daniel Hofmann">
         Undefined behaviour in registry.c dwRegKey = dwRegKey++
       </action>
+      <action issue="DAEMON-396" type="fix" dev="markt" due-to="Gerwin">
+        Fix a bug that meant a value provided for LibraryPath replaced the value
+        of the PATH environment variable rather than prepended to it.
+      </action>
     </release>
     <release version="1.1.0" date="2017-11-15" description="Feature and bug fix release">
       <action issue="DAEMON-368" type="add" dev="ggregory">
diff --git a/src/native/windows/src/utils.c b/src/native/windows/src/utils.c
index b600917..2e0d2bf 100644
--- a/src/native/windows/src/utils.c
+++ b/src/native/windows/src/utils.c
@@ -60,17 +60,17 @@ BOOL apxAddToPathW(APXHANDLE hPool, LPCWSTR szAdd)
     LPWSTR wsAdd;
     DWORD  rc;
     DWORD  al;
-    
+
     rc = GetEnvironmentVariableW(L"PATH", NULL, 0);
     if (rc == 0 && GetLastError() == ERROR_ENVVAR_NOT_FOUND)
         return FALSE;
-    al = lstrlenW(szAdd) + 6;
-    if (!(wsAdd = apxPoolAlloc(hPool, (al + rc + 1) * sizeof(WCHAR))))
+    al = 5 + lstrlenW(szAdd) + 1;
+    if (!(wsAdd = apxPoolAlloc(hPool, (al + rc) * sizeof(WCHAR))))
         return FALSE;
-    lstrcpyW(wsAdd, L"PATH=");        
-    lstrcatW(wsAdd, szAdd);        
-    lstrcatW(wsAdd, L";");        
-    if (!GetEnvironmentVariableW(L"PATH", wsAdd + al, rc - al)) {
+    lstrcpyW(wsAdd, L"PATH=");
+    lstrcatW(wsAdd, szAdd);
+    lstrcatW(wsAdd, L";");
+    if (GetEnvironmentVariableW(L"PATH", wsAdd + al, rc) != rc - 1) {
         apxLogWrite(APXLOG_MARK_SYSERR);
         apxFree(wsAdd);
         return FALSE;
@@ -346,7 +346,7 @@ apxStrCharReplaceA(LPSTR szString, CHAR chReplace, CHAR chReplaceWith)
 {
   LPSTR p = szString;
   LPSTR q = szString;
-  
+
   if (IS_EMPTY_STRING(szString))
     return;
   while (*p) {
