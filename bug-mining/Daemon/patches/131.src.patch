diff --git a/src/native/windows/apps/prunsrv/prunsrv.c b/src/native/windows/apps/prunsrv/prunsrv.c
index 771b87f..70df5d1 100644
--- a/src/native/windows/apps/prunsrv/prunsrv.c
+++ b/src/native/windows/apps/prunsrv/prunsrv.c
@@ -322,8 +322,14 @@ static BOOL redirectStdStreams(APX_STDWRAP *lpWrapper, LPAPXCMDLINE lpCmdline)
     if (GetConsoleWindow() == NULL) {
         HWND hc;
         AllocConsole();
-        if ((hc = GetConsoleWindow()) != NULL)
+        if ((hc = GetConsoleWindow()) != NULL) {
+            FILE* fout = 0;
+            FILE* ferr = 0;
+            freopen_s(&fout, "CONOUT$", "w", stdout);
+            freopen_s(&ferr, "CONOUT$", "w", stderr);
             ShowWindow(hc, SW_HIDE);
+            apxLogWrite(APXLOG_MARK_INFO "redirectStdStreams() stdout and stderr reassigned");
+        }
     }
     /* redirect to file or console */
     if (lpWrapper->szStdOutFilename) {
@@ -347,9 +353,11 @@ static BOOL redirectStdStreams(APX_STDWRAP *lpWrapper, LPAPXCMDLINE lpCmdline)
         if ((lpWrapper->fpStdOutFile = _wfsopen(lpWrapper->szStdOutFilename,
                                                L"a",
                                                _SH_DENYNO))) {
-            _dup2(_fileno(lpWrapper->fpStdOutFile), 1);
-            *stdout = *lpWrapper->fpStdOutFile;
+            int ret = _dup2(_fileno(lpWrapper->fpStdOutFile), (_fileno)(stdout));
+            if (ret == -1)
+                apxLogWrite(APXLOG_MARK_ERROR "redirectStdStreams() _dup2 failed on stdout");
             setvbuf(stdout, NULL, _IONBF, 0);
+            setvbuf(lpWrapper->fpStdOutFile, NULL, _IONBF, 0);
         }
         else {
             lpWrapper->szStdOutFilename = NULL;
@@ -373,18 +381,23 @@ static BOOL redirectStdStreams(APX_STDWRAP *lpWrapper, LPAPXCMDLINE lpCmdline)
         if ((lpWrapper->fpStdErrFile = _wfsopen(lpWrapper->szStdErrFilename,
                                                L"a",
                                                _SH_DENYNO))) {
-            _dup2(_fileno(lpWrapper->fpStdErrFile), 2);
-            *stderr = *lpWrapper->fpStdErrFile;
+            int ret = _dup2(_fileno(lpWrapper->fpStdErrFile), (_fileno)(stderr));
+            if (ret == -1)
+                apxLogWrite(APXLOG_MARK_ERROR "redirectStdStreams() _dup2 failed to stderr");
             setvbuf(stderr, NULL, _IONBF, 0);
+            setvbuf(lpWrapper->fpStdErrFile, NULL, _IONBF, 0);
         }
         else {
             lpWrapper->szStdOutFilename = NULL;
         }
     }
     else if (lpWrapper->fpStdOutFile) {
-        _dup2(_fileno(lpWrapper->fpStdOutFile), 2);
-        *stderr = *lpWrapper->fpStdOutFile;
+         /* redirect stderr to stdout file */
+         int ret = _dup2(_fileno(lpWrapper->fpStdOutFile), (_fileno)(stderr));
+         if (ret == -1)
+             apxLogWrite(APXLOG_MARK_ERROR "redirectStdStreams() _dup2 failed to stderr (redirect)");
          setvbuf(stderr, NULL, _IONBF, 0);
+         setvbuf(lpWrapper->fpStdOutFile, NULL, _IONBF, 0);
     }
     return TRUE;
 }
@@ -2219,6 +2232,8 @@ void __cdecl main(int argc, char **argv)
                         "Apache Commons Daemon procrun stderr initialized.\n",
                         t.wYear, t.wMonth, t.wDay,
                         t.wHour, t.wMinute, t.wSecond);
+        fflush(stdout);
+	fflush(stderr);
     }
 
     if (lpCmdline->dwCmdIndex > 2 && lpCmdline->dwCmdIndex < 8) {
diff --git a/src/native/windows/apps/prunsrv/test/scripts/cleanstd.bat b/src/native/windows/apps/prunsrv/test/scripts/cleanstd.bat
new file mode 100644
index 0000000..25d34fb
--- /dev/null
+++ b/src/native/windows/apps/prunsrv/test/scripts/cleanstd.bat
@@ -0,0 +1,29 @@
+@ECHO OFF
+rem Licensed to the Apache Software Foundation (ASF) under one or more
+rem contributor license agreements.  See the NOTICE file distributed with
+rem this work for additional information regarding copyright ownership.
+rem The ASF licenses this file to You under the Apache License, Version 2.0
+rem (the "License"); you may not use this file except in compliance with
+rem the License.  You may obtain a copy of the License at
+rem
+rem     http://www.apache.org/licenses/LICENSE-2.0
+rem
+rem Unless required by applicable law or agreed to in writing, software
+rem distributed under the License is distributed on an "AS IS" BASIS,
+rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+rem See the License for the specific language governing permissions and
+rem limitations under the License.
+
+rem the files:
+rem rw-r--r-- 1 Administrator None      0 Apr 28 00:55 testservice-stderr.2025-04-28.log
+rem rw-r--r-- 1 Administrator None      0 Apr 28 00:55 testservice-stdout.2025-04-28.log
+rem needs to be removed between tests.
+
+SET "full_date=%date:~4,10%"
+SET "month=%full_date:~0,2%"
+SET "day=%full_date:~3,2%"
+SET "year=%full_date:~6,4%"
+
+del "testservice-stdout.%year%-%month%-%day%.log" 2>nul
+
+del "testservice-stderr.%year%-%month%-%day%.log" 2>nul
diff --git a/src/native/windows/apps/prunsrv/test/scripts/isemptystd.bat b/src/native/windows/apps/prunsrv/test/scripts/isemptystd.bat
new file mode 100644
index 0000000..cef90d1
--- /dev/null
+++ b/src/native/windows/apps/prunsrv/test/scripts/isemptystd.bat
@@ -0,0 +1,51 @@
+@ECHO OFF
+rem Licensed to the Apache Software Foundation (ASF) under one or more
+rem contributor license agreements.  See the NOTICE file distributed with
+rem this work for additional information regarding copyright ownership.
+rem The ASF licenses this file to You under the Apache License, Version 2.0
+rem (the "License"); you may not use this file except in compliance with
+rem the License.  You may obtain a copy of the License at
+rem
+rem     http://www.apache.org/licenses/LICENSE-2.0
+rem
+rem Unless required by applicable law or agreed to in writing, software
+rem distributed under the License is distributed on an "AS IS" BASIS,
+rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+rem See the License for the specific language governing permissions and
+rem limitations under the License.
+
+rem the files:
+rem rw-r--r-- 1 Administrator None      0 Apr 28 00:55 testservice-stderr.2025-04-28.log
+rem rw-r--r-- 1 Administrator None      0 Apr 28 00:55 testservice-stdout.2025-04-28.log
+rem should NOT be empty
+
+SET "full_date=%date:~4,10%"
+SET "month=%full_date:~0,2%"
+SET "day=%full_date:~3,2%"
+SET "year=%full_date:~6,4%"
+CALL :TestFile "testservice-stdout.%year%-%month%-%day%.log"
+IF %ERRORLEVEL% EQU 1 (
+  echo "FAILED: stdout file empty or not existing"
+  exit 1
+)
+CALL :TestFile "testservice-stderr.%year%-%month%-%day%.log"
+IF %ERRORLEVEL% EQU 1 (
+  echo "FAILED stderr file empty or not existing"
+  exit 1
+)
+
+goto :eof
+
+:TestFile
+SET "filepath=%~1" 
+IF NOT EXIST "%filepath%" (
+  echo "file %filepath% don't exist"
+  exit /b 1
+)
+echo %~z1
+If %~z1 EQU 0 (
+  echo "file %filepath% is empty"
+  Exit /B 1
+)
+echo "file %filepath% is NOT empty"
+Exit /B 0
diff --git a/src/native/windows/apps/prunsrv/test/scripts/test.bat b/src/native/windows/apps/prunsrv/test/scripts/test.bat
index dc2a351..2335a01 100644
--- a/src/native/windows/apps/prunsrv/test/scripts/test.bat
+++ b/src/native/windows/apps/prunsrv/test/scripts/test.bat
@@ -49,8 +49,71 @@ if %errorlevel% equ 9 (
     exit 1
   )
 )
+call cleanstd
 echo "cleaned"
 
+rem install the service to test DAEMON-383
+echo ""
+call mybanner "install java service test DAEMON-383"
+echo ""
+%myserv% //IS//TestService --Description="Procrun tests" --DisplayName="Test Service" --Install=%myserv% --StartMode=exe --StartPath=%mypath% --StartImage=cmd.exe ++StartParams="/c java  -cp %myjar% org.apache.commons.daemon.ProcrunDaemon" --StopMode=exe --StopPath=%mypath% --StopImage=cmd.exe ++StopParams="/c java  -cp %myjar% org.apache.commons.daemon.ProcrunDaemon 1" --LogPath=%mypath% --LogLevel=Debug --StdOutput=auto --StdError=auto
+if %errorlevel% neq 0 (
+  echo "install failed"
+  exit 1
+)
+
+call startservice
+call testservice
+
+rem ask the service to write in stdoout and stderr
+java  -cp %myjar% org.apache.commons.daemon.ProcrunDaemon 5
+java  -cp %myjar% org.apache.commons.daemon.ProcrunDaemon 6
+
+rem the files:
+rem rw-r--r-- 1 Administrator None      0 Apr 28 00:55 testservice-stderr.2025-04-28.log
+rem rw-r--r-- 1 Administrator None      0 Apr 28 00:55 testservice-stdout.2025-04-28.log
+rem should NOT be empty
+call isemptystd.bat
+
+call mybanner stopping
+%myserv% //SS//TestService
+if %errorlevel% neq 0 (
+  echo "No timeout No wait stop failed"
+  %myserv% //PS//TestService
+  exit 1
+)
+call deleteservice
+call cleanstd
+
+echo ""
+call mybanner "install jvm service test DAEMON-383"
+echo ""
+%myserv% //IS//TestService --Description="Procrun jvm tests" --DisplayName="Test Service" --Install=%myserv% --JavaHome %JAVA_HOME% --StartMode=jvm --StartPath=%mypath% --StartClass=org.apache.commons.daemon.ProcrunDaemon --StartMethod=start ++StartParams=procstart --StopMode=jvm --StopClass=org.apache.commons.daemon.ProcrunDaemon --StopMethod=stop ++StopParams 1 --Classpath=%myjar% --LogPath=%mypath% --LogLevel=Debug --StdOutput=auto --StdError=auto
+if %errorlevel% neq 0 (
+  echo "install failed"
+  exit 1
+)
+
+call startservice
+call testservice
+
+rem ask the service to write in stdoout and stderr
+java  -cp %myjar% org.apache.commons.daemon.ProcrunDaemon 5
+java  -cp %myjar% org.apache.commons.daemon.ProcrunDaemon 6
+
+rem check out stdout and stderr files
+call isemptystd.bat
+
+call mybanner stopping
+%myserv% //SS//TestService
+if %errorlevel% neq 0 (
+  echo "No timeout No wait stop failed"
+  %myserv% //PS//TestService
+  exit 1
+)
+call deleteservice
+call cleanstd
+
 rem install service with notimeout and no wait
 echo ""
 call mybanner "install service with no timeout and use no waitiing in the test program"
diff --git a/src/native/windows/apps/prunsrv/test/scripts/waituntilstop.bat b/src/native/windows/apps/prunsrv/test/scripts/waituntilstop.bat
index fd41a0c..d497817 100644
--- a/src/native/windows/apps/prunsrv/test/scripts/waituntilstop.bat
+++ b/src/native/windows/apps/prunsrv/test/scripts/waituntilstop.bat
@@ -14,13 +14,26 @@ rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 rem See the License for the specific language governing permissions and
 rem limitations under the License.
 
+SET result=0
+SETLOCAL ENABLEDELAYEDEXPANSION
 for /l %%x in (1, 1, 100) do (
   echo "testing service %%x"
-  java -cp %myjar% org.apache.commons.daemon.ProcrunDaemon 1
-  > nul find "Exception" client.txt && (
-    echo "exception"
-    exit /b 0
+  java -cp %myjar% org.apache.commons.daemon.ProcrunDaemon 1 > nul 2>&1
+  findstr Exception client.txt > nul 2>&1
+  IF !ERRORLEVEL! EQU 0 (
+    echo "Found"
+    SET result=1
+    goto :EndLoop
+  ) ELSE (
+    echo "NOT Found"
   )
   timeout /t 10 > nul
 )
+
+:EndLoop
+ENDLOCAL
+echo "Done result: %result%"
+IF %result% EQU 0 (
+  exit /b 0
+)
 exit /b 1
diff --git a/src/test/java/org/apache/commons/daemon/ProcrunDaemon.java b/src/test/java/org/apache/commons/daemon/ProcrunDaemon.java
index b939659..b7a83f6 100644
--- a/src/test/java/org/apache/commons/daemon/ProcrunDaemon.java
+++ b/src/test/java/org/apache/commons/daemon/ProcrunDaemon.java
@@ -77,6 +77,19 @@ class ProcrunDaemon {
                         System.out.println(ex);
                     }
                     System.exit(0);
+                } else if (buf[0] == '5') {
+                    System.out.println("5");
+                    /* Note that System.out has been redirected to client.txt in main() */
+                    PrintStream myout = System.out;
+                    System.setOut(originalStdout);
+                    System.out.println("Using System.out");
+                    System.out.println("5");
+                    System.out.println("Back to redirection");
+                    System.setOut(myout);
+                } else if (buf[0] == '6') {
+                    System.out.println("6");
+                    System.err.println("Using System.err");
+                    System.err.println("6");
                 }
             }
             System.out.println("num " + num);
@@ -129,8 +142,11 @@ class ProcrunDaemon {
         System.exit(0);
     }
 
+    static PrintStream originalStdout;
+
     /* client server test for procrun */
     public static void main(String[] argv) {
+        originalStdout = System.out;
         if (argv.length != 0) {
             /* Just send the command to the server */
             try {
