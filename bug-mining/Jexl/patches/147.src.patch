diff --git a/src/main/java/org/apache/commons/jexl3/internal/TemplateDebugger.java b/src/main/java/org/apache/commons/jexl3/internal/TemplateDebugger.java
index 6ff3d686..d5791f92 100644
--- a/src/main/java/org/apache/commons/jexl3/internal/TemplateDebugger.java
+++ b/src/main/java/org/apache/commons/jexl3/internal/TemplateDebugger.java
@@ -104,9 +104,9 @@ public class TemplateDebugger extends Debugger {
 
     @Override
     protected Object visit(ASTBlock node, Object data) {
-        // if not really a template, use super impl
+        // if not really a template, must use super impl
         if (exprs == null) {
-            return super.visit(node, data);
+            return super.visit((ASTBlock) node, data);
         }
         // open the block
         builder.append('{');
@@ -138,8 +138,13 @@ public class TemplateDebugger extends Debugger {
 
     @Override
     protected Object acceptStatement(JexlNode child, Object data) {
+        // if not really a template, must use super impl
+        if (exprs == null) {
+            return super.acceptStatement(child, data);
+        }
         TemplateExpression te = getPrintStatement(child);
         if (te != null) {
+            // if statement is a jexl:print(...), may need to prepend '\n'
             newJxltLine();
             return visit(te, data);
         } else {
diff --git a/src/test/java/org/apache/commons/jexl3/JXLTTest.java b/src/test/java/org/apache/commons/jexl3/JXLTTest.java
index 1ae1dbfd..664a0885 100644
--- a/src/test/java/org/apache/commons/jexl3/JXLTTest.java
+++ b/src/test/java/org/apache/commons/jexl3/JXLTTest.java
@@ -18,6 +18,8 @@ package org.apache.commons.jexl3;
 
 import org.apache.commons.jexl3.internal.TemplateDebugger;
 import org.apache.commons.jexl3.internal.TemplateScript;
+import org.apache.commons.jexl3.internal.Debugger;
+
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 
@@ -548,6 +550,22 @@ public class JXLTTest extends JexlTestCase {
         Assert.assertNotNull(refactored);
         Assert.assertEquals(test42, refactored);
     }
+    
+    @Test
+    public void testInheritedDebugger() throws Exception {
+        String src = "if ($A) { $B + 1; } else { $C - 2 }";
+        JexlEngine jexl = JXLT.getEngine();
+        JexlScript script = jexl.createScript(src);
+                
+        Debugger sd = new Debugger();
+        String rscript = sd.debug(script)? sd.toString() : null;
+        Assert.assertNotNull(rscript);
+        
+        TemplateDebugger td = new TemplateDebugger();
+        String refactored = td.debug(script)? td.toString() : null;
+        Assert.assertNotNull(refactored);
+        Assert.assertEquals(refactored, rscript);
+    }
 
     public static class FrobozWriter extends PrintWriter {
         public FrobozWriter(Writer w) {
