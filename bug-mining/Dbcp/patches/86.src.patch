diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 389d642e..4f5b532b 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -42,6 +42,9 @@ The <action> type attribute can be add,update,fix,remove.
      features as well as bug fixes and enhancements. Version 2.0.x supports JDBC
      4, so requires JDK 1.6.  Applications running under JDK 1.4-1.5 must use
      DBCP 1.3.x. Applications running under JDK 1.6 should use DBCP 2.0.x.">
+      <action issue="DBCP-322" dev="sebb" type="fix">
+        CPDSConnectionFactory.validateObject(Object) ignores Throwable.
+      </action>
       <action dev="markt" type="add">
         Provide a new option (cacheState) to cache current values of autoCommit
         and readOnly so database queries are not required for every call to the
diff --git a/src/java/org/apache/commons/dbcp2/BasicDataSource.java b/src/java/org/apache/commons/dbcp2/BasicDataSource.java
index a162f65a..bdfaea2d 100644
--- a/src/java/org/apache/commons/dbcp2/BasicDataSource.java
+++ b/src/java/org/apache/commons/dbcp2/BasicDataSource.java
@@ -1616,7 +1616,7 @@ public class BasicDataSource implements DataSource {
                             ).getContextClassLoader().loadClass(
                                     driverClassName);
                 }
-            } catch (Throwable t) {
+            } catch (Exception t) {
                 String message = "Cannot load JDBC driver class '" +
                     driverClassName + "'";
                 logWriter.println(message);
@@ -1638,7 +1638,7 @@ public class BasicDataSource implements DataSource {
                     throw new SQLException("No suitable driver", "08001"); 
                 }
             }
-        } catch (Throwable t) {
+        } catch (Exception t) {
             String message = "Cannot create JDBC driver of class '" +
                 (driverClassName != null ? driverClassName : "") +
                 "' for connect URL '" + url + "'";
diff --git a/src/java/org/apache/commons/dbcp2/datasources/CPDSConnectionFactory.java b/src/java/org/apache/commons/dbcp2/datasources/CPDSConnectionFactory.java
index 18828ff9..c55e3ff4 100644
--- a/src/java/org/apache/commons/dbcp2/datasources/CPDSConnectionFactory.java
+++ b/src/java/org/apache/commons/dbcp2/datasources/CPDSConnectionFactory.java
@@ -30,6 +30,7 @@ import javax.sql.ConnectionEventListener;
 import javax.sql.ConnectionPoolDataSource;
 import javax.sql.PooledConnection;
 
+import org.apache.commons.dbcp2.Utils;
 import org.apache.commons.pool2.ObjectPool;
 import org.apache.commons.pool2.PoolableObjectFactory;
 
@@ -195,27 +196,9 @@ class CPDSConnectionFactory
             } catch (Exception e) {
                 valid = false;
             } finally {
-                if (rset != null) {
-                    try {
-                        rset.close();
-                    } catch (Throwable t) {
-                        // ignore
-                    }
-                }
-                if (stmt != null) {
-                    try {
-                        stmt.close();
-                    } catch (Throwable t) {
-                        // ignore
-                    }
-                }
-                if (conn != null) {
-                    try {
-                        conn.close();
-                    } catch (Throwable t) {
-                        // ignore
-                    }
-                }
+                Utils.closeQuietly(rset);
+                Utils.closeQuietly(stmt);
+                Utils.closeQuietly(conn);
                 validatingSet.remove(pconn);
             }
         } else {
diff --git a/src/java/org/apache/commons/dbcp2/datasources/KeyedCPDSConnectionFactory.java b/src/java/org/apache/commons/dbcp2/datasources/KeyedCPDSConnectionFactory.java
index 44a9b609..b2ad96ca 100644
--- a/src/java/org/apache/commons/dbcp2/datasources/KeyedCPDSConnectionFactory.java
+++ b/src/java/org/apache/commons/dbcp2/datasources/KeyedCPDSConnectionFactory.java
@@ -30,6 +30,7 @@ import javax.sql.ConnectionEventListener;
 import javax.sql.ConnectionPoolDataSource;
 import javax.sql.PooledConnection;
 
+import org.apache.commons.dbcp2.Utils;
 import org.apache.commons.pool2.KeyedObjectPool;
 import org.apache.commons.pool2.KeyedPoolableObjectFactory;
 
@@ -190,27 +191,9 @@ class KeyedCPDSConnectionFactory
             } catch(Exception e) {
                 valid = false;
             } finally {
-                if (rset != null) {
-                    try {
-                        rset.close();
-                    } catch (Throwable t) {
-                        // ignore
-                    }
-                }
-                if (stmt != null) {
-                    try {
-                        stmt.close();
-                    } catch (Throwable t) {
-                        // ignore
-                    }
-                }
-                if (conn != null) {
-                    try {
-                        conn.close();
-                    } catch (Throwable t) {
-                        // ignore
-                    }
-                }
+                Utils.closeQuietly(rset);
+                Utils.closeQuietly(stmt);
+                Utils.closeQuietly(conn);
                 validatingSet.remove(pconn);
             }
         } else {
diff --git a/src/java/org/apache/commons/dbcp2/managed/BasicManagedDataSource.java b/src/java/org/apache/commons/dbcp2/managed/BasicManagedDataSource.java
index 9257d330..5cd5f3de 100644
--- a/src/java/org/apache/commons/dbcp2/managed/BasicManagedDataSource.java
+++ b/src/java/org/apache/commons/dbcp2/managed/BasicManagedDataSource.java
@@ -143,14 +143,14 @@ public class BasicManagedDataSource extends BasicDataSource {
             Class<?> xaDataSourceClass = null;
             try {
                 xaDataSourceClass = Class.forName(xaDataSource);
-            } catch (Throwable t) {
+            } catch (Exception t) {
                 String message = "Cannot load XA data source class '" + xaDataSource + "'";
                 throw (SQLException)new SQLException(message).initCause(t);
             }
             
             try {
                 xaDataSourceInstance = (XADataSource) xaDataSourceClass.newInstance();
-            } catch (Throwable t) {
+            } catch (Exception t) {
                 String message = "Cannot create XA data source of class '" + xaDataSource + "'";
                 throw (SQLException)new SQLException(message).initCause(t);
             }
