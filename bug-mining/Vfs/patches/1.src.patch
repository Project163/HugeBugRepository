diff --git a/src/java/org/apache/commons/vfs/provider/AbstractFileObject.java b/src/java/org/apache/commons/vfs/provider/AbstractFileObject.java
index 7a007852..da54becc 100644
--- a/src/java/org/apache/commons/vfs/provider/AbstractFileObject.java
+++ b/src/java/org/apache/commons/vfs/provider/AbstractFileObject.java
@@ -1415,7 +1415,7 @@ public abstract class AbstractFileObject implements FileObject
             if (parentName != null)
             {
                 // Locate the parent, if it is cached
-                parent = (AbstractFileObject) fs.getFileFromCache(parentName);
+                parent = fs.getFileFromCache(parentName);
             }
         }
 
diff --git a/src/java/org/apache/commons/vfs/provider/AbstractFileSystem.java b/src/java/org/apache/commons/vfs/provider/AbstractFileSystem.java
index 48117ea0..c3e1f858 100644
--- a/src/java/org/apache/commons/vfs/provider/AbstractFileSystem.java
+++ b/src/java/org/apache/commons/vfs/provider/AbstractFileSystem.java
@@ -487,13 +487,13 @@ public abstract class AbstractFileSystem
             final ArrayList listeners = (ArrayList) listenerMap.get(file.getName());
             if (listeners != null)
             {
-                final int count = listeners.size();
-                for (int i = 0; i < count; i++)
+            	FileListener[] fileListeners = (FileListener[]) listeners.toArray(new FileListener[listeners.size()]);
+                for (int i = 0; i < fileListeners.length; i++)
                 {
-                    final FileListener listener = (FileListener) listeners.get(i);
+                    final FileListener fileListener = fileListeners[i];
                     try
                     {
-                        event.notify(listener);
+                        event.notify(fileListener);
                     }
                     catch (final Exception e)
                     {
