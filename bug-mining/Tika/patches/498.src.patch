diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java
index e438d9954..985e41329 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java
@@ -46,6 +46,8 @@ import org.apache.poi.xssf.model.CommentsTable;
 import org.apache.poi.xssf.model.StylesTable;
 import org.apache.poi.xssf.usermodel.XSSFComment;
 import org.apache.poi.xssf.usermodel.XSSFRelation;
+import org.apache.poi.xssf.usermodel.XSSFShape;
+import org.apache.poi.xssf.usermodel.XSSFSimpleShape;
 import org.apache.poi.xssf.usermodel.helpers.HeaderFooterHelper;
 import org.apache.tika.exception.TikaException;
 import org.apache.tika.metadata.Metadata;
@@ -118,6 +120,7 @@ public class XSSFExcelExtractorDecorator extends AbstractOOXMLExtractor {
        while (iter.hasNext()) {
            InputStream stream = iter.next();
            sheetParts.add(iter.getSheetPart());
+           
            SheetTextAsHTML sheetExtractor = new SheetTextAsHTML(xhtml, iter.getSheetComments());
 
            // Start, and output the sheet name
@@ -142,7 +145,7 @@ public class XSSFExcelExtractorDecorator extends AbstractOOXMLExtractor {
            for(String footer : sheetExtractor.footers) {
               extractHeaderFooter(footer, xhtml);
            }
-           
+           processShapes(iter.getShapes(), xhtml);
            // All done with this sheet
            xhtml.endElement("div");
        }
@@ -157,6 +160,20 @@ public class XSSFExcelExtractorDecorator extends AbstractOOXMLExtractor {
         }
     }
     
+    private void processShapes(List<XSSFShape> shapes, XHTMLContentHandler xhtml) throws SAXException {
+       if (shapes == null){
+           return;
+       }
+       for (XSSFShape shape : shapes){
+           if (shape instanceof XSSFSimpleShape){
+               String sText = ((XSSFSimpleShape)shape).getText();
+               if (sText != null && sText.length() > 0){
+                   xhtml.element("p", sText);
+               }
+           }
+       }
+   }
+    
     public void processSheet(
           SheetContentsHandler sheetContentsExtractor,
           StylesTable styles,
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParserTest.java
index 86ef93bdf..9aad3001d 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParserTest.java
@@ -988,4 +988,16 @@ public class OOXMLParserTest extends TikaTest {
             input.close();
         }
     }
+
+    //TIKA-1100:
+    public void testExcelTextBox() throws Exception {
+        Metadata metadata = new Metadata(); 
+        ContentHandler handler = new BodyContentHandler();
+        ParseContext context = new ParseContext();
+        InputStream input = getTestDocument("testEXCEL_textbox.xlsx");
+        parser.parse(input, handler, metadata, context);
+        String content = handler.toString();
+        assertContains("some autoshape", content);    
+    }    
+
 }
diff --git a/tika-parsers/src/test/resources/test-documents/testEXCEL_textbox.xlsx b/tika-parsers/src/test/resources/test-documents/testEXCEL_textbox.xlsx
new file mode 100644
index 000000000..d4b7b3dfe
Binary files /dev/null and b/tika-parsers/src/test/resources/test-documents/testEXCEL_textbox.xlsx differ
