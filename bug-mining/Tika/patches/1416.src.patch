diff --git a/tika-core/src/main/java/org/apache/tika/pipes/extractor/EmittingEmbeddedDocumentBytesHandler.java b/tika-core/src/main/java/org/apache/tika/pipes/extractor/EmittingEmbeddedDocumentBytesHandler.java
index 9c73578f0..07c9f7507 100644
--- a/tika-core/src/main/java/org/apache/tika/pipes/extractor/EmittingEmbeddedDocumentBytesHandler.java
+++ b/tika-core/src/main/java/org/apache/tika/pipes/extractor/EmittingEmbeddedDocumentBytesHandler.java
@@ -20,8 +20,6 @@ import java.io.Closeable;
 import java.io.IOException;
 import java.io.InputStream;
 
-import org.apache.commons.io.IOExceptionWithCause;
-
 import org.apache.tika.exception.TikaConfigException;
 import org.apache.tika.extractor.AbstractEmbeddedDocumentBytesHandler;
 import org.apache.tika.metadata.Metadata;
@@ -67,7 +65,7 @@ public class EmittingEmbeddedDocumentBytesHandler extends AbstractEmbeddedDocume
         try {
             emitter.emit(emitKey, inputStream, METADATA, PARSE_CONTEXT);
         } catch (TikaEmitterException e) {
-            throw new IOExceptionWithCause(e);
+            throw new IOException(e);
         }
     }
 
diff --git a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module/src/main/java/org/apache/tika/parser/microsoft/libpst/EmailVisitor.java b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module/src/main/java/org/apache/tika/parser/microsoft/libpst/EmailVisitor.java
index 644b2f046..a12806472 100644
--- a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module/src/main/java/org/apache/tika/parser/microsoft/libpst/EmailVisitor.java
+++ b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module/src/main/java/org/apache/tika/parser/microsoft/libpst/EmailVisitor.java
@@ -23,7 +23,6 @@ import java.nio.file.FileVisitor;
 import java.nio.file.Path;
 import java.nio.file.attribute.BasicFileAttributes;
 
-import org.apache.commons.io.IOExceptionWithCause;
 import org.xml.sax.SAXException;
 
 import org.apache.tika.extractor.EmbeddedDocumentExtractor;
@@ -83,7 +82,7 @@ public class EmailVisitor implements FileVisitor<Path> {
             try {
                 embeddedDocumentExtractor.parseEmbedded(is, xhtml, emailMetadata, true);
             } catch (SAXException e) {
-                throw new IOExceptionWithCause(e);
+                throw new IOException(e);
             }
         }
     }
diff --git a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-pdf-module/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-pdf-module/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java
index 9179fe956..5d7b50fb2 100644
--- a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-pdf-module/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java
+++ b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-pdf-module/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java
@@ -26,7 +26,6 @@ import java.util.Map;
 import java.util.Set;
 import java.util.concurrent.atomic.AtomicInteger;
 
-import org.apache.commons.io.IOExceptionWithCause;
 import org.apache.pdfbox.cos.COSArray;
 import org.apache.pdfbox.cos.COSName;
 import org.apache.pdfbox.cos.COSStream;
@@ -125,7 +124,7 @@ class PDF2XHTML extends AbstractPDF2XHTML {
                 throw new TikaException("Unable to extract PDF content", e);
             }
         }
-        if (pdf2XHTML.exceptions.size() > 0) {
+        if (!pdf2XHTML.exceptions.isEmpty()) {
             //throw the first
             throw new TikaException("Unable to extract PDF content", pdf2XHTML.exceptions.get(0));
         }
@@ -187,7 +186,7 @@ class PDF2XHTML extends AbstractPDF2XHTML {
         } catch (SecurityException e) {
             throw e;
         } catch (Exception e) {
-            handleCatchableIOE(new IOExceptionWithCause(e));
+            handleCatchableIOE(new IOException(e));
         }
     }
 
@@ -203,7 +202,7 @@ class PDF2XHTML extends AbstractPDF2XHTML {
                         processedInlineImages, inlineImageCounter, xhtml, metadata, context);
         engine.run();
         List<IOException> engineExceptions = engine.getExceptions();
-        if (engineExceptions.size() > 0) {
+        if (!engineExceptions.isEmpty()) {
             IOException first = engineExceptions.remove(0);
             if (config.isCatchIntermediateIOExceptions()) {
                 exceptions.addAll(engineExceptions);
