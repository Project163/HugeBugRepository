diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index aef9eef6..1172aa87 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -27,6 +27,10 @@
   <body>
     <release version="1.9" date="in SVN"
       description="TBD">
+      <action dev="oheger" type="fix" issue="CONFIGURATION-495">
+        List properties can now be set correctly on a HierarchicalConfiguration
+        if delimiter parsing is disabled.
+      </action>
       <action dev="oheger" type="fix" issue="CONFIGURATION-487">
         DataConfiguration.get() now also works with String properties and if no
         data type conversion is required.
diff --git a/src/main/java/org/apache/commons/configuration/HierarchicalConfiguration.java b/src/main/java/org/apache/commons/configuration/HierarchicalConfiguration.java
index 149161de..527deeb9 100644
--- a/src/main/java/org/apache/commons/configuration/HierarchicalConfiguration.java
+++ b/src/main/java/org/apache/commons/configuration/HierarchicalConfiguration.java
@@ -739,7 +739,7 @@ public class HierarchicalConfiguration extends AbstractConfiguration implements
         // Update the existing nodes for this property
         Iterator<ConfigurationNode> itNodes = fetchNodeList(key).iterator();
         Iterator<?> itValues;
-        if (!isDelimiterParsingDisabled())
+        if (!isDelimiterParsingDisabled() || !(value instanceof String))
         {
             itValues = PropertyConverter.toIterator(value, getListDelimiter());
         }
diff --git a/src/test/java/org/apache/commons/configuration/TestPropertiesConfiguration.java b/src/test/java/org/apache/commons/configuration/TestPropertiesConfiguration.java
index bc15d965..0cf68732 100644
--- a/src/test/java/org/apache/commons/configuration/TestPropertiesConfiguration.java
+++ b/src/test/java/org/apache/commons/configuration/TestPropertiesConfiguration.java
@@ -44,6 +44,7 @@ import java.net.URL;
 import java.net.URLConnection;
 import java.net.URLStreamHandler;
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.HashSet;
 import java.util.Iterator;
 import java.util.List;
@@ -1057,6 +1058,25 @@ public class TestPropertiesConfiguration
         checkBackslashList("share1");
     }
 
+    /**
+     * Tests whether a list property is handled correctly if delimiter parsing
+     * is disabled. This test is related to CONFIGURATION-495.
+     */
+    @Test
+    public void testSetPropertyListWithDelimiterParsingDisabled()
+            throws ConfigurationException
+    {
+        String prop = "delimiterListProp";
+        conf.setDelimiterParsingDisabled(true);
+        List<String> list = Arrays.asList("val", "val2", "val3");
+        conf.setProperty(prop, list);
+        conf.setFile(testSavePropertiesFile);
+        conf.save();
+        conf.clear();
+        conf.load();
+        assertEquals("Wrong list property", list, conf.getProperty(prop));
+    }
+
     /**
      * Helper method for testing the content of a list with elements that
      * contain backslashes.
diff --git a/src/test/java/org/apache/commons/configuration/TestXMLConfiguration.java b/src/test/java/org/apache/commons/configuration/TestXMLConfiguration.java
index a8435b05..afcf7626 100644
--- a/src/test/java/org/apache/commons/configuration/TestXMLConfiguration.java
+++ b/src/test/java/org/apache/commons/configuration/TestXMLConfiguration.java
@@ -34,6 +34,7 @@ import java.io.StringReader;
 import java.io.StringWriter;
 import java.net.URL;
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.Collection;
 import java.util.Iterator;
 import java.util.List;
@@ -1848,6 +1849,44 @@ public class TestXMLConfiguration
                 newNode instanceof XMLConfiguration.XMLNode);
     }
 
+    /**
+     * Tests whether list properties are set correctly if delimiter
+     * parsing is disabled. This test is related to CONFIGURATION-495.
+     */
+    @Test
+    public void testSetPropertyListWithDelimiterParsingDisabled()
+            throws ConfigurationException
+    {
+        String prop = "delimiterListProp";
+        conf.setDelimiterParsingDisabled(true);
+        List<String> list = Arrays.asList("val", "val2", "val3");
+        conf.setProperty(prop, list);
+        conf.setFile(testSaveFile);
+        conf.save();
+        conf.clear();
+        conf.load();
+        assertEquals("Wrong list property", list, conf.getProperty(prop));
+    }
+
+    /**
+     * Tests whether list properties are added correctly if delimiter parsing is
+     * disabled. This test is related to CONFIGURATION-495.
+     */
+    @Test
+    public void testAddPropertyListWithDelimiterParsingDisabled()
+            throws ConfigurationException
+    {
+        String prop = "delimiterListProp";
+        conf.setDelimiterParsingDisabled(true);
+        List<String> list = Arrays.asList("val", "val2", "val3");
+        conf.addProperty(prop, list);
+        conf.setFile(testSaveFile);
+        conf.save();
+        conf.clear();
+        conf.load();
+        assertEquals("Wrong list property", list, conf.getProperty(prop));
+    }
+
     /**
      * Prepares a configuration object for testing a reload operation.
      *
