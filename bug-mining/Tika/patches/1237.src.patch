diff --git a/CHANGES.txt b/CHANGES.txt
index 37990f141..c64202dd4 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -1,5 +1,9 @@
 Release 2.1.1 - ???
 
+   * Fix Open Office mime types to be subclasses of application/zip
+     and no longer require OPCPackageDetector-last ordering of zip
+     detectors (TIKA-3556).
+
    * Improve robustness and features of the httpfetcher (TIKA-3543)
    
    * Add optional fetch ranges to FetchEmitTuple to allow range fetching from,
diff --git a/tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java b/tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java
index 04fc49718..331edb1f0 100644
--- a/tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java
+++ b/tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java
@@ -617,6 +617,14 @@ public class TikaInputStream extends TaggedInputStream {
         }
     }
 
+    /**
+     *
+     * @param closeable
+     */
+    public void addCloseableResource(Closeable closeable) {
+        tmp.addResource(closeable);
+    }
+
     public boolean hasInputStreamFactory() {
         return streamFactory != null;
     }
diff --git a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml
index 89123f716..8d73da68c 100644
--- a/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml
+++ b/tika-core/src/main/resources/org/apache/tika/mime/tika-mimetypes.xml
@@ -2184,6 +2184,7 @@
       </match>
     </magic>
     <glob pattern="*.odc"/>
+    <sub-class-of type="application/zip"/>
   </mime-type>
 
   <mime-type type="application/vnd.oasis.opendocument.chart-template">
@@ -2196,6 +2197,7 @@
       </match>
     </magic>
     <glob pattern="*.otc"/>
+    <sub-class-of type="application/zip"/>
   </mime-type>
 
   <mime-type type="application/vnd.oasis.opendocument.base">
@@ -2226,6 +2228,7 @@
       </match>
     </magic>
     <glob pattern="*.odft"/>
+    <sub-class-of type="application/zip"/>
   </mime-type>
 
   <mime-type type="application/vnd.oasis.opendocument.graphics">
@@ -2238,6 +2241,7 @@
       </match>
     </magic>
     <glob pattern="*.odg"/>
+    <sub-class-of type="application/zip"/>
   </mime-type>
 
   <mime-type type="application/vnd.oasis.opendocument.graphics-template">
@@ -2250,6 +2254,7 @@
       </match>
     </magic>
     <glob pattern="*.otg"/>
+    <sub-class-of type="application/zip"/>
   </mime-type>
 
   <mime-type type="application/vnd.oasis.opendocument.image">
@@ -2262,6 +2267,7 @@
       </match>
     </magic>
     <glob pattern="*.odi"/>
+    <sub-class-of type="application/zip"/>
   </mime-type>
 
   <mime-type type="application/vnd.oasis.opendocument.image-template">
@@ -2274,6 +2280,7 @@
       </match>
     </magic>
     <glob pattern="*.oti"/>
+    <sub-class-of type="application/zip"/>
   </mime-type>
 
   <mime-type type="application/vnd.oasis.opendocument.presentation">
@@ -2286,6 +2293,7 @@
       </match>
     </magic>
     <glob pattern="*.odp"/>
+    <sub-class-of type="application/zip"/>
   </mime-type>
 
   <mime-type type="application/vnd.oasis.opendocument.presentation-template">
@@ -2298,6 +2306,7 @@
       </match>
     </magic>
     <glob pattern="*.otp"/>
+    <sub-class-of type="application/zip"/>
   </mime-type>
 
   <mime-type type="application/vnd.oasis.opendocument.spreadsheet">
@@ -2310,6 +2319,7 @@
       </match>
     </magic>
     <glob pattern="*.ods"/>
+    <sub-class-of type="application/zip"/>
   </mime-type>
 
   <mime-type type="application/vnd.oasis.opendocument.spreadsheet-template">
@@ -2322,6 +2332,7 @@
       </match>
     </magic>
     <glob pattern="*.ots"/>
+    <sub-class-of type="application/zip"/>
   </mime-type>
 
   <mime-type type="application/vnd.oasis.opendocument.text">
@@ -2334,6 +2345,7 @@
       </match>
     </magic>
     <glob pattern="*.odt"/>
+    <sub-class-of type="application/zip"/>
   </mime-type>
 
   <!-- can't tell from the root element whether this is fodt, fodp, etc.
@@ -2374,6 +2386,7 @@
       </match>
     </magic>
     <glob pattern="*.otm"/>
+    <sub-class-of type="application/zip"/>
   </mime-type>
 
   <mime-type type="application/vnd.oasis.opendocument.text-template">
@@ -2386,6 +2399,7 @@
       </match>
     </magic>
     <glob pattern="*.ott"/>
+    <sub-class-of type="application/zip"/>
   </mime-type>
 
   <mime-type type="application/vnd.oasis.opendocument.text-web">
@@ -2398,6 +2412,7 @@
       </match>
     </magic>
     <glob pattern="*.oth"/>
+    <sub-class-of type="application/zip"/>
   </mime-type>
 
   <mime-type type="application/vnd.obn"/>
@@ -2439,6 +2454,7 @@
   <mime-type type="application/vnd.omaloc-supl-init"/>
 
   <mime-type type="application/vnd.openofficeorg.extension">
+    <sub-class-of type="application/zip"/>
     <glob pattern="*.oxt"/>
   </mime-type>
 
diff --git a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module/src/main/java/org/apache/tika/detect/microsoft/ooxml/OPCPackageDetector.java b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module/src/main/java/org/apache/tika/detect/microsoft/ooxml/OPCPackageDetector.java
index dbf338cfc..64a39e231 100644
--- a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module/src/main/java/org/apache/tika/detect/microsoft/ooxml/OPCPackageDetector.java
+++ b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module/src/main/java/org/apache/tika/detect/microsoft/ooxml/OPCPackageDetector.java
@@ -236,7 +236,8 @@ public class OPCPackageDetector implements ZipContainerDetector {
     public MediaType detect(ZipFile zipFile, TikaInputStream stream) throws IOException {
         //as of 4.x, POI throws an exception for non-POI OPC file types
         //unless we change POI, we can't rely on POI for non-POI files
-        ZipEntrySource zipEntrySource = new ZipFileZipEntrySource(zipFile);
+        ZipEntrySource zipEntrySource =
+                new CloseShieldZipFileZipEntrySource(zipFile);
 
         // Use POI to open and investigate it for us
         //Unfortunately, POI can throw a RuntimeException...so we
@@ -246,17 +247,17 @@ public class OPCPackageDetector implements ZipContainerDetector {
         try {
             pkg = OPCPackage.open(zipEntrySource);
             type = detectOfficeOpenXML(pkg);
-
         } catch (SecurityException e) {
             closeQuietly(zipEntrySource);
-            closeQuietly(zipFile);
             //TIKA-2571
             throw e;
         } catch (InvalidFormatException | RuntimeException e) {
-            closeQuietly(zipEntrySource);
-            closeQuietly(zipFile);
+            //no need to close zipEntrySource because it
+            //only closes the underlying zipFile, not any other resources
+            //as of this writing.... :'(
             return null;
         }
+        ((CloseShieldZipFileZipEntrySource)zipEntrySource).allowClose();
         //only set the open container if we made it here
         stream.setOpenContainer(pkg);
         return type;
@@ -345,4 +346,23 @@ public class OPCPackageDetector implements ZipContainerDetector {
             return cnt;
         }
     }
+
+    private static class CloseShieldZipFileZipEntrySource extends ZipFileZipEntrySource {
+        private boolean allowClose = false;
+        public CloseShieldZipFileZipEntrySource(ZipFile zipFile) {
+            super(zipFile);
+        }
+
+        @Override
+        public void close() throws IOException {
+            if (allowClose) {
+                super.close();
+            }
+            //no-op, do not close the underlying zipFile
+        }
+
+        public void allowClose() {
+            allowClose = true;
+        }
+    }
 }
diff --git a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-miscoffice-module/src/test/resources/org/apache/tika/parser/odf/tika-config-detectors.xml b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-miscoffice-module/src/test/resources/org/apache/tika/parser/odf/tika-config-detectors.xml
new file mode 100644
index 000000000..10f908631
--- /dev/null
+++ b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-miscoffice-module/src/test/resources/org/apache/tika/parser/odf/tika-config-detectors.xml
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+  Licensed to the Apache Software Foundation (ASF) under one or more
+  contributor license agreements.  See the NOTICE file distributed with
+  this work for additional information regarding copyright ownership.
+  The ASF licenses this file to You under the Apache License, Version 2.0
+  (the "License"); you may not use this file except in compliance with
+  the License.  You may obtain a copy of the License at
+
+  http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+-->
+<properties>
+    <zipDetectors>
+        <zipDetector class="org.apache.tika.parser.DefaultParser"/>
+        <parser class="org.apache.tika.parser.odf.OpenDocumentParser">
+            <params>
+                <param name="extractMacros" type="bool">true</param>
+            </params>
+        </parser>
+        <parser class="org.apache.tika.parser.odf.FlatOpenDocumentParser">
+            <params>
+                <param name="extractMacros" type="bool">true</param>
+            </params>
+        </parser>
+    </zipDetectors>
+</properties>
diff --git a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-zip-commons/src/main/java/org/apache/tika/detect/zip/DefaultZipContainerDetector.java b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-zip-commons/src/main/java/org/apache/tika/detect/zip/DefaultZipContainerDetector.java
index 00d31d499..8dbd989c0 100644
--- a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-zip-commons/src/main/java/org/apache/tika/detect/zip/DefaultZipContainerDetector.java
+++ b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-zip-commons/src/main/java/org/apache/tika/detect/zip/DefaultZipContainerDetector.java
@@ -188,24 +188,30 @@ public class DefaultZipContainerDetector implements Detector {
      * @return
      */
     private MediaType detectZipFormatOnFile(TikaInputStream tis) {
+        ZipFile zip = null;
         try {
-            ZipFile zip = new ZipFile(tis.getFile()); // TODO: hasFile()?
+            zip = new ZipFile(tis.getFile()); // TODO: hasFile()?
 
-            try {
-                for (ZipContainerDetector zipDetector : zipDetectors) {
-                    MediaType type = zipDetector.detect(zip, tis);
-                    if (type != null) {
-                        return type;
+            for (ZipContainerDetector zipDetector : zipDetectors) {
+                MediaType type = zipDetector.detect(zip, tis);
+                if (type != null) {
+                    //e.g. if OPCPackage has already been set
+                    //don't overwrite it with the zip
+                    if (tis.getOpenContainer() == null) {
+                        tis.setOpenContainer(zip);
+                    } else {
+                        tis.addCloseableResource(zip);
                     }
+                    return type;
                 }
-            } finally {
-                tis.setOpenContainer(zip);
             }
-
         } catch (IOException e) {
-            // ignore
+            //do nothing
         }
         // Fallback: it's still a zip file, we just don't know what kind of one
+        if (zip != null) {
+            IOUtils.closeQuietly(zip);
+        }
         return MediaType.APPLICATION_ZIP;
     }
 
diff --git a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-zip-commons/src/main/java/org/apache/tika/detect/zip/ZipContainerDetector.java b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-zip-commons/src/main/java/org/apache/tika/detect/zip/ZipContainerDetector.java
index cdfbce1d6..1097120ba 100644
--- a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-zip-commons/src/main/java/org/apache/tika/detect/zip/ZipContainerDetector.java
+++ b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-zip-commons/src/main/java/org/apache/tika/detect/zip/ZipContainerDetector.java
@@ -40,6 +40,8 @@ public interface ZipContainerDetector extends Serializable {
      * If detection is successful, the ZipDetector should set the zip
      * file or OPCPackage in TikaInputStream.setOpenContainer()
      *
+     * Implementations should _not_ close the ZipFile
+     *
      * @param zipFile
      * @param tis
      * @return
diff --git a/tika-parsers/tika-parsers-standard/tika-parsers-standard-package/src/test/java/org/apache/tika/detect/TestContainerAwareDetector.java b/tika-parsers/tika-parsers-standard/tika-parsers-standard-package/src/test/java/org/apache/tika/detect/TestContainerAwareDetector.java
index 27967a02a..277230010 100644
--- a/tika-parsers/tika-parsers-standard/tika-parsers-standard-package/src/test/java/org/apache/tika/detect/TestContainerAwareDetector.java
+++ b/tika-parsers/tika-parsers-standard/tika-parsers-standard-package/src/test/java/org/apache/tika/detect/TestContainerAwareDetector.java
@@ -17,6 +17,7 @@
 package org.apache.tika.detect;
 
 import static org.junit.jupiter.api.Assertions.assertEquals;
+import static org.junit.jupiter.api.Assertions.assertNotNull;
 import static org.junit.jupiter.api.Assertions.assertNull;
 import static org.junit.jupiter.api.Assertions.assertTrue;
 
@@ -24,6 +25,7 @@ import java.io.File;
 import java.io.FileFilter;
 import java.io.IOException;
 import java.io.InputStream;
+import java.util.ArrayList;
 import java.util.List;
 import java.util.Objects;
 import java.util.Random;
@@ -35,7 +37,11 @@ import org.junit.jupiter.api.Test;
 import org.apache.tika.MultiThreadedTikaTest;
 import org.apache.tika.Tika;
 import org.apache.tika.config.TikaConfig;
+import org.apache.tika.detect.microsoft.ooxml.OPCPackageDetector;
+import org.apache.tika.detect.zip.DefaultZipContainerDetector;
+import org.apache.tika.detect.zip.OpenDocumentDetector;
 import org.apache.tika.detect.zip.StreamingZipContainerDetector;
+import org.apache.tika.detect.zip.ZipContainerDetector;
 import org.apache.tika.exception.TikaException;
 import org.apache.tika.io.TikaInputStream;
 import org.apache.tika.metadata.Metadata;
@@ -244,6 +250,24 @@ public class TestContainerAwareDetector extends MultiThreadedTikaTest {
     public void testDetectODF() throws Exception {
         assertTypeByData("testODFwithOOo3.odt", "application/vnd.oasis.opendocument.text");
         assertTypeByData("testOpenOffice2.odf", "application/vnd.oasis.opendocument.formula");
+        assertTypeByData("testODTnotaZipFile.odt", "text/plain");
+    }
+
+    @Test
+    public void testODFDifferentOrder() throws Exception {
+        //TIKA-3356
+        List<ZipContainerDetector> detectors = new ArrayList<>();
+        detectors.add(new OPCPackageDetector());
+        detectors.add(new OpenDocumentDetector());
+        DefaultZipContainerDetector zipContainerDetector = new DefaultZipContainerDetector(detectors);
+        try (TikaInputStream tis = TikaInputStream.get(
+                getResourceAsFile("/test-documents/testODFwithOOo3.odt").toPath())) {
+            MediaType mt = zipContainerDetector.detect(tis, new Metadata());
+            assertEquals("application/vnd.oasis.opendocument.text", mt.toString());
+            assertNotNull(tis.getOpenContainer());
+            assertEquals("org.apache.commons.compress.archivers.zip.ZipFile",
+                    tis.getOpenContainer().getClass().getName());
+        }
     }
 
     @Test
