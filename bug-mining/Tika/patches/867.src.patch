diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java b/tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java
index de6a72a78..209936019 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java
@@ -285,7 +285,6 @@ public class CharsetDetector {
         CharsetMatch charsetMatch;
         int confidence;
         ArrayList<CharsetMatch> matches = new ArrayList<CharsetMatch>();
-
         //  Iterate over all possible charsets, remember all that
         //    give a match quality > 0.
         for (i = 0; i < ALL_CS_RECOGNIZERS.size(); i++) {
@@ -302,8 +301,7 @@ public class CharsetDetector {
                         // Reduce lack of confidence (delta between "sure" and current) by 50%.
                         confidence += (MAX_CONFIDENCE - confidence) / 2;
                     }
-
-                    CharsetMatch m = new CharsetMatch(this, csr, confidence);
+                    CharsetMatch m = new CharsetMatch(this, csr, confidence, charsetMatch.getName(), charsetMatch.getLanguage());
                     matches.add(m);
                 }
             }
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/txt/CharsetDetectorTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/txt/CharsetDetectorTest.java
index 050ef15eb..0c4b858d5 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/txt/CharsetDetectorTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/txt/CharsetDetectorTest.java
@@ -61,4 +61,13 @@ public class CharsetDetectorTest {
             assertTrue(reader.ready());
         }
     }
+
+    @Test
+    public void testWin125XHeuristics() throws Exception {
+        //TIKA-2219
+        CharsetDetector detector = new CharsetDetector();
+        detector.setText(getClass().getResourceAsStream("/test-documents/testTXT_win-1252.txt"));
+        CharsetMatch charset =  detector.detect();
+        assertEquals("windows-1252", charset.getName());
+    }
 }
diff --git a/tika-parsers/src/test/resources/test-documents/testTXT_win-1252.txt b/tika-parsers/src/test/resources/test-documents/testTXT_win-1252.txt
new file mode 100644
index 000000000..519c95565
--- /dev/null
+++ b/tika-parsers/src/test/resources/test-documents/testTXT_win-1252.txt
@@ -0,0 +1 @@
+These smart quotes are the trigger for CharsetRecog_sbcs to think this is a “windows” encoding
\ No newline at end of file
