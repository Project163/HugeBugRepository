diff --git a/src/main/java/org/apache/commons/configuration2/ImmutableConfigurationInvocationHandler.java b/src/main/java/org/apache/commons/configuration2/ImmutableConfigurationInvocationHandler.java
index 145573c6..f30a6a2f 100644
--- a/src/main/java/org/apache/commons/configuration2/ImmutableConfigurationInvocationHandler.java
+++ b/src/main/java/org/apache/commons/configuration2/ImmutableConfigurationInvocationHandler.java
@@ -17,6 +17,7 @@
 package org.apache.commons.configuration2;
 
 import java.lang.reflect.InvocationHandler;
+import java.lang.reflect.InvocationTargetException;
 import java.lang.reflect.Method;
 import java.util.Iterator;
 
@@ -76,7 +77,15 @@ class ImmutableConfigurationInvocationHandler implements InvocationHandler
     public Object invoke(Object proxy, Method method, Object[] args)
             throws Throwable
     {
-        return handleResult(method.invoke(wrappedConfiguration, args));
+        try
+        {
+            return handleResult(method.invoke(wrappedConfiguration, args));
+        }
+        catch (InvocationTargetException e)
+        {
+            // unwrap
+            throw e.getCause();
+        }
     }
 
     /**
diff --git a/src/test/java/org/apache/commons/configuration2/TestImmutableConfiguration.java b/src/test/java/org/apache/commons/configuration2/TestImmutableConfiguration.java
index d0347dea..e8250be0 100644
--- a/src/test/java/org/apache/commons/configuration2/TestImmutableConfiguration.java
+++ b/src/test/java/org/apache/commons/configuration2/TestImmutableConfiguration.java
@@ -16,12 +16,16 @@
  */
 package org.apache.commons.configuration2;
 
+import static org.hamcrest.CoreMatchers.containsString;
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertThat;
 import static org.junit.Assert.assertTrue;
+import static org.junit.Assert.fail;
 
 import java.util.HashSet;
 import java.util.Iterator;
+import java.util.NoSuchElementException;
 import java.util.Set;
 
 import org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl;
@@ -206,4 +210,28 @@ public class TestImmutableConfiguration
         assertTrue("Property not found", ihc.getBoolean(key));
         assertEquals("Wrong max index", 0, ihc.getMaxIndex(key));
     }
+
+    /**
+     * Tests that exceptions thrown by the wrapped configuration are handled
+     * correctly.
+     */
+    @Test
+    public void testExceptionHandling()
+    {
+        PropertiesConfiguration config = new PropertiesConfiguration();
+        final String property = "nonExistingProperty";
+        config.setThrowExceptionOnMissing(true);
+        ImmutableConfiguration ic =
+                ConfigurationUtils.unmodifiableConfiguration(config);
+        try
+        {
+            ic.getString(property);
+            fail("Exception for missing property not thrown!");
+        }
+        catch (NoSuchElementException e)
+        {
+            assertThat("Wrong message", e.getMessage(),
+                    containsString(property));
+        }
+    }
 }
