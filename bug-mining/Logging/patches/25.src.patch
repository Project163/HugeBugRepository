diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 1b94978..1faed83 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -44,6 +44,9 @@ The <action> type attribute can be add,update,fix,remove.
   </properties>
   <body>
     <release version="1.1.2" date="In SVN" description="Bug fixes.">
+      <action type="fix" issue="LOGGING-132">
+        Jdk14Logger now correctly uses the specified logger name.
+      </action>
       <action type="update" issue="LOGGING-133">
         Change scope of Jdk14Logger.log(Level, String, Throwable) to protected, allowing
         subclasses to modify the logging output.
diff --git a/src/main/java/org/apache/commons/logging/impl/Jdk14Logger.java b/src/main/java/org/apache/commons/logging/impl/Jdk14Logger.java
index 6d3d81c..18e6b40 100644
--- a/src/main/java/org/apache/commons/logging/impl/Jdk14Logger.java
+++ b/src/main/java/org/apache/commons/logging/impl/Jdk14Logger.java
@@ -75,13 +75,13 @@ public class Jdk14Logger implements Log, Serializable {
             // Hack (?) to get the stack trace.
             Throwable dummyException = new Throwable();
             StackTraceElement locations[] = dummyException.getStackTrace();
-            // Caller will be the third element
-            String cname = "unknown";
+            // LOGGING-132: use the provided logger name instead of the class name
+            String cname = name;
             String method = "unknown";
+            // Caller will be the third element
             if( locations != null && locations.length > 2 ) {
-                StackTraceElement caller=locations[2];
-                cname=caller.getClassName();
-                method=caller.getMethodName();
+                StackTraceElement caller = locations[2];
+                method = caller.getMethodName();
             }
             if( ex == null ) {
                 logger.logp( level, cname, method, msg );
diff --git a/src/test/java/org/apache/commons/logging/jdk14/CustomConfigTestCase.java b/src/test/java/org/apache/commons/logging/jdk14/CustomConfigTestCase.java
index 5679c00..23ec21c 100644
--- a/src/test/java/org/apache/commons/logging/jdk14/CustomConfigTestCase.java
+++ b/src/test/java/org/apache/commons/logging/jdk14/CustomConfigTestCase.java
@@ -168,10 +168,10 @@ public class CustomConfigTestCase extends DefaultConfigTestCase {
     public void setUp() throws Exception {
         setUpManager
             ("org/apache/commons/logging/jdk14/CustomConfig.properties");
-        setUpLogger("TestLogger");
+        setUpLogger(this.getClass().getName());
         setUpHandlers();
         setUpFactory();
-        setUpLog("TestLogger");
+        setUpLog(this.getClass().getName());
     }
 
 
@@ -244,7 +244,7 @@ public class CustomConfigTestCase extends DefaultConfigTestCase {
     public void testPristineLogger() {
 
         assertNotNull("Logger exists", logger);
-        assertEquals("Logger name", "TestLogger", logger.getName());
+        assertEquals("Logger name", this.getClass().getName(), logger.getName());
 
         // Assert which logging levels have been enabled
         assertTrue(logger.isLoggable(Level.SEVERE));
