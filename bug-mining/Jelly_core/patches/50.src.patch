diff --git a/src/java/org/apache/commons/jelly/impl/TagScript.java b/src/java/org/apache/commons/jelly/impl/TagScript.java
index cbe57738..8a61b77b 100644
--- a/src/java/org/apache/commons/jelly/impl/TagScript.java
+++ b/src/java/org/apache/commons/jelly/impl/TagScript.java
@@ -15,6 +15,7 @@
  */
 package org.apache.commons.jelly.impl;
 
+import java.io.IOException;
 import java.lang.reflect.InvocationTargetException;
 import java.net.MalformedURLException;
 import java.net.URL;
@@ -53,7 +54,7 @@ import org.xml.sax.SAXException;
  * concurrently by multiple threads.
  *
  * @author <a href="mailto:jstrachan@apache.org">James Strachan</a>
- * @version $Revision: 1.44 $
+ * @version $Revision: 1.45 $
  */
 public class TagScript implements Script {
 
@@ -250,14 +251,15 @@ public class TagScript implements Script {
             }
 
             tag.doTag(output);
+            output.flush();
         }
         catch (JellyTagException e) {
             handleException(e);
-        }
-        catch (JellyException e) {
+        } catch (JellyException e) {
             handleException(e);
-        }
-        catch (RuntimeException e) {
+        } catch (IOException e) {
+            handleException(e);
+        } catch (RuntimeException e) {
             handleException(e);
         }
         catch (Error e) {
diff --git a/src/test/org/apache/commons/jelly/TestXMLOutput.java b/src/test/org/apache/commons/jelly/TestXMLOutput.java
new file mode 100644
index 00000000..b4634a7d
--- /dev/null
+++ b/src/test/org/apache/commons/jelly/TestXMLOutput.java
@@ -0,0 +1,70 @@
+/*
+ * Copyright 2002,2004 The Apache Software Foundation.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.commons.jelly;
+
+import java.io.ByteArrayOutputStream;
+
+import org.apache.commons.jelly.Script;
+import org.apache.commons.jelly.XMLOutput;
+import org.apache.commons.jelly.test.BaseJellyTest;
+
+/**
+ * @author Hans Gilde
+ *
+ */
+public class TestXMLOutput extends BaseJellyTest {
+
+    /** JUnit constructor
+     * @param name
+     */
+    public TestXMLOutput(String name) {
+        super(name);
+    }
+    
+    public void testOutputGood() throws Exception {
+        setUpScript("outputGood.jelly");
+        Script script = getJelly().compileScript();
+        
+        ByteArrayOutputStream bos = new ByteArrayOutputStream();
+        
+        script.run(getJellyContext(),XMLOutput.createXMLOutput(bos));
+        assertEquals("<html></html>x",bos.toString());
+    }
+    
+    public void testOutputBad() throws Exception {
+        setUpScript("outputBad.jelly");
+        Script script = getJelly().compileScript();
+        
+        ByteArrayOutputStream bos = new ByteArrayOutputStream();
+        
+        script.run(getJellyContext(),XMLOutput.createXMLOutput(bos));
+        assertEquals("<html></html>",bos.toString());
+    }
+    
+    public void testOutputBadGood() throws Exception {
+        setUpScript("outputBad.jelly");
+        Script script = getJelly().compileScript();
+        
+        ByteArrayOutputStream bos = new ByteArrayOutputStream();
+        
+        XMLOutput ouput = XMLOutput.createXMLOutput(bos);
+        
+        script.run(getJellyContext(),ouput);
+        ouput.flush();
+        assertEquals("<html></html>",bos.toString());
+    }
+    
+}
diff --git a/src/test/org/apache/commons/jelly/outputBad.jelly b/src/test/org/apache/commons/jelly/outputBad.jelly
new file mode 100644
index 00000000..24bfcf51
--- /dev/null
+++ b/src/test/org/apache/commons/jelly/outputBad.jelly
@@ -0,0 +1,3 @@
+<j:jelly xmlns:j="jelly:core">
+	<html/>
+</j:jelly>
\ No newline at end of file
diff --git a/src/test/org/apache/commons/jelly/outputGood.jelly b/src/test/org/apache/commons/jelly/outputGood.jelly
new file mode 100644
index 00000000..ed9f2ab7
--- /dev/null
+++ b/src/test/org/apache/commons/jelly/outputGood.jelly
@@ -0,0 +1,3 @@
+<j:jelly xmlns:j="jelly:core">
+	<html/>x
+</j:jelly>
\ No newline at end of file
diff --git a/xdocs/changes.xml b/xdocs/changes.xml
index d3a369ac..2c883748 100644
--- a/xdocs/changes.xml
+++ b/xdocs/changes.xml
@@ -25,6 +25,7 @@
   </properties>
   <body>
     <release version="1.0-beta-5-SNAPSHOT" date="in CVS">
+      <action dev="dion" type="fix" issue="JELLY-138">Character data is flushed by XMLOuput while XML data isn't.</action>
       <action dev="dion" type="update">Move to beanutils 1.7.0.</action>
       <action dev="dion" type="fix" issue="JELLY-45">Scripts set the context URL when executing so that resources are found relative to the current script.</action>
       <action dev="dion" type="add" issue="JELLY-49">Add Regexp taglib</action>
