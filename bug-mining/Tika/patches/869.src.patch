diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/epub/EpubContentParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/epub/EpubContentParser.java
index 94b5caacb..83686d93d 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/epub/EpubContentParser.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/epub/EpubContentParser.java
@@ -29,7 +29,6 @@ import org.apache.tika.mime.MediaType;
 import org.apache.tika.parser.AbstractParser;
 import org.apache.tika.parser.ParseContext;
 import org.apache.tika.sax.OfflineContentHandler;
-import org.apache.tika.sax.XHTMLContentHandler;
 import org.xml.sax.ContentHandler;
 import org.xml.sax.SAXException;
 
@@ -48,12 +47,11 @@ public class EpubContentParser extends AbstractParser {
             InputStream stream, ContentHandler handler,
             Metadata metadata, ParseContext context)
             throws IOException, SAXException, TikaException {
-        final XHTMLContentHandler xhtml =
-                new XHTMLContentHandler(handler, metadata);
+
         SAXParser parser = context.getSAXParser();
         parser.parse(
                 new CloseShieldInputStream(stream),
-                new OfflineContentHandler(xhtml));
+                new OfflineContentHandler(handler));
     }
 
 }
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/epub/EpubParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/epub/EpubParserTest.java
index c9acbeb94..71c91a183 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/epub/EpubParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/epub/EpubParserTest.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
+ * <p>
+ * http://www.apache.org/licenses/LICENSE-2.0
+ * <p>
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -17,42 +17,45 @@
 package org.apache.tika.parser.epub;
 
 import static org.junit.Assert.assertEquals;
-import static org.apache.tika.TikaTest.assertContains;
-
-import java.io.InputStream;
 
+import org.apache.tika.TikaTest;
 import org.apache.tika.metadata.Metadata;
 import org.apache.tika.metadata.TikaCoreProperties;
-import org.apache.tika.parser.ParseContext;
-import org.apache.tika.sax.BodyContentHandler;
 import org.junit.Test;
-import org.xml.sax.ContentHandler;
 
-public class EpubParserTest {
+public class EpubParserTest extends TikaTest {
 
     @Test
     public void testXMLParser() throws Exception {
-        try (InputStream input = EpubParserTest.class.getResourceAsStream(
-                "/test-documents/testEPUB.epub")) {
-            Metadata metadata = new Metadata();
-            ContentHandler handler = new BodyContentHandler();
-            new EpubParser().parse(input, handler, metadata, new ParseContext());
-
-            assertEquals("application/epub+zip",
-                    metadata.get(Metadata.CONTENT_TYPE));
-            assertEquals("en",
-                    metadata.get(TikaCoreProperties.LANGUAGE));
-            assertEquals("This is an ePub test publication for Tika.",
-                    metadata.get(TikaCoreProperties.DESCRIPTION));
-            assertEquals("Apache",
-                    metadata.get(TikaCoreProperties.PUBLISHER));
-
-            String content = handler.toString();
-            assertContains("Plus a simple div", content);
-            assertContains("First item", content);
-            assertContains("The previous headings were subchapters", content);
-            assertContains("Table data", content);
-        }
+
+        XMLResult xmlResult = getXML("testEPUB.epub");
+
+        assertEquals("application/epub+zip",
+                xmlResult.metadata.get(Metadata.CONTENT_TYPE));
+        assertEquals("en",
+                xmlResult.metadata.get(TikaCoreProperties.LANGUAGE));
+        assertEquals("This is an ePub test publication for Tika.",
+                xmlResult.metadata.get(TikaCoreProperties.DESCRIPTION));
+        assertEquals("Apache",
+                xmlResult.metadata.get(TikaCoreProperties.PUBLISHER));
+
+        String content = xmlResult.xml;
+        assertContains("Plus a simple div", content);
+        assertContains("First item", content);
+        assertContains("The previous headings were <strong>subchapters</strong>", content);
+        assertContains("Table data", content);
+        assertContains("This is the text for chapter Two", content);
+
+        //make sure style/script elements aren't extracted
+        assertNotContained("nothing to see here", content);
+        assertNotContained("nor here", content);
+        assertNotContained("font-style", content);
+
+        //make sure that there is only one of each
+        assertContainsCount("<html", content, 1);
+        assertContainsCount("<head", content, 1);
+        assertContainsCount("<body", content, 1);
+
     }
 
 }
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/ibooks/iBooksParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/ibooks/iBooksParserTest.java
index 3dc490c70..e3c56e19d 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/ibooks/iBooksParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/ibooks/iBooksParserTest.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
+ * <p>
+ * http://www.apache.org/licenses/LICENSE-2.0
+ * <p>
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -18,36 +18,41 @@ package org.apache.tika.parser.ibooks;
 
 import static org.junit.Assert.assertEquals;
 
-import java.io.InputStream;
-
+import org.apache.tika.TikaTest;
 import org.apache.tika.metadata.Metadata;
 import org.apache.tika.metadata.TikaCoreProperties;
-import org.apache.tika.parser.ParseContext;
-import org.apache.tika.parser.epub.EpubParser;
-import org.apache.tika.sax.BodyContentHandler;
 import org.junit.Test;
-import org.xml.sax.ContentHandler;
 
-public class iBooksParserTest {
+public class iBooksParserTest extends TikaTest {
 
     @Test
     public void testiBooksParser() throws Exception {
-        try (InputStream input = iBooksParserTest.class.getResourceAsStream(
-                "/test-documents/testiBooks.ibooks")) {
-            Metadata metadata = new Metadata();
-            ContentHandler handler = new BodyContentHandler();
-            new EpubParser().parse(input, handler, metadata, new ParseContext());
-
-            assertEquals("application/x-ibooks+zip",
-                    metadata.get(Metadata.CONTENT_TYPE));
-            assertEquals("en-GB",
-                    metadata.get(TikaCoreProperties.LANGUAGE));
-            assertEquals("iBooks Author v1.0",
-                    metadata.get(TikaCoreProperties.CONTRIBUTOR));
-            assertEquals("Apache",
-                    metadata.get(TikaCoreProperties.CREATOR));
-
-            /* TODO For some reason, the xhtml files in iBooks-style ePub are not parsed properly, and the content comes back empty.git che
+
+        XMLResult xmlResult = getXML("testiBooks.ibooks");
+
+        assertEquals("application/x-ibooks+zip",
+                xmlResult.metadata.get(Metadata.CONTENT_TYPE));
+        assertEquals("en-GB",
+                xmlResult.metadata.get(TikaCoreProperties.LANGUAGE));
+        assertEquals("iBooks Author v1.0",
+                xmlResult.metadata.get(TikaCoreProperties.CONTRIBUTOR));
+        assertEquals("Apache",
+                xmlResult.metadata.get(TikaCoreProperties.CREATOR));
+
+        String content = xmlResult.xml;
+        //appears twice in section 1
+        // (we skip it in searchRefText.xml because of that file's suffix)
+        assertContainsCount("rutur", content, 2);
+        //only appears in section 2
+        assertContains("Morbi", content);
+        //Glossary has no body content so we can't test for that
+
+        //Toc does
+        assertContains("1.1\tUntitled", content);
+
+        //this is a legacy comment...I can't find this content in the current ibooks
+        //test file.  I think we're good?
+        /* TODO For some reason, the xhtml files in iBooks-style ePub are not parsed properly, and the content comes back empty.git che
             String content = handler.toString();
             System.out.println("content="+content);
             assertContains("Plus a simple div", content);
@@ -55,8 +60,7 @@ public class iBooksParserTest {
             assertContains("The previous headings were subchapters", content);
             assertContains("Table data", content);
             assertContains("Lorem ipsum dolor rutur amet", content);
-            */
-        }
-    }
+        */
 
+    }
 }
diff --git a/tika-parsers/src/test/resources/test-documents/testEPUB.epub b/tika-parsers/src/test/resources/test-documents/testEPUB.epub
index a6fc2e634..5965601b5 100644
Binary files a/tika-parsers/src/test/resources/test-documents/testEPUB.epub and b/tika-parsers/src/test/resources/test-documents/testEPUB.epub differ
