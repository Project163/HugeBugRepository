diff --git a/src/java/org/apache/commons/dbcp/datasources/PerUserPoolDataSource.java b/src/java/org/apache/commons/dbcp/datasources/PerUserPoolDataSource.java
index 68f84752..764c6fab 100644
--- a/src/java/org/apache/commons/dbcp/datasources/PerUserPoolDataSource.java
+++ b/src/java/org/apache/commons/dbcp/datasources/PerUserPoolDataSource.java
@@ -443,18 +443,20 @@ public class PerUserPoolDataSource
         PoolKey key = null;
         String name = username + password;
         String dsName = getDataSourceName();
-        Map dsMap = (Map) poolKeys.get(dsName);
-        if (dsMap != null) {
-            key = (PoolKey) dsMap.get(name);
-        }
-        
-        if (key == null) {
-            key = new PoolKey(dsName, name);
-            if (dsMap == null) {
-                dsMap = new HashMap();
-                poolKeys.put(dsName, dsMap);
+        synchronized (poolKeys) {
+            Map dsMap = (Map) poolKeys.get(dsName);
+            if (dsMap != null) {
+                key = (PoolKey) dsMap.get(name);
+            }
+
+            if (key == null) {
+                key = new PoolKey(dsName, name);
+                if (dsMap == null) {
+                    dsMap = new HashMap();
+                    poolKeys.put(dsName, dsMap);
+                }
+                dsMap.put(name, key);
             }
-            dsMap.put(name, key);
         }
         return key;
     }
diff --git a/src/java/org/apache/commons/dbcp/datasources/SharedPoolDataSource.java b/src/java/org/apache/commons/dbcp/datasources/SharedPoolDataSource.java
index e06f442d..104566f9 100644
--- a/src/java/org/apache/commons/dbcp/datasources/SharedPoolDataSource.java
+++ b/src/java/org/apache/commons/dbcp/datasources/SharedPoolDataSource.java
@@ -168,20 +168,29 @@ public class SharedPoolDataSource
         }
 
         PooledConnectionAndInfo info = null;
+        
+        UserPassKey key = null;
+        synchronized (userKeys) {
+            key = getUserPassKey(username, password);
+        }
+        
         try {
-            info = (PooledConnectionAndInfo) pool
-                .borrowObject(getUserPassKey(username, password));
+            info = (PooledConnectionAndInfo) pool.borrowObject(key);
         }
         catch (SQLException ex) {  // Remove bad UserPassKey
-            if ((userKeys != null) && (userKeys.containsKey(username))) {
-                userKeys.remove(username);
+            if (userKeys != null) {
+                synchronized (userKeys) {
+                    if (userKeys.containsKey(username)) {
+                        userKeys.remove(username);
+                    }
+                }
             }
             throw new SQLNestedException(
-                "Could not retrieve connection info from pool", ex);
+                    "Could not retrieve connection info from pool", ex);
         }
         catch (Exception e) {
             throw new SQLNestedException(
-                "Could not retrieve connection info from pool", e);
+                    "Could not retrieve connection info from pool", e);
         }
         return info;
     }
