diff --git a/xbean-naming/src/main/java/org/apache/xbean/naming/context/WritableContext.java b/xbean-naming/src/main/java/org/apache/xbean/naming/context/WritableContext.java
index 68fc9417..8dc45f67 100644
--- a/xbean-naming/src/main/java/org/apache/xbean/naming/context/WritableContext.java
+++ b/xbean-naming/src/main/java/org/apache/xbean/naming/context/WritableContext.java
@@ -19,6 +19,7 @@ package org.apache.xbean.naming.context;
 import java.util.Collections;
 import java.util.HashMap;
 import java.util.Map;
+import java.util.Hashtable;
 import java.util.concurrent.atomic.AtomicReference;
 import java.util.concurrent.locks.Lock;
 import java.util.concurrent.locks.ReentrantLock;
@@ -28,6 +29,8 @@ import javax.naming.ContextNotEmptyException;
 import javax.naming.NameAlreadyBoundException;
 import javax.naming.NamingException;
 import javax.naming.Referenceable;
+import javax.naming.Reference;
+import javax.naming.spi.NamingManager;
 
 import org.apache.xbean.naming.reference.CachingReference;
 
@@ -85,7 +88,18 @@ public class WritableContext extends AbstractFederatedContext {
 
     protected void addBinding(AtomicReference<Map<String, Object>> bindingsRef, String name, String nameInNamespace, Object value, boolean rebind) throws NamingException {
         if (value instanceof Referenceable) {
-            value = ((Referenceable)value).getReference();
+            Reference ref = ((Referenceable)value).getReference();
+            if (ref != null) {
+                try {
+                    Object o = NamingManager.getObjectInstance(ref, null, null, new Hashtable());
+                    if (!value.equals(o)) {
+                        value = ref;
+                    }
+                } catch (Exception e) {
+                    //don't try to bind reference
+                }
+            }
+
         }
         if (cacheReferences) {
             value = CachingReference.wrapReference(getNameInNamespace(name), value);
diff --git a/xbean-naming/src/test/java/org/apache/xbean/naming/context/ReferenceableTest.java b/xbean-naming/src/test/java/org/apache/xbean/naming/context/ReferenceableTest.java
index 3ff306cc..b9f126b2 100644
--- a/xbean-naming/src/test/java/org/apache/xbean/naming/context/ReferenceableTest.java
+++ b/xbean-naming/src/test/java/org/apache/xbean/naming/context/ReferenceableTest.java
@@ -38,7 +38,7 @@ public class ReferenceableTest extends AbstractContextTest {
         context.bind("bar/foo1", foo1);
         Object o1 = context.lookup("bar/foo1");
         assertEquals(foo1, o1);
-        assertNotSame(foo1, o1);
+//        assertNotSame(foo1, o1);
     }
     public void testReferenceable2() throws Exception {
         Context context = new WritableContext();
