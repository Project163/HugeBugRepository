diff --git a/RELEASE-NOTES.txt b/RELEASE-NOTES.txt
index e563ab8d..3c251ed9 100644
--- a/RELEASE-NOTES.txt
+++ b/RELEASE-NOTES.txt
@@ -59,6 +59,7 @@ BUGS FROM PREVIOUS RELEASE
                      Thanks to ArÅ«nas Bendoraitis.
  * [VALIDATOR-331] - IBANCheckDigitTest.createInvalidCodes(String[] codes) uses
                      wrong values.
+ * [VALIDATOR-336] - CUSIPCheckDigit thinks invalid CUSIP is valid.
  * [VALIDATOR-347] - toLowerCase() method is Locale-sensitive and should not be
                      used
  * [VALIDATOR-348] - Update TLD list to latest version (Version 2014123000)
diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 1dd033f6..69270d4d 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -43,6 +43,9 @@ The <action> type attribute can be add,update,fix,remove.
   <body>
 
   <release version="1.4.1" date="tba" description="Maintenance release">
+    <action issue="VALIDATOR-336" dev="sebb" type="fix" >
+      CUSIPCheckDigit thinks invalid CUSIP is valid
+    </action>
     <action issue="VALIDATOR-348" dev="sebb" type="update" >
       Update TLD list to latest version (Version 2014123000)
     </action>
diff --git a/src/main/java/org/apache/commons/validator/routines/checkdigit/CUSIPCheckDigit.java b/src/main/java/org/apache/commons/validator/routines/checkdigit/CUSIPCheckDigit.java
index 0e26f1ce..56258d82 100644
--- a/src/main/java/org/apache/commons/validator/routines/checkdigit/CUSIPCheckDigit.java
+++ b/src/main/java/org/apache/commons/validator/routines/checkdigit/CUSIPCheckDigit.java
@@ -61,16 +61,18 @@ public final class CUSIPCheckDigit extends ModulusCheckDigit {
      *
      * @param character The character to convert
      * @param leftPos The position of the character in the code, counting from left to right
-     * @param rightPos The positionof the character in the code, counting from right to left
+     * @param rightPos The position of the character in the code, counting from right to left
      * @return The integer value of the character
      * @throws CheckDigitException if character is not alphanumeric
      */
     protected int toInt(char character, int leftPos, int rightPos)
             throws CheckDigitException {
         int charValue = Character.getNumericValue(character);
-        if (charValue < 0 || charValue > 35) {
+        // the final character is only allowed to reach 9
+        final int charMax = rightPos == 1 ? 9 : 35;
+        if (charValue < 0 || charValue > charMax) {
             throw new CheckDigitException("Invalid Character[" +
-                    leftPos + "] = '" + charValue + "'");
+                    leftPos + "," + rightPos + "] = '" + charValue + "' out of range 0 to " + charMax);
         }
         return charValue;
     }
diff --git a/src/test/java/org/apache/commons/validator/routines/checkdigit/CUSIPCheckDigitTest.java b/src/test/java/org/apache/commons/validator/routines/checkdigit/CUSIPCheckDigitTest.java
index f91661ee..4ee88052 100644
--- a/src/test/java/org/apache/commons/validator/routines/checkdigit/CUSIPCheckDigitTest.java
+++ b/src/test/java/org/apache/commons/validator/routines/checkdigit/CUSIPCheckDigitTest.java
@@ -51,4 +51,24 @@ public class CUSIPCheckDigitTest extends AbstractCheckDigitTest {
         invalid = new String[] {"0378#3100"};
     }
 
+    private static String invalidCheckDigits[] = {"DUS0421CW",
+                                                  "DUS0421CN",
+                                                  "DUS0421CE"
+    };
+
+    public void testVALIDATOR_336_InvalidCheckDigits() {
+        for (int i = 0; i < invalidCheckDigits.length; i++) {
+            String invalidCheckDigit = invalidCheckDigits[i];
+            assertFalse("Should fail: " + invalidCheckDigit, routine.isValid(invalidCheckDigit));
+        }
+    }
+
+    private static String validCheckDigits[] = {"DUS0421C5"};
+
+    public void testVALIDATOR_336_ValidCheckDigits() {
+        for (int i = 0; i < validCheckDigits.length; i++) {
+            String validCheckDigit = validCheckDigits[i];
+            assertTrue("Should fail: " + validCheckDigit, routine.isValid(validCheckDigit));
+        }
+    }
 }
