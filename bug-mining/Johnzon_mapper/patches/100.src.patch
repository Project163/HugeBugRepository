diff --git a/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MapperConfig.java b/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MapperConfig.java
index fb9f6094..d3ef4646 100644
--- a/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MapperConfig.java
+++ b/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MapperConfig.java
@@ -198,7 +198,7 @@ public /* DON'T MAKE IT HIDDEN */ class MapperConfig implements Cloneable {
         */
         if (Class.class.isInstance(aClass)) {
             final Class<?> clazz = Class.class.cast(aClass);
-            if (clazz.isEnum()) {
+            if (Enum.class.isAssignableFrom(clazz)) {
                 final Adapter<?, ?> enumConverter = new ConverterAdapter(new EnumConverter(clazz));
                 adapters.putIfAbsent(new AdapterKey(String.class, aClass), enumConverter);
                 return enumConverter;
diff --git a/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MappingGeneratorImpl.java b/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MappingGeneratorImpl.java
index d2fe2052..7e4d749b 100644
--- a/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MappingGeneratorImpl.java
+++ b/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MappingGeneratorImpl.java
@@ -79,7 +79,7 @@ public class MappingGeneratorImpl implements MappingGenerator {
                             null, emptyList(), isDeduplicateObjects ? new JsonPointerTracker(null, "/") : null, generator);
                 } else if(writePrimitives(key, objectClass, object, generator)) {
                     // no-op
-                } else if (objectClass.isEnum()) {
+                } else if (Enum.class.isAssignableFrom(objectClass)) {
                     final Adapter adapter = config.findAdapter(objectClass);
                     final String adaptedValue = adapter.from(object).toString(); // we know it ends as String for enums
                     generator.write(key, adaptedValue);
@@ -139,7 +139,7 @@ public class MappingGeneratorImpl implements MappingGenerator {
             }
 
             final Class<?> objectClass = object.getClass();
-            if (objectClass.isEnum()) {
+            if (Enum.class.isAssignableFrom(objectClass)) {
                 final Adapter adapter = config.findAdapter(objectClass);
                 final String adaptedValue = adapter.from(object).toString(); // we know it ends as String for enums
                 generator.write(adaptedValue);
diff --git a/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MappingParserImpl.java b/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MappingParserImpl.java
index a5ed7b3b..1ae08fff 100644
--- a/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MappingParserImpl.java
+++ b/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MappingParserImpl.java
@@ -1098,7 +1098,7 @@ public class MappingParserImpl implements MappingParser {
         }
         if (Class.class.isInstance(aClass)) {
             final Class<?> clazz = Class.class.cast(aClass);
-            if (clazz.isEnum()) {
+            if (Enum.class.isAssignableFrom(clazz)) {
                 final Adapter<?, ?> enumConverter = new ConverterAdapter(new EnumConverter(clazz));
                 config.getAdapters().putIfAbsent(new AdapterKey(String.class, aClass), enumConverter);
                 return enumConverter;
diff --git a/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/Mappings.java b/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/Mappings.java
index 0da829f6..acf5d491 100644
--- a/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/Mappings.java
+++ b/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/Mappings.java
@@ -643,7 +643,7 @@ public class Mappings {
                     }
                 }
             }
-            if (converter == null && type.isEnum()) {
+            if (converter == null && Enum.class.isAssignableFrom(type)) {
                 final AdapterKey key = new AdapterKey(String.class, type);
                 converter = adapters.get(key); // first ensure user didnt override it
                 if (converter == null) {
diff --git a/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/converter/EnumConverter.java b/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/converter/EnumConverter.java
index 4588f548..40001833 100644
--- a/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/converter/EnumConverter.java
+++ b/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/converter/EnumConverter.java
@@ -31,8 +31,10 @@ public class EnumConverter<T extends Enum<T>> implements Converter<T>, Converter
     public EnumConverter(final Class<T> aClass) {
         this.enumType = aClass;
 
-        final T[] enumConstants = aClass.getEnumConstants();
-        values = new HashMap<String, T>(enumConstants.length);
+        final T[] enumConstants = aClass.isEnum() ?
+                aClass.getEnumConstants() :
+                (T[]) aClass.getSuperclass().getEnumConstants();
+        values = new HashMap<>(enumConstants.length);
         for (final T t : enumConstants) {
             values.put(t.name(), t);
         }
