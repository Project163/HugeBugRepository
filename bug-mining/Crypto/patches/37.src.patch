diff --git a/Makefile.common b/Makefile.common
index 2c41b312..7d2e59d1 100644
--- a/Makefile.common
+++ b/Makefile.common
@@ -32,8 +32,8 @@ JAVA  := "$$JAVA_HOME/bin/java"
 JAVAC := "$$JAVA_HOME/bin/javac"
 JAVAH := "$$JAVA_HOME/bin/javah"
 
-OSINFO_CLASS := org.apache.commons.crypto.OSInfo
-OSINFO_PROG := $(TARGET)/classes/org/apache/commons/crypto/OSInfo.class
+OSINFO_CLASS := org.apache.commons.crypto.OsInfo
+OSINFO_PROG := $(TARGET)/classes/org/apache/commons/crypto/OsInfo.class
 
 OS_NAME := $(shell $(JAVA) -cp $(TARGET)/classes $(OSINFO_CLASS) --os)
 OS_ARCH := $(shell $(JAVA) -cp $(TARGET)/classes $(OSINFO_CLASS) --arch)
diff --git a/pom.xml b/pom.xml
index 4fd6e5f5..0d3892d3 100644
--- a/pom.xml
+++ b/pom.xml
@@ -215,7 +215,7 @@ The following provides more details on the included cryptographic software:
     <project.reporting.outputEncoding>${commons.encoding}</project.reporting.outputEncoding>
 
     <!-- The property "target.name" is used to specify the ant target, The All target will use
-    OSInfo.java to detect the OS info and arch to generate the native binary for detected platform.
+    OsInfo.java to detect the OS info and arch to generate the native binary for detected platform.
     User is able to specify the platform by maven profiles.-->
     <target.name>all</target.name>
     <maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
diff --git a/src/main/java/org/apache/commons/crypto/NativeCodeLoader.java b/src/main/java/org/apache/commons/crypto/NativeCodeLoader.java
index 13174314..81589089 100644
--- a/src/main/java/org/apache/commons/crypto/NativeCodeLoader.java
+++ b/src/main/java/org/apache/commons/crypto/NativeCodeLoader.java
@@ -88,12 +88,12 @@ private static File findNativeLibrary() {
 
         // Load an OS-dependent native library inside a jar file
         nativeLibraryPath = "/org/apache/commons/crypto/native/"
-                + OSInfo.getNativeLibFolderPathForCurrentOS();
+                + OsInfo.getNativeLibFolderPathForCurrentOS();
         boolean hasNativeLib = hasResource(nativeLibraryPath + "/"
                 + nativeLibraryName);
         if (!hasNativeLib) {
             String altName = "libcommons-crypto.jnilib";
-            if (OSInfo.getOSName().equals("Mac") && hasResource(nativeLibraryPath + "/" + altName)) {
+            if (OsInfo.getOSName().equals("Mac") && hasResource(nativeLibraryPath + "/" + altName)) {
                 // Fix for openjdk7 for Mac
                 nativeLibraryName = altName;
                 hasNativeLib = true;
@@ -103,7 +103,7 @@ private static File findNativeLibrary() {
         if (!hasNativeLib) {
             String errorMessage = String.format(
                     "no native library is found for os.name=%s and os.arch=%s",
-                    OSInfo.getOSName(), OSInfo.getArchName());
+                    OsInfo.getOSName(), OsInfo.getArchName());
             throw new RuntimeException(errorMessage);
         }
 
diff --git a/src/main/java/org/apache/commons/crypto/OSInfo.java b/src/main/java/org/apache/commons/crypto/OsInfo.java
similarity index 98%
rename from src/main/java/org/apache/commons/crypto/OSInfo.java
rename to src/main/java/org/apache/commons/crypto/OsInfo.java
index cf386f79..41770220 100644
--- a/src/main/java/org/apache/commons/crypto/OSInfo.java
+++ b/src/main/java/org/apache/commons/crypto/OsInfo.java
@@ -24,7 +24,7 @@
 /**
  * Provides OS name and architecture name.
  */
-final class OSInfo {
+final class OsInfo {
     private final static HashMap<String, String> archMapping = new HashMap<>();
 
     /**
@@ -64,9 +64,9 @@ final class OSInfo {
     static final String PPC64 = "ppc64";
 
     /**
-     * The private constructor of {@link OSInfo}.
+     * The private constructor of {@link OsInfo}.
      */
-    private OSInfo() {
+    private OsInfo() {
     }
 
     static {
