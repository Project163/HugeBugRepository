diff --git a/tika-parsers/pom.xml b/tika-parsers/pom.xml
index bb1bd71dc..f246475f8 100644
--- a/tika-parsers/pom.xml
+++ b/tika-parsers/pom.xml
@@ -464,18 +464,23 @@
           <missing>${basedir}/src/test/resources/org/apache/tika/parser/ner/opennlp/ner-person.bin</missing>
         </file>
       </activation>
-      <dependencies>
-        <dependency>
-          <groupId>org.apache.maven</groupId>
-          <artifactId>maven-model</artifactId>
-          <version>3.3.3</version>
-        </dependency>
-      </dependencies>
       <build>
         <plugins>
           <plugin>
-            <groupId>org.codehaus.groovy.maven</groupId>
-            <artifactId>gmaven-plugin</artifactId>
+            <groupId>org.codehaus.gmaven</groupId>
+            <artifactId>groovy-maven-plugin</artifactId>
+            <dependencies>
+              <dependency>
+                <groupId>org.apache.maven</groupId>
+                <artifactId>maven-model</artifactId>
+                <version>3.3.3</version>
+              </dependency>
+              <dependency>
+                <groupId>org.codehaus.groovy</groupId>
+                <artifactId>groovy-all</artifactId>
+                <version>2.4.4</version>
+              </dependency>
+            </dependencies>
             <executions>
               <execution>
                 <id>testSetup</id>
diff --git a/tika-parsers/src/test/resources/org/apache/tika/parser/ner/opennlp/ModelGetter.groovy b/tika-parsers/src/test/resources/org/apache/tika/parser/ner/opennlp/ModelGetter.groovy
index 1a5aa06a0..2f4b26892 100644
--- a/tika-parsers/src/test/resources/org/apache/tika/parser/ner/opennlp/ModelGetter.groovy
+++ b/tika-parsers/src/test/resources/org/apache/tika/parser/ner/opennlp/ModelGetter.groovy
@@ -20,7 +20,26 @@
  * This file downloads Apache OpenNLP NER models for testing the NamedEntityParser
  */
 
-import org.apache.commons.io.IOUtils
+import org.apache.maven.settings.Proxy as MvnProxy
+import java.net.Proxy as JDKProxy
+import groovy.transform.Field
+
+//BEGIN: Global context ; ${settings} is injected by the plugin
+List<MvnProxy> mvnProxies = settings.getProxies()?.findAll{it.isActive()}
+@Field JDKProxy proxy = null
+if (mvnProxies && mvnProxies.size() > 0) {
+    mvnProxy = mvnProxies.get(0)
+    println "Using the first Proxy setting : ${mvnProxy.username}@ ${mvnProxy.host} : ${mvnProxy.port} "
+    proxy = new JDKProxy(JDKProxy.Type.HTTP, new InetSocketAddress(mvnProxy.host, mvnProxy.port))
+    Authenticator.setDefault(new Authenticator(){
+        @Override
+        protected PasswordAuthentication getPasswordAuthentication(){
+            return new PasswordAuthentication(mvnProxy.username, mvnProxy.password?.toCharArray())
+        }
+    })
+    println "Proxy is configured"
+}
+//END : Global Context
 
 /**
  * Copies input stream to output stream, additionally printing the progress.
@@ -35,6 +54,7 @@ def copyWithProgress(InputStream inStr, OutputStream outStr, long totalLength){
     byte[] buffer = new byte[1024 * 4]
     long count = 0
     int len
+
     long tt = System.currentTimeMillis()
     while ((len = inStr.read(buffer)) > 0) {
         outStr.write(buffer, 0, len)
@@ -45,8 +65,8 @@ def copyWithProgress(InputStream inStr, OutputStream outStr, long totalLength){
         }
     }
     println "Copy complete. "
-    IOUtils.closeQuietly(inStr)
-    IOUtils.closeQuietly(outStr)
+    inStr.close()
+    outStr.close()
 }
 
 /**
@@ -56,20 +76,21 @@ def copyWithProgress(InputStream inStr, OutputStream outStr, long totalLength){
  * @return
  */
 def downloadFile(String urlStr, File file) {
-    println "GET : $urlStr -> $file"
-    urlConn = new URL(urlStr).openConnection()
+    println "GET : $urlStr -> $file (Using proxy? ${proxy != null})"
+    url = new URL(urlStr)
+
+    urlConn =  proxy ? url.openConnection(proxy) : url.openConnection()
     contentLength = urlConn.getContentLengthLong()
 
     file.getParentFile().mkdirs()
     inStream = urlConn.getInputStream()
     outStream = new FileOutputStream(file)
     copyWithProgress(inStream, outStream, contentLength)
-    IOUtils.closeQuietly(outStream)
-    IOUtils.closeQuietly(inStream)
+    outStream.close()
+    inStream.close()
     println "Download Complete.."
 }
 
-
 def urlPrefix = "http://opennlp.sourceforge.net/models-1.5"
 def prefixPath = "src/test/resources/org/apache/tika/parser/ner/opennlp/"
 
@@ -90,4 +111,4 @@ for (def entry : modelFiles) {
     if (!file.exists()) {
         downloadFile(entry.value, file)
     }
-}
\ No newline at end of file
+}
