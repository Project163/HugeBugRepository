diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/executable/ExecutableParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/executable/ExecutableParser.java
index 9ba3cc822..1096e9924 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/executable/ExecutableParser.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/executable/ExecutableParser.java
@@ -65,7 +65,7 @@ public class ExecutableParser extends AbstractParser implements MachineMetadata
             throws IOException, SAXException, TikaException {
         // We only do metadata, for now
         XHTMLContentHandler xhtml = new XHTMLContentHandler(handler, metadata);
-
+        xhtml.startDocument();
         // What kind is it?
         byte[] first4 = new byte[4];
         IOUtils.readFully(stream, first4);
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/executable/ExecutableParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/executable/ExecutableParserTest.java
index d2a115d6a..859cc7d00 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/executable/ExecutableParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/executable/ExecutableParserTest.java
@@ -18,66 +18,57 @@ package org.apache.tika.parser.executable;
 
 import static org.junit.Assert.assertEquals;
 
-import java.io.InputStream;
+import java.util.Arrays;
 
+import org.apache.tika.TikaTest;
 import org.apache.tika.metadata.Metadata;
-import org.apache.tika.parser.ParseContext;
-import org.apache.tika.sax.BodyContentHandler;
 import org.junit.Test;
-import org.xml.sax.ContentHandler;
 
-public class ExecutableParserTest {
+public class ExecutableParserTest extends TikaTest {
 
     @Test
     public void testWin32Parser() throws Exception {
-        try (InputStream input = ExecutableParserTest.class.getResourceAsStream(
-                "/test-documents/testWindows-x86-32.exe")) {
-            Metadata metadata = new Metadata();
-            ContentHandler handler = new BodyContentHandler();
-            new ExecutableParser().parse(input, handler, metadata, new ParseContext());
+        XMLResult r = getXML("testWindows-x86-32.exe");
+        Metadata metadata = r.metadata;
 
-            assertEquals("application/x-msdownload",
-                    metadata.get(Metadata.CONTENT_TYPE));
-            assertEquals("2012-05-13T13:40:11Z",
-                    metadata.get(Metadata.CREATION_DATE));
+        //not clear why ExecutableParser is adding instead of
+        //setting CONTENT_TYPE
+        assertContains("application/x-msdownload",
+                Arrays.asList(metadata.getValues(Metadata.CONTENT_TYPE)));
+        assertEquals("2012-05-13T13:40:11Z",
+                metadata.get(Metadata.CREATION_DATE));
 
-            assertEquals(ExecutableParser.MACHINE_x86_32,
-                    metadata.get(ExecutableParser.MACHINE_TYPE));
-            assertEquals("Little",
-                  metadata.get(ExecutableParser.ENDIAN));
-            assertEquals("32",
-                  metadata.get(ExecutableParser.ARCHITECTURE_BITS));
-            assertEquals("Windows",
-                  metadata.get(ExecutableParser.PLATFORM));
+        assertEquals(ExecutableParser.MACHINE_x86_32,
+                metadata.get(ExecutableParser.MACHINE_TYPE));
+        assertEquals("Little",
+                metadata.get(ExecutableParser.ENDIAN));
+        assertEquals("32",
+                metadata.get(ExecutableParser.ARCHITECTURE_BITS));
+        assertEquals("Windows",
+                metadata.get(ExecutableParser.PLATFORM));
+        assertContains("<body />", r.xml); //no text yet
 
-            String content = handler.toString();
-            assertEquals("", content); // No text yet
-        }
     }
     
     @Test
     public void testElfParser_x86_32() throws Exception {
-        try (InputStream input = ExecutableParserTest.class.getResourceAsStream(
-                "/test-documents/testLinux-x86-32")) {
-            Metadata metadata = new Metadata();
-            ContentHandler handler = new BodyContentHandler();
-            new ExecutableParser().parse(input, handler, metadata, new ParseContext());
+        XMLResult r = getXML("testLinux-x86-32");
+        Metadata metadata = r.metadata;
+        assertEquals("application/x-executable",
+                metadata.get(Metadata.CONTENT_TYPE));
 
-            assertEquals("application/x-executable",
-                    metadata.get(Metadata.CONTENT_TYPE));
+        assertEquals(ExecutableParser.MACHINE_x86_32,
+                metadata.get(ExecutableParser.MACHINE_TYPE));
+        assertEquals("Little",
+                metadata.get(ExecutableParser.ENDIAN));
+        assertEquals("32",
+                metadata.get(ExecutableParser.ARCHITECTURE_BITS));
 
-            assertEquals(ExecutableParser.MACHINE_x86_32,
-                    metadata.get(ExecutableParser.MACHINE_TYPE));
-            assertEquals("Little",
-                    metadata.get(ExecutableParser.ENDIAN));
-            assertEquals("32",
-                    metadata.get(ExecutableParser.ARCHITECTURE_BITS));
 //         assertEquals("Linux",
 //               metadata.get(ExecutableParser.PLATFORM));
 
-            String content = handler.toString();
-            assertEquals("", content); // No text yet
-        }
+        assertContains("<body />", r.xml);
+
     }
 
 }
