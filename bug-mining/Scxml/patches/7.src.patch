diff --git a/src/main/java/org/apache/commons/scxml/NotificationRegistry.java b/src/main/java/org/apache/commons/scxml/NotificationRegistry.java
index c6f2435c..9d8014ac 100644
--- a/src/main/java/org/apache/commons/scxml/NotificationRegistry.java
+++ b/src/main/java/org/apache/commons/scxml/NotificationRegistry.java
@@ -56,7 +56,7 @@ public final class NotificationRegistry implements Serializable {
      * @param source The observable this listener wants to listen to
      * @param lst The listener
      */
-    void addListener(final Object source,
+    synchronized void addListener(final Object source,
             final SCXMLListener lst) {
         Set entries = (Set) regs.get(source);
         if (entries == null) {
@@ -72,7 +72,7 @@ public final class NotificationRegistry implements Serializable {
      * @param source The observable this listener wants to stop listening to
      * @param lst The listener
      */
-    void removeListener(final Object source,
+    synchronized void removeListener(final Object source,
             final SCXMLListener lst) {
         Set entries = (Set) regs.get(source);
         if (entries != null) {
@@ -116,7 +116,7 @@ public final class NotificationRegistry implements Serializable {
      * @param source The Observable
      * @param state The TransitionTarget that was entered
      */
-    private void fireOnEntry(final Object source,
+    private synchronized void fireOnEntry(final Object source,
             final TransitionTarget state) {
         Set entries = (Set) regs.get(source);
         if (entries != null) {
@@ -160,7 +160,7 @@ public final class NotificationRegistry implements Serializable {
      * @param source The Observable
      * @param state The TransitionTarget that was exited
      */
-    private void fireOnExit(final Object source,
+    private synchronized void fireOnExit(final Object source,
             final TransitionTarget state) {
         Set entries = (Set) regs.get(source);
         if (entries != null) {
@@ -209,7 +209,7 @@ public final class NotificationRegistry implements Serializable {
      * @param to The destination TransitionTarget
      * @param transition The Transition that was taken
      */
-    private void fireOnTransition(final Object source,
+    private synchronized void fireOnTransition(final Object source,
             final TransitionTarget from, final TransitionTarget to,
             final Transition transition) {
         Set entries = (Set) regs.get(source);
diff --git a/src/main/java/org/apache/commons/scxml/SCInstance.java b/src/main/java/org/apache/commons/scxml/SCInstance.java
index c17bf79e..388b4f34 100644
--- a/src/main/java/org/apache/commons/scxml/SCInstance.java
+++ b/src/main/java/org/apache/commons/scxml/SCInstance.java
@@ -17,6 +17,7 @@
 package org.apache.commons.scxml;
 
 import java.io.Serializable;
+import java.util.Collections;
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.Map;
@@ -86,10 +87,10 @@ public class SCInstance implements Serializable {
      */
     SCInstance(final SCXMLExecutor executor) {
         this.notificationRegistry = new NotificationRegistry();
-        this.contexts = new HashMap();
-        this.histories = new HashMap();
-        this.invokerClasses = new HashMap();
-        this.invokers = new HashMap();
+        this.contexts = Collections.synchronizedMap(new HashMap());
+        this.histories = Collections.synchronizedMap(new HashMap());
+        this.invokerClasses = Collections.synchronizedMap(new HashMap());
+        this.invokers = Collections.synchronizedMap(new HashMap());
         this.evaluator = null;
         this.rootContext = null;
         this.executor = executor;
diff --git a/src/main/java/org/apache/commons/scxml/SCXMLExecutor.java b/src/main/java/org/apache/commons/scxml/SCXMLExecutor.java
index 2a635382..cdc88d9d 100644
--- a/src/main/java/org/apache/commons/scxml/SCXMLExecutor.java
+++ b/src/main/java/org/apache/commons/scxml/SCXMLExecutor.java
@@ -97,7 +97,7 @@ public class SCXMLExecutor implements Serializable {
      * @throws ModelException in case there is a fatal SCXML object
      *            model problem.
      */
-    public void triggerEvents(final TriggerEvent[] evts)
+    public synchronized void triggerEvents(final TriggerEvent[] evts)
             throws ModelException {
         // Set event data, saving old values
         Object[] oldData = setEventData(evts);
@@ -206,7 +206,7 @@ public class SCXMLExecutor implements Serializable {
      * @throws ModelException in case there is a fatal SCXML object
      *         model problem.
      */
-    public void reset() throws ModelException {
+    public synchronized void reset() throws ModelException {
         // Reset all variable contexts
         Context rootCtx = scInstance.getRootContext();
         // Clone root datamodel
@@ -263,7 +263,7 @@ public class SCXMLExecutor implements Serializable {
      *
      * @return The current Status
      */
-    public Status getCurrentStatus() {
+    public synchronized Status getCurrentStatus() {
         return currentStatus;
     }
 
