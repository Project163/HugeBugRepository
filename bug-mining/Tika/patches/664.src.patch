diff --git a/CHANGES.txt b/CHANGES.txt
index 532c96faf..811fa8eab 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -1,5 +1,8 @@
 Release 1.8 - Current Development
 
+  * Translator.translate() Exceptions are now restricted to
+    TikaException and IOException (TIKA-1416).
+
   * Tika now supports MIME detection for Microsoft Extended 
     Makefiles (EMF) (TIKA-1554).
 
diff --git a/tika-core/src/main/java/org/apache/tika/language/translate/DefaultTranslator.java b/tika-core/src/main/java/org/apache/tika/language/translate/DefaultTranslator.java
index 4d6dfd4f3..303b8c3af 100644
--- a/tika-core/src/main/java/org/apache/tika/language/translate/DefaultTranslator.java
+++ b/tika-core/src/main/java/org/apache/tika/language/translate/DefaultTranslator.java
@@ -18,6 +18,9 @@
 package org.apache.tika.language.translate;
 
 import org.apache.tika.config.ServiceLoader;
+import org.apache.tika.exception.TikaException;
+
+import java.io.IOException;
 import java.util.Collections;
 import java.util.Comparator;
 import java.util.List;
@@ -56,11 +59,11 @@ public class DefaultTranslator implements Translator{
         return translators;
     }
 
-    public String translate(String text, String sourceLanguage, String targetLanguage) throws Exception {
+    public String translate(String text, String sourceLanguage, String targetLanguage) throws TikaException, IOException {
         return getDefaultTranslators(loader).get(0).translate(text, sourceLanguage, targetLanguage);
     }
 
-    public String translate(String text, String targetLanguage) throws Exception {
+    public String translate(String text, String targetLanguage) throws TikaException, IOException {
         return getDefaultTranslators(loader).get(0).translate(text, targetLanguage);
     }
 
diff --git a/tika-core/src/main/java/org/apache/tika/language/translate/Translator.java b/tika-core/src/main/java/org/apache/tika/language/translate/Translator.java
index 8b327abd9..f22556597 100644
--- a/tika-core/src/main/java/org/apache/tika/language/translate/Translator.java
+++ b/tika-core/src/main/java/org/apache/tika/language/translate/Translator.java
@@ -16,6 +16,10 @@
  */
 package org.apache.tika.language.translate;
 
+import org.apache.tika.exception.TikaException;
+
+import java.io.IOException;
+
 /**
  * Interface for Translator services.
  * @since Tika 1.6
@@ -34,10 +38,11 @@ public interface Translator {
      * @param sourceLanguage The input text language (for example, "en").
      * @param targetLanguage The desired language to translate to (for example, "fr").
      * @return The translation result. If translation is unavailable, returns the same text back.
-     * @throws Exception When there is an error with the API call.
+     * @throws TikaException When there is an error translating.
+     * @throws java.io.IOException
      * @since Tika 1.6
      */
-    public String translate(String text, String sourceLanguage, String targetLanguage) throws Exception;
+    public String translate(String text, String sourceLanguage, String targetLanguage) throws TikaException, IOException;
 
     /**
      * Translate text to the given language. This method attempts to auto-detect the source language of the text.
@@ -52,10 +57,11 @@ public interface Translator {
      * @param text The text to translate.
      * @param targetLanguage The desired language to translate to (for example, "hi").
      * @return The translation result. If translation is unavailable, returns the same text back.
-     * @throws Exception When there is an error with the API call.
+     * @throws TikaException When there is an error translating.
+     * @throws java.io.IOException
      * @since Tika 1.6
      */
-    public String translate(String text, String targetLanguage) throws Exception;
+    public String translate(String text, String targetLanguage) throws TikaException, IOException;
 
     /**
      * @return true if this Translator is probably able to translate right now.
diff --git a/tika-translate/src/main/java/org/apache/tika/language/translate/CachedTranslator.java b/tika-translate/src/main/java/org/apache/tika/language/translate/CachedTranslator.java
index 64e4794e3..bb226d345 100644
--- a/tika-translate/src/main/java/org/apache/tika/language/translate/CachedTranslator.java
+++ b/tika-translate/src/main/java/org/apache/tika/language/translate/CachedTranslator.java
@@ -18,9 +18,11 @@
 package org.apache.tika.language.translate;
 
 import com.fasterxml.jackson.databind.util.LRUMap;
+import org.apache.tika.exception.TikaException;
 import org.apache.tika.language.LanguageIdentifier;
 import org.apache.tika.language.LanguageProfile;
 
+import java.io.IOException;
 import java.util.HashMap;
 
 /**
@@ -47,7 +49,7 @@ public class CachedTranslator implements Translator {
     }
 
     @Override
-    public String translate(String text, String sourceLanguage, String targetLanguage) throws Exception {
+    public String translate(String text, String sourceLanguage, String targetLanguage) throws TikaException, IOException {
         HashMap<String, String> translationCache = getTranslationCache(sourceLanguage, targetLanguage);
         String translatedText = translationCache.get(text);
         if (translatedText == null) {
@@ -58,7 +60,7 @@ public class CachedTranslator implements Translator {
     }
 
     @Override
-    public String translate(String text, String targetLanguage) throws Exception {
+    public String translate(String text, String targetLanguage) throws TikaException, IOException {
         LanguageIdentifier language = new LanguageIdentifier(
                 new LanguageProfile(text));
         String sourceLanguage = language.getLanguage();
diff --git a/tika-translate/src/main/java/org/apache/tika/language/translate/ExternalTranslator.java b/tika-translate/src/main/java/org/apache/tika/language/translate/ExternalTranslator.java
index 098b8de4b..0b04cf855 100644
--- a/tika-translate/src/main/java/org/apache/tika/language/translate/ExternalTranslator.java
+++ b/tika-translate/src/main/java/org/apache/tika/language/translate/ExternalTranslator.java
@@ -17,6 +17,7 @@
 
 package org.apache.tika.language.translate;
 
+import org.apache.tika.exception.TikaException;
 import org.apache.tika.language.LanguageIdentifier;
 import org.apache.tika.language.LanguageProfile;
 
@@ -91,7 +92,7 @@ public abstract class ExternalTranslator implements Translator {
      * @throws Exception
      */
     @Override
-    public String translate(String text, String targetLanguage) throws Exception {
+    public String translate(String text, String targetLanguage) throws TikaException, IOException {
         LanguageIdentifier language = new LanguageIdentifier(
                 new LanguageProfile(text));
         String sourceLanguage = language.getLanguage();
diff --git a/tika-translate/src/main/java/org/apache/tika/language/translate/GoogleTranslator.java b/tika-translate/src/main/java/org/apache/tika/language/translate/GoogleTranslator.java
index 6dfd756b7..338439d53 100644
--- a/tika-translate/src/main/java/org/apache/tika/language/translate/GoogleTranslator.java
+++ b/tika-translate/src/main/java/org/apache/tika/language/translate/GoogleTranslator.java
@@ -21,6 +21,7 @@ import javax.ws.rs.core.MediaType;
 import javax.ws.rs.core.Response;
 
 import java.io.BufferedReader;
+import java.io.IOException;
 import java.io.InputStream;
 import java.io.InputStreamReader;
 import java.util.Properties;
@@ -29,6 +30,7 @@ import java.util.logging.Logger;
 import com.fasterxml.jackson.databind.JsonNode;
 import com.fasterxml.jackson.databind.ObjectMapper;
 import org.apache.cxf.jaxrs.client.WebClient;
+import org.apache.tika.exception.TikaException;
 import org.apache.tika.io.IOUtils;
 import org.apache.tika.language.LanguageIdentifier;
 import org.apache.tika.language.LanguageProfile;
@@ -78,7 +80,7 @@ public class GoogleTranslator implements Translator {
 
 	@Override
 	public String translate(String text, String sourceLanguage,
-			String targetLanguage) throws Exception {
+			String targetLanguage) throws TikaException, IOException {
 		if (!this.isAvailable)
 			return text;
 		Response response = client.accept(MediaType.APPLICATION_JSON)
@@ -99,7 +101,7 @@ public class GoogleTranslator implements Translator {
 
 	@Override
 	public String translate(String text, String targetLanguage)
-			throws Exception {
+			throws TikaException, IOException {
 		if (!this.isAvailable)
 			return text;
 		LanguageIdentifier language = new LanguageIdentifier(
diff --git a/tika-translate/src/main/java/org/apache/tika/language/translate/Lingo24Translator.java b/tika-translate/src/main/java/org/apache/tika/language/translate/Lingo24Translator.java
index 8bc5423ad..25673bb6a 100644
--- a/tika-translate/src/main/java/org/apache/tika/language/translate/Lingo24Translator.java
+++ b/tika-translate/src/main/java/org/apache/tika/language/translate/Lingo24Translator.java
@@ -21,6 +21,7 @@ import javax.ws.rs.core.MediaType;
 import javax.ws.rs.core.Response;
 
 import java.io.BufferedReader;
+import java.io.IOException;
 import java.io.InputStream;
 import java.io.InputStreamReader;
 import java.util.Properties;
@@ -71,7 +72,7 @@ public class Lingo24Translator implements Translator {
 
     @Override
     public String translate(String text, String sourceLanguage,
-                            String targetLanguage) throws Exception {
+                            String targetLanguage) throws TikaException, IOException {
         if (!this.isAvailable)
             return text;
         Response response = client.accept(MediaType.APPLICATION_JSON)
@@ -96,7 +97,7 @@ public class Lingo24Translator implements Translator {
 
     @Override
     public String translate(String text, String targetLanguage)
-            throws Exception {
+            throws TikaException, IOException {
         if (!this.isAvailable)
             return text;
         LanguageIdentifier language = new LanguageIdentifier(
diff --git a/tika-translate/src/main/java/org/apache/tika/language/translate/MicrosoftTranslator.java b/tika-translate/src/main/java/org/apache/tika/language/translate/MicrosoftTranslator.java
index 85575deba..8e7425313 100644
--- a/tika-translate/src/main/java/org/apache/tika/language/translate/MicrosoftTranslator.java
+++ b/tika-translate/src/main/java/org/apache/tika/language/translate/MicrosoftTranslator.java
@@ -19,6 +19,7 @@ package org.apache.tika.language.translate;
 
 import com.memetix.mst.language.Language;
 import com.memetix.mst.translate.Translate;
+import org.apache.tika.exception.TikaException;
 
 import java.io.IOException;
 import java.io.InputStream;
@@ -77,13 +78,17 @@ public class MicrosoftTranslator implements Translator {
      * @see org.apache.tika.language.translate.Translator
      * @since Tika 1.6
      */
-    public String translate(String text, String sourceLanguage, String targetLanguage) throws Exception {
+    public String translate(String text, String sourceLanguage, String targetLanguage) throws TikaException, IOException {
         if (!available) return text;
         Language source = Language.fromString(sourceLanguage);
         Language target = Language.fromString(targetLanguage);
         Translate.setClientId(clientId);
         Translate.setClientSecret(clientSecret);
-        return Translate.execute(text, source, target);
+        try {
+            return Translate.execute(text, source, target);
+        } catch (Exception e) {
+            throw new TikaException("Error with Microsoft Translation: " + e.getMessage());
+        }
     }
 
     /**
@@ -96,12 +101,16 @@ public class MicrosoftTranslator implements Translator {
      * @see org.apache.tika.language.translate.Translator
      * @since Tika 1.6
      */
-    public String translate(String text, String targetLanguage) throws Exception {
+    public String translate(String text, String targetLanguage) throws TikaException, IOException {
         if (!available) return text;
         Language target = Language.fromString(targetLanguage);
         Translate.setClientId(clientId);
         Translate.setClientSecret(clientSecret);
-        return Translate.execute(text, target);
+        try {
+            return Translate.execute(text, target);
+        } catch (Exception e) {
+            throw new TikaException("Error with Microsoft Translation: " + e.getMessage());
+        }
     }
 
     /**
diff --git a/tika-translate/src/main/java/org/apache/tika/language/translate/MosesTranslator.java b/tika-translate/src/main/java/org/apache/tika/language/translate/MosesTranslator.java
index 912feff23..173f5da33 100644
--- a/tika-translate/src/main/java/org/apache/tika/language/translate/MosesTranslator.java
+++ b/tika-translate/src/main/java/org/apache/tika/language/translate/MosesTranslator.java
@@ -17,6 +17,8 @@
 
 package org.apache.tika.language.translate;
 
+import org.apache.tika.exception.TikaException;
+
 import java.io.BufferedReader;
 import java.io.BufferedWriter;
 import java.io.File;
@@ -75,7 +77,7 @@ public class MosesTranslator extends ExternalTranslator {
     }
 
     @Override
-    public String translate(String text, String sourceLanguage, String targetLanguage) throws Exception {
+    public String translate(String text, String sourceLanguage, String targetLanguage) throws TikaException, IOException {
         if (!isAvailable() || !checkCommand(buildCheckCommand(smtPath), 1)) return text;
         File tmpFile = new File(TMP_FILE_NAME);
         OutputStreamWriter out = new OutputStreamWriter(new FileOutputStream(tmpFile), Charset.defaultCharset());
