diff --git a/src/main/java/org/apache/commons/configuration2/INIConfiguration.java b/src/main/java/org/apache/commons/configuration2/INIConfiguration.java
index 9063ec50..c9f516ab 100644
--- a/src/main/java/org/apache/commons/configuration2/INIConfiguration.java
+++ b/src/main/java/org/apache/commons/configuration2/INIConfiguration.java
@@ -212,6 +212,10 @@ import org.apache.commons.configuration2.tree.TrackedNodeModel;
  * <a href="http://commons.apache.org/proper/commons-configuration/userguide/howto_basicfeatures.html">
  * Basic features and AbstractConfiguration</a> of the user's guide.
  * </p>
+ * <p>
+ * Note that this configuration does not support properties with null values.
+ * Such properties are considered to be section nodes.
+ * </p>
  *
  * @author <a
  *         href="http://commons.apache.org/configuration/team-list.html">Commons
@@ -942,7 +946,7 @@ public class INIConfiguration extends BaseHierarchicalConfiguration implements
      */
     private static boolean isSectionNode(ImmutableNode node)
     {
-        return !node.getChildren().isEmpty();
+        return node.getValue() == null;
     }
 
     /**
diff --git a/src/test/java/org/apache/commons/configuration2/TestINIConfiguration.java b/src/test/java/org/apache/commons/configuration2/TestINIConfiguration.java
index 02924fc7..30b87226 100644
--- a/src/test/java/org/apache/commons/configuration2/TestINIConfiguration.java
+++ b/src/test/java/org/apache/commons/configuration2/TestINIConfiguration.java
@@ -1223,6 +1223,27 @@ public class TestINIConfiguration
                 config.getString("SECTION1.VAR1"));
     }
 
+    /**
+     * Tests whether an empty section can be saved. This is related to
+     * CONFIGURATION-671.
+     */
+    @Test
+    public void testWriteEmptySection()
+            throws ConfigurationException, IOException
+    {
+        final String section = "[EmptySection]";
+        INIConfiguration config = setUpConfig(section);
+        assertEquals("Wrong number of sections", 1,
+                config.getSections().size());
+        assertTrue("Section not found",
+                config.getSections().contains("EmptySection"));
+
+        StringWriter writer = new StringWriter();
+        config.write(writer);
+        assertEquals("Wrong saved configuration",
+                section + LINE_SEPARATOR + LINE_SEPARATOR, writer.toString());
+    }
+
     /**
      * A thread class for testing concurrent access to the global section.
      */
