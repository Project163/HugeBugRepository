diff --git a/src/main/java/org/apache/sling/commons/classloader/impl/Activator.java b/src/main/java/org/apache/sling/commons/classloader/impl/Activator.java
index f363c68..92f68ee 100644
--- a/src/main/java/org/apache/sling/commons/classloader/impl/Activator.java
+++ b/src/main/java/org/apache/sling/commons/classloader/impl/Activator.java
@@ -113,6 +113,12 @@ public class Activator implements SynchronousBundleListener, BundleActivator {
         if ( needsUpdate ) {
             this.unregisterManagerFactory();
             this.registerManagerFactory();
+        } else {
+            // if a new bundle has been added (=resolved), we should
+            // clear the negative cache (see SLING-1302)
+            if ( event.getType() == BundleEvent.RESOLVED ) {
+                this.service.clearNegativeCaches();
+            }
         }
     }
 }
diff --git a/src/main/java/org/apache/sling/commons/classloader/impl/DynamicClassLoaderManagerFactory.java b/src/main/java/org/apache/sling/commons/classloader/impl/DynamicClassLoaderManagerFactory.java
index 3a257d2..273d707 100644
--- a/src/main/java/org/apache/sling/commons/classloader/impl/DynamicClassLoaderManagerFactory.java
+++ b/src/main/java/org/apache/sling/commons/classloader/impl/DynamicClassLoaderManagerFactory.java
@@ -16,8 +16,10 @@
  */
 package org.apache.sling.commons.classloader.impl;
 
+import java.util.ArrayList;
 import java.util.Collections;
 import java.util.HashSet;
+import java.util.List;
 import java.util.Set;
 
 import org.osgi.framework.Bundle;
@@ -40,6 +42,9 @@ public class DynamicClassLoaderManagerFactory
 
     private final Set<Long> usedBundles = Collections.synchronizedSet(new HashSet<Long>());
 
+    /** All created managers. */
+    private final List<DynamicClassLoaderManagerImpl> managers = new ArrayList<DynamicClassLoaderManagerImpl>();
+
     /**
      * Create a new service instance
      * @param ctx The bundle context.
@@ -56,7 +61,12 @@ public class DynamicClassLoaderManagerFactory
      */
     public Object getService(final Bundle bundle,
                              final ServiceRegistration registration) {
-        return new DynamicClassLoaderManagerImpl(this.context, this.pckAdmin, new BundleProxyClassLoader(bundle), this);
+        final DynamicClassLoaderManagerImpl manager =  new DynamicClassLoaderManagerImpl(this.context,
+                this.pckAdmin, new BundleProxyClassLoader(bundle), this);
+        synchronized ( managers ) {
+            managers.add(manager);
+        }
+        return manager;
     }
 
     /**
@@ -66,6 +76,9 @@ public class DynamicClassLoaderManagerFactory
                              final ServiceRegistration registration,
                              final Object service) {
         if ( service != null ) {
+            synchronized ( managers ) {
+                managers.remove(service);
+            }
             ((DynamicClassLoaderManagerImpl)service).deactivate();
         }
     }
@@ -87,4 +100,15 @@ public class DynamicClassLoaderManagerFactory
         final long id = bundle.getBundleId();
         this.usedBundles.add(id);
     }
+
+    /**
+     * Clear the negative caches of all registered managers.
+     */
+    public void clearNegativeCaches() {
+        synchronized ( this.managers ) {
+            for(final DynamicClassLoaderManagerImpl manager : this.managers) {
+                manager.clearNegativeCache();
+            }
+        }
+    }
 }
diff --git a/src/main/java/org/apache/sling/commons/classloader/impl/DynamicClassLoaderManagerImpl.java b/src/main/java/org/apache/sling/commons/classloader/impl/DynamicClassLoaderManagerImpl.java
index b03514c..64d720d 100644
--- a/src/main/java/org/apache/sling/commons/classloader/impl/DynamicClassLoaderManagerImpl.java
+++ b/src/main/java/org/apache/sling/commons/classloader/impl/DynamicClassLoaderManagerImpl.java
@@ -70,6 +70,13 @@ public class DynamicClassLoaderManagerImpl
         this.facade = new ClassLoaderFacade(this);
     }
 
+    /**
+     * Clear the negative cache
+     */
+    public void clearNegativeCache() {
+        this.pckAdminCL.clearNegativeCache();
+    }
+
     private synchronized void updateCache() {
         if ( this.trackingCount < this.getTrackingCount() ) {
             final ServiceReference[] refs = this.getServiceReferences();
diff --git a/src/main/java/org/apache/sling/commons/classloader/impl/PackageAdminClassLoader.java b/src/main/java/org/apache/sling/commons/classloader/impl/PackageAdminClassLoader.java
index d5a3077..1d8986d 100644
--- a/src/main/java/org/apache/sling/commons/classloader/impl/PackageAdminClassLoader.java
+++ b/src/main/java/org/apache/sling/commons/classloader/impl/PackageAdminClassLoader.java
@@ -60,6 +60,13 @@ class PackageAdminClassLoader extends ClassLoader {
         this.factory = factory;
     }
 
+    /**
+     * Clear the negative cache.
+     */
+    public void clearNegativeCache() {
+        negativeClassCache.clear();
+    }
+
     /**
      * Find the bundle for a given package.
      * @param pckName The package name.
