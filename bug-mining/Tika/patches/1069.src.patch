diff --git a/CHANGES.txt b/CHANGES.txt
index 843b25b7a..750a5c904 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -7,6 +7,9 @@ Release 2.0.0 - ???
 
 Release 1.20 - ???
 
+   * Prevent content within <style/> and <script/> elements
+     to be written in the ToTextContentHandler (TIKA-2550).
+
    * Switch child to parent communication to a shared memory-mapped
      file in tika-server's -spawnChild mode.
 
diff --git a/tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java b/tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java
index 4fdeaf358..530eb90db 100755
--- a/tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java
+++ b/tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java
@@ -23,7 +23,9 @@ import java.io.StringWriter;
 import java.io.UnsupportedEncodingException;
 import java.io.Writer;
 import java.nio.charset.Charset;
+import java.util.Locale;
 
+import org.xml.sax.Attributes;
 import org.xml.sax.SAXException;
 import org.xml.sax.helpers.DefaultHandler;
 
@@ -31,11 +33,19 @@ import org.xml.sax.helpers.DefaultHandler;
  * SAX event handler that writes all character content out to a character
  * stream. No escaping or other transformations are made on the character
  * content.
- *
+ * <p>
+ * As of Tika 1.20, this handler ignores content within &lt;script&gt; and
+ * &lt;style&gt; tags.
+ *</p>
  * @since Apache Tika 0.10
  */
 public class ToTextContentHandler extends DefaultHandler {
 
+    private static final String STYLE = "STYLE";
+    private static final String SCRIPT = "SCRIPT";
+    private int styleDepth = 0;
+    private int scriptDepth = 0;
+
     /**
      * The character stream.
      */
@@ -89,6 +99,11 @@ public class ToTextContentHandler extends DefaultHandler {
     @Override
     public void characters(char[] ch, int start, int length)
             throws SAXException {
+
+        if (styleDepth+scriptDepth != 0) {
+            return;
+        }
+
         try {
             writer.write(ch, start, length);
         } catch (IOException e) {
@@ -125,6 +140,32 @@ public class ToTextContentHandler extends DefaultHandler {
         }
     }
 
+    @Override
+    public void startElement(
+            String uri, String localName, String qName, Attributes atts)
+            throws SAXException {
+        String uc = (qName == null) ? "" : qName.toUpperCase(Locale.ENGLISH);
+        if (uc.equals(STYLE)) {
+            styleDepth++;
+        }
+        if (uc.equals(SCRIPT)) {
+            scriptDepth++;
+        }
+    }
+
+    @Override
+    public void endElement(
+            String uri, String localName, String qName)
+            throws SAXException {
+        String uc = (qName == null) ? "" : qName.toUpperCase(Locale.ENGLISH);
+        if (uc.equals(STYLE)) {
+            styleDepth--;
+        }
+        if (uc.equals(SCRIPT)) {
+            scriptDepth--;
+        }
+    }
+
     /**
      * Returns the contents of the internal string buffer where
      * all the received characters have been collected. Only works
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/code/SourceCodeParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/code/SourceCodeParserTest.java
index e6af91d85..5c791f481 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/code/SourceCodeParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/code/SourceCodeParserTest.java
@@ -17,12 +17,16 @@
 package org.apache.tika.parser.code;
 
 import org.apache.tika.TikaTest;
+import org.apache.tika.io.TikaInputStream;
 import org.apache.tika.metadata.Metadata;
 import org.apache.tika.metadata.TikaCoreProperties;
 import org.apache.tika.mime.MediaType;
 import org.apache.tika.parser.AutoDetectParser;
 import org.apache.tika.parser.ParseContext;
+import org.apache.tika.parser.Parser;
+import org.apache.tika.sax.ToTextContentHandler;
 import org.junit.Test;
+import org.xml.sax.ContentHandler;
 
 import java.io.ByteArrayInputStream;
 import java.util.Set;
@@ -91,11 +95,28 @@ public class SourceCodeParserTest extends TikaTest {
         assertTrue(strContent.indexOf("public class HelloWorld {") > 0);
     }
 
-  private Metadata createMetadata(String mimeType) {
-    Metadata metadata = new Metadata();
-    metadata.add(TikaCoreProperties.RESOURCE_NAME_KEY, "testFile");
-    metadata.add(Metadata.CONTENT_TYPE, mimeType);
-    return metadata;
-  }
+    @Test
+    public void testNoMarkupInToTextHandler() throws Exception {
+
+        Parser p = new AutoDetectParser();
+        ContentHandler contentHandler = new ToTextContentHandler();
+        ParseContext parseContext = new ParseContext();
+        try (TikaInputStream tis = TikaInputStream.get(
+                getResourceAsStream("/test-documents/testJAVA.java"))) {
+            p.parse(tis, contentHandler, createMetadata("text/x-java-source"),
+                    parseContext);
+        }
+        String strContent = contentHandler.toString();
+        assertContains("public class HelloWorld {", strContent);
+        assertNotContained("background-color", strContent);
+    }
+
+
+    private Metadata createMetadata(String mimeType) {
+        Metadata metadata = new Metadata();
+        metadata.add(TikaCoreProperties.RESOURCE_NAME_KEY, "testFile");
+        metadata.add(Metadata.CONTENT_TYPE, mimeType);
+        return metadata;
+    }
 
 }
