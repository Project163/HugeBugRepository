diff --git a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-apple-module/src/main/java/org/apache/tika/parser/iwork/iwana/IWork13PackageParser.java b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-apple-module/src/main/java/org/apache/tika/parser/iwork/iwana/IWork13PackageParser.java
index c155cfa1b..99b8c18d4 100644
--- a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-apple-module/src/main/java/org/apache/tika/parser/iwork/iwana/IWork13PackageParser.java
+++ b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-apple-module/src/main/java/org/apache/tika/parser/iwork/iwana/IWork13PackageParser.java
@@ -148,6 +148,7 @@ public class IWork13PackageParser extends AbstractParser {
                 // TODO Decode the snappy stream, and check for the Message Type
                 // =     2 (TN::SheetArchive), it is a numbers file;
                 // = 10000 (TP::DocumentArchive), that's a pages file
+                return UNKNOWN13.getType();
             }
 
             // Unknown
diff --git a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-apple-module/src/test/java/org/apache/tika/parser/iwork/iwana/IWork13ParserTest.java b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-apple-module/src/test/java/org/apache/tika/parser/iwork/iwana/IWork13ParserTest.java
index 99be2cd38..ad25d5f7a 100644
--- a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-apple-module/src/test/java/org/apache/tika/parser/iwork/iwana/IWork13ParserTest.java
+++ b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-apple-module/src/test/java/org/apache/tika/parser/iwork/iwana/IWork13ParserTest.java
@@ -69,7 +69,9 @@ public class IWork13ParserTest extends TikaTest {
         // Currently parsing is a no-op, and we can't get the type without
         //  decoding the Snappy stream
         // TODO Test properly when a full Parser is added
-        assertEquals(0, metadata.size());
+        assertEquals(
+                IWork13PackageParser.IWork13DocumentType.UNKNOWN13.getType().toString(),
+                metadata.get(Metadata.CONTENT_TYPE));
         assertEquals("", handler.toString());
     }
 
@@ -83,7 +85,9 @@ public class IWork13ParserTest extends TikaTest {
         // Currently parsing is a no-op, and we can't get the type without
         //  decoding the Snappy stream
         // TODO Test properly when a full Parser is added
-        assertEquals(0, metadata.size());
+        assertEquals(
+                IWork13PackageParser.IWork13DocumentType.UNKNOWN13.getType().toString(),
+                metadata.get(Metadata.CONTENT_TYPE));
         assertEquals("", handler.toString());
     }
 }
diff --git a/tika-parsers/tika-parsers-standard/tika-parsers-standard-package/src/test/java/org/apache/tika/detect/TestContainerAwareDetector.java b/tika-parsers/tika-parsers-standard/tika-parsers-standard-package/src/test/java/org/apache/tika/detect/TestContainerAwareDetector.java
index e1754ea3b..27967a02a 100644
--- a/tika-parsers/tika-parsers-standard/tika-parsers-standard-package/src/test/java/org/apache/tika/detect/TestContainerAwareDetector.java
+++ b/tika-parsers/tika-parsers-standard/tika-parsers-standard-package/src/test/java/org/apache/tika/detect/TestContainerAwareDetector.java
@@ -30,7 +30,6 @@ import java.util.Random;
 
 import org.apache.poi.poifs.filesystem.POIFSFileSystem;
 import org.junit.jupiter.api.AfterEach;
-import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 
 import org.apache.tika.MultiThreadedTikaTest;
@@ -378,7 +377,6 @@ public class TestContainerAwareDetector extends MultiThreadedTikaTest {
     }
 
     @Test
-    @Disabled("TODO -- fix this")
     public void testDetectIWork2013() throws Exception {
         assertTypeByData("testKeynote2013.key",
                 IWork13PackageParser.IWork13DocumentType.KEYNOTE13.getType().toString());
