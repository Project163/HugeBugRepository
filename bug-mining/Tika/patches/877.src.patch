diff --git a/CHANGES.txt b/CHANGES.txt
index 099444ae2..b44dcf6e0 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -1,5 +1,8 @@
 Release 1.15 - ??
 
+  * Be more parsimonious with BufferedInputStreams via Josh Hight
+    (TIKA-2244).
+
   * Enable handling of hyphenated language codes in TesseractOCRParser
     via Graham Russell (TIKA-2231).
 
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/audio/MidiParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/audio/MidiParser.java
index 656d1aab3..859d3bde8 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/audio/MidiParser.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/audio/MidiParser.java
@@ -16,13 +16,7 @@
  */
 package org.apache.tika.parser.audio;
 
-import java.io.BufferedInputStream;
-import java.io.IOException;
-import java.io.InputStream;
-import java.util.Arrays;
-import java.util.Collections;
-import java.util.HashSet;
-import java.util.Set;
+import static java.nio.charset.StandardCharsets.ISO_8859_1;
 
 import javax.sound.midi.InvalidMidiDataException;
 import javax.sound.midi.MetaMessage;
@@ -31,6 +25,13 @@ import javax.sound.midi.MidiSystem;
 import javax.sound.midi.Patch;
 import javax.sound.midi.Sequence;
 import javax.sound.midi.Track;
+import java.io.BufferedInputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.Arrays;
+import java.util.Collections;
+import java.util.HashSet;
+import java.util.Set;
 
 import org.apache.tika.exception.TikaException;
 import org.apache.tika.metadata.Metadata;
@@ -41,8 +42,6 @@ import org.apache.tika.sax.XHTMLContentHandler;
 import org.xml.sax.ContentHandler;
 import org.xml.sax.SAXException;
 
-import static java.nio.charset.StandardCharsets.ISO_8859_1;
-
 public class MidiParser extends AbstractParser {
 
     /** Serial version UID */
@@ -67,9 +66,11 @@ public class MidiParser extends AbstractParser {
         xhtml.startDocument();
 
         // MidiSystem expects the stream to support the mark feature
-        InputStream buffered = new BufferedInputStream(stream);
+        if (! stream.markSupported()) {
+            stream = new BufferedInputStream(stream);
+        }
         try {
-            Sequence sequence = MidiSystem.getSequence(buffered);
+            Sequence sequence = MidiSystem.getSequence(stream);
 
             Track[] tracks = sequence.getTracks();
             metadata.set("tracks", String.valueOf(tracks.length));
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/pkg/CompressorParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/pkg/CompressorParser.java
index 89864bf3c..f82db545a 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/pkg/CompressorParser.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/pkg/CompressorParser.java
@@ -104,12 +104,9 @@ public class CompressorParser extends AbstractParser {
         // At the end we want to close the compression stream to release
         // any associated resources, but the underlying document stream
         // should not be closed
-        if (stream.markSupported())
-        {
+        if (stream.markSupported()) {
             stream = new CloseShieldInputStream(stream);
-        }
-        else
-        {
+        } else {
             // Ensure that the stream supports the mark feature
             stream = new BufferedInputStream(new CloseShieldInputStream(stream));
         }
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java
index a75109224..76c6fe1b3 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java
@@ -118,9 +118,9 @@ public class PackageParser extends AbstractParser {
             throws IOException, SAXException, TikaException {
        
         // Ensure that the stream supports the mark feature
-        if (! stream.markSupported())
+        if (! stream.markSupported()) {
             stream = new BufferedInputStream(stream);
-        
+        }
         
         TemporaryResources tmp = new TemporaryResources();
         ArchiveInputStream ais = null;
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/wordperfect/WPInputStream.java b/tika-parsers/src/main/java/org/apache/tika/parser/wordperfect/WPInputStream.java
index 9b01aa558..a8527ea6d 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/wordperfect/WPInputStream.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/wordperfect/WPInputStream.java
@@ -39,13 +39,10 @@ class WPInputStream extends InputStream {
      * @param in input stream
      */
     public WPInputStream(InputStream in) {
-        BufferedInputStream bis = null;
-        if (BufferedInputStream.class.isAssignableFrom(in.getClass())) {
-            bis = (BufferedInputStream) in;
-        } else {
-            bis = new BufferedInputStream(in);    
+        if (! in.markSupported()) {
+            in = new BufferedInputStream(in);
         }
-        this.in = new DataInputStream(bis);
+        this.in = new DataInputStream(in);
     }
 
     /**
