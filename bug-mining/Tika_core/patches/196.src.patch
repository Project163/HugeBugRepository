diff --git a/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.java b/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.java
index bb2f5d62e..5f0c24b16 100644
--- a/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.java
+++ b/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.java
@@ -190,7 +190,8 @@ public class RecursiveParserWrapper implements Parser {
      * @return
      */
     private boolean isWriteLimitReached(Throwable t) {
-        if (t.getMessage().indexOf("Your document contained more than") == 0) {
+        if (t.getMessage() != null && 
+                t.getMessage().indexOf("Your document contained more than") == 0) {
             return true;
         } else {
             return t.getCause() != null && isWriteLimitReached(t.getCause());
diff --git a/tika-core/src/test/java/org/apache/tika/io/FilenameUtilsTest.java b/tika-core/src/test/java/org/apache/tika/io/FilenameUtilsTest.java
index aff06fc99..3a4769ca6 100644
--- a/tika-core/src/test/java/org/apache/tika/io/FilenameUtilsTest.java
+++ b/tika-core/src/test/java/org/apache/tika/io/FilenameUtilsTest.java
@@ -49,8 +49,8 @@ public class FilenameUtilsTest {
             FilenameUtils.normalize(null);
             fail("missing check for null parameters");
         } catch (IllegalArgumentException x) {
-            assertTrue(x.getMessage().contains("name"));
-            assertTrue(x.getMessage().contains("not be null"));
+            assertTrue(x.getMessage() != null && x.getMessage().contains("name"));
+            assertTrue(x.getMessage() != null && x.getMessage().contains("not be null"));
         }
     }
 
