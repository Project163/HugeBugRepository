diff --git a/tika-parsers/src/main/java/org/apache/tika/detect/ZipContainerDetector.java b/tika-parsers/src/main/java/org/apache/tika/detect/ZipContainerDetector.java
index eea3502f9..3eee52cd4 100644
--- a/tika-parsers/src/main/java/org/apache/tika/detect/ZipContainerDetector.java
+++ b/tika-parsers/src/main/java/org/apache/tika/detect/ZipContainerDetector.java
@@ -31,6 +31,7 @@ import org.apache.tika.io.IOUtils;
 import org.apache.tika.io.TikaInputStream;
 import org.apache.tika.metadata.Metadata;
 import org.apache.tika.mime.MediaType;
+import org.apache.tika.parser.iwork.IWorkPackageParser;
 
 
 /**
@@ -87,7 +88,12 @@ public class ZipContainerDetector implements ContainerDetector {
                 throw new IOException("Office Open XML File detected, but corrupted - " + e.getMessage());
              }
           } else if(entry.getName().equals("buildVersionHistory.plist")) {
-             // TODO - iWork
+             // This is an iWork document
+             
+             // Reset and ask
+             zip.close();
+             zip = new ZipFile(input.getFile());
+             return IWorkPackageParser.identifyType(zip);
           } else if(entry.getName().equals("META-INF/")) {
              // Java Jar
              return MediaType.application("java-archive");
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkPackageParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkPackageParser.java
index 607eaed8d..ba5a2b63f 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkPackageParser.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkPackageParser.java
@@ -16,6 +16,15 @@
  */
 package org.apache.tika.parser.iwork;
 
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.Arrays;
+import java.util.Collections;
+import java.util.HashSet;
+import java.util.Set;
+import java.util.zip.ZipEntry;
+import java.util.zip.ZipFile;
+
 import org.apache.commons.compress.archivers.ArchiveEntry;
 import org.apache.commons.compress.archivers.ArchiveInputStream;
 import org.apache.commons.compress.archivers.zip.ZipArchiveInputStream;
@@ -29,13 +38,6 @@ import org.apache.tika.parser.Parser;
 import org.xml.sax.ContentHandler;
 import org.xml.sax.SAXException;
 
-import java.io.IOException;
-import java.io.InputStream;
-import java.util.Arrays;
-import java.util.Collections;
-import java.util.HashSet;
-import java.util.Set;
-
 /**
  * A parser for the IWork container files. This includes *.key, *.pages and *.numbers files.
  * This parser delegates the relevant files to {@link IWorkParser} that parsers the content.
@@ -78,4 +80,39 @@ public class IWorkPackageParser implements Parser {
             throws IOException, SAXException, TikaException {
         parse(stream, handler, metadata, new ParseContext());
     }
+    
+    /**
+     * Locates the appropriate index file entry, and reads from that
+     *  the root element of the document. That is used to the identify
+     *  the correct type of the keynote container.
+     */
+    public static MediaType identifyType(ZipFile zip)
+         throws IOException {
+       for (ZipEntry entry : Collections.list(zip.entries())) {
+          if (relevantFileNames.contains(entry.getName())) {
+             // Bingo, found the right entry
+             
+             // Grab the first few hundred bytes of the file
+             // This is quite sick, but it is much quicker and less
+             //  memory intensive than the "proper" way to do it!
+             byte[] data = new byte[400];
+             InputStream stream = zip.getInputStream(entry);
+             stream.read(data);
+             
+             String docStart = new String(data, "UTF-8");
+             if(docStart.contains("ls:document")) {
+                return MediaType.application("vnd.apple.numbers");
+             }
+             if(docStart.contains("sl:document")) {
+                return MediaType.application("vnd.apple.pages");
+             }
+             if(docStart.contains("key:presentation")) {
+                return MediaType.application("vnd.apple.keynote");
+             }
+          }
+       }
+       
+       // Not sure, fallback to the container type
+       return MediaType.application("vnd.apple.iwork");
+    }
 }
diff --git a/tika-parsers/src/test/java/org/apache/tika/detect/TestContainerAwareDetector.java b/tika-parsers/src/test/java/org/apache/tika/detect/TestContainerAwareDetector.java
index 15c0e9f55..a5b712c56 100644
--- a/tika-parsers/src/test/java/org/apache/tika/detect/TestContainerAwareDetector.java
+++ b/tika-parsers/src/test/java/org/apache/tika/detect/TestContainerAwareDetector.java
@@ -172,7 +172,25 @@ public class TestContainerAwareDetector extends TestCase {
     }
     
     public void testDetectIWork() throws Exception {
-	// TODO
+       TikaInputStream tis;
+
+       tis = TikaInputStream.get(getTestDoc("testKeynote.key"));
+       assertEquals(
+             MediaType.application("vnd.apple.keynote"),
+             d.detect(tis, new Metadata())
+       );
+
+       tis = TikaInputStream.get(getTestDoc("testNumbers.numbers"));
+       assertEquals(
+             MediaType.application("vnd.apple.numbers"),
+             d.detect(tis, new Metadata())
+       );
+
+       tis = TikaInputStream.get(getTestDoc("testPages.pages"));
+       assertEquals(
+             MediaType.application("vnd.apple.pages"),
+             d.detect(tis, new Metadata())
+       );
     }
     
     public void testDetectZip() throws Exception {
@@ -184,6 +202,12 @@ public class TestContainerAwareDetector extends TestCase {
              d.detect(tis, new Metadata())
        );
 
+       tis = TikaInputStream.get(getTestDoc("test-zip-of-zip.zip"));
+       assertEquals(
+             MediaType.application("zip"),
+             d.detect(tis, new Metadata())
+       );
+
        tis = TikaInputStream.get(getTestDoc("testJAR.jar"));
        assertEquals(
              MediaType.application("java-archive"),
diff --git a/tika-parsers/src/test/resources/test-documents/test-zip-of-zip.zip b/tika-parsers/src/test/resources/test-documents/test-zip-of-zip.zip
new file mode 100644
index 000000000..f6b3edcc3
Binary files /dev/null and b/tika-parsers/src/test/resources/test-documents/test-zip-of-zip.zip differ
