diff --git a/johnzon-core/src/main/java/org/apache/johnzon/core/JohnzonJsonParserImpl.java b/johnzon-core/src/main/java/org/apache/johnzon/core/JohnzonJsonParserImpl.java
index 59391190..5fa051a5 100644
--- a/johnzon-core/src/main/java/org/apache/johnzon/core/JohnzonJsonParserImpl.java
+++ b/johnzon-core/src/main/java/org/apache/johnzon/core/JohnzonJsonParserImpl.java
@@ -17,6 +17,9 @@
 package org.apache.johnzon.core;
 
 
+import java.util.Map;
+import java.util.stream.Stream;
+
 import javax.json.JsonArray;
 import javax.json.JsonObject;
 import javax.json.JsonValue;
@@ -94,4 +97,34 @@ public abstract class JohnzonJsonParserImpl implements JohnzonJsonParser {
         }
     }
 
+    @Override
+    public Stream<JsonValue> getArrayStream() {
+        //X TODO this implementation is very simplistic
+        //X I find it unintuitive what the spec intends here
+        //X we probably need to improve this
+        return getArray().stream();
+    }
+
+    @Override
+    public Stream<Map.Entry<String, JsonValue>> getObjectStream() {
+        //X TODO this implementation is very simplistic
+        //X I find it unintuitive what the spec intends here
+        //X we probably need to improve this
+        return getObject().entrySet().stream();
+    }
+
+    @Override
+    public Stream<JsonValue> getValueStream() {
+        //X TODO this implementation is very simplistic
+        //X I find it unintuitive what the spec intends here
+        //X we probably need to improve this
+        Event current = current();
+        if (current  == Event.START_ARRAY) {
+            return getArrayStream();
+        }
+        if (current  == Event.START_OBJECT) {
+            return getObject().values().stream();
+        }
+        throw new IllegalStateException(current + " doesn't support getValueStream");
+    }
 }
