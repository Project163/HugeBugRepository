diff --git a/RELEASE-NOTES.txt b/RELEASE-NOTES.txt
index 6c5aac12..ebb54705 100644
--- a/RELEASE-NOTES.txt
+++ b/RELEASE-NOTES.txt
@@ -69,6 +69,7 @@ New Features in 3.2:
 Bugs Fixed in 3.2:
 ==================
 
+* JEXL-285:      For statement variable may seem unaffected by iteration
 * JEXL-282:      Pragmas with antish names are broken
 * JEXL-281:      MethodExecutor incorrectly tests for empty parameters list
 * JEXL-280:      break/continue statements outside of the loop
diff --git a/src/main/java/org/apache/commons/jexl3/internal/Interpreter.java b/src/main/java/org/apache/commons/jexl3/internal/Interpreter.java
index 17a404a9..4427cab0 100644
--- a/src/main/java/org/apache/commons/jexl3/internal/Interpreter.java
+++ b/src/main/java/org/apache/commons/jexl3/internal/Interpreter.java
@@ -682,6 +682,13 @@ public class Interpreter extends InterpreterBase {
         ASTReference loopReference = (ASTReference) node.jjtGetChild(0);
         ASTIdentifier loopVariable = (ASTIdentifier) loopReference.jjtGetChild(0);
         int symbol = loopVariable.getSymbol();
+        // the loop var may be reusing a local var without declaring it properly using 'var...'
+        if (symbol < 0 && frame != null && frame.getScope() != null) {
+            int s = frame.getScope().getSymbol(loopVariable.getName());
+            if (s >= 0) {
+                symbol = s;
+            }
+        }
         /* second objectNode is the variable to iterate */
         Object iterableValue = node.jjtGetChild(1).jjtAccept(this, data);
         // make sure there is a value to iterate on and a statement to execute
diff --git a/src/site/xdoc/changes.xml b/src/site/xdoc/changes.xml
index 91a8d08f..cbdf89d3 100644
--- a/src/site/xdoc/changes.xml
+++ b/src/site/xdoc/changes.xml
@@ -26,6 +26,9 @@
     </properties>
     <body>
         <release version="3.2" date="unreleased">
+            <action dev="henrib" type="fix" issue="JEXL-285"> 
+                For statement variable may seem unaffected by iteration
+            </action>
             <action dev="henrib" type="fix" issue="JEXL-282" due-to="Dmitri Blinov">
                 Pragmas with antish names are broken
             </action>
diff --git a/src/test/java/org/apache/commons/jexl3/Issues200Test.java b/src/test/java/org/apache/commons/jexl3/Issues200Test.java
index 27a9ff32..75b55360 100644
--- a/src/test/java/org/apache/commons/jexl3/Issues200Test.java
+++ b/src/test/java/org/apache/commons/jexl3/Issues200Test.java
@@ -641,6 +641,16 @@ public class Issues200Test extends JexlTestCase {
         public Number identity(Number x) {
             return x;
         }
+        public String[] spread(String str) {
+            if (str == null) {
+                return null;
+            }
+             String[] a = new String[str.length()];
+             for(int i = 0; i < str.length(); ++i) {
+                 a[i] = "" + str.charAt(i);
+             }
+             return a;
+        }
     }
 
     @Test
@@ -709,4 +719,44 @@ public class Issues200Test extends JexlTestCase {
             ctxt.set("z.y", null);
         }
     }
+    
+    @Test
+    public void test279b() throws Exception {
+        final Log logger = null;//LogFactory.getLog(Issues200Test.class);
+        Object result;
+        JexlScript script;
+        JexlContext ctxt = new Context279();
+        ctxt.set("ctxt", ctxt);
+        String src = "(x)->{ spread(x)[0].toString() }";
+        JexlEngine jexl = new JexlBuilder().safe(true).strict(true).create();
+        script = jexl.createScript(src);
+        result = script.execute(ctxt, "abc");
+        Assert.assertEquals("a", result);
+        result = script.execute(ctxt, (Object) null);
+        Assert.assertNull(result);
+    }
+    
+    @Test
+    public void test285() throws Exception {
+        List<String> out = new ArrayList<String>(6);
+        JexlContext ctxt = new MapContext();
+        ctxt.set("$out", out);
+        String src = "for(var b: ['g','h','i']) {\n"
+                + "  var c = b;\n"
+                + "  $out.add(c);\n"
+                + "}\n"
+                + " \n"
+                + "for(c: ['j','k','l']) {\n"
+                + "  $out.add(c);\n"
+                + "}"
+                + " \n"
+                + "$out.size()";
+
+        JexlEngine jexl = new JexlBuilder().safe(false).strict(true).create();
+        JexlScript script = jexl.createScript(src);
+        Object result = script.execute(ctxt, (Object) null);
+        Assert.assertEquals(6, result);
+        List<String> ctl = Arrays.asList("g", "h", "i", "j", "k", "l");
+        Assert.assertEquals(ctl, out);
+    }
 }
