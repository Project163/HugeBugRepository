diff --git a/src/main/java/org/apache/commons/dbcp2/DelegatingPreparedStatement.java b/src/main/java/org/apache/commons/dbcp2/DelegatingPreparedStatement.java
index 66a06e19..df376693 100644
--- a/src/main/java/org/apache/commons/dbcp2/DelegatingPreparedStatement.java
+++ b/src/main/java/org/apache/commons/dbcp2/DelegatingPreparedStatement.java
@@ -27,6 +27,7 @@ import java.sql.Ref;
 import java.sql.ResultSet;
 import java.sql.ResultSetMetaData;
 import java.sql.SQLException;
+import java.sql.Statement;
 import java.sql.Time;
 import java.sql.Timestamp;
 import java.util.Calendar;
@@ -252,7 +253,8 @@ public class DelegatingPreparedStatement extends DelegatingStatement
      */
     @Override
     public String toString() {
-    return getDelegate().toString();
+        Statement statement = getDelegate();
+        return statement == null ? "NULL" : getDelegate().toString();
     }
 
     @Override
diff --git a/src/main/java/org/apache/commons/dbcp2/DelegatingStatement.java b/src/main/java/org/apache/commons/dbcp2/DelegatingStatement.java
index 048e272b..f9ce99ef 100644
--- a/src/main/java/org/apache/commons/dbcp2/DelegatingStatement.java
+++ b/src/main/java/org/apache/commons/dbcp2/DelegatingStatement.java
@@ -129,6 +129,9 @@ public class DelegatingStatement extends AbandonedTrace implements Statement {
      */
     @Override
     public void close() throws SQLException {
+        if (isClosed()) {
+            return;
+        }
         try {
             try {
                 if (_conn != null) {
@@ -159,6 +162,7 @@ public class DelegatingStatement extends AbandonedTrace implements Statement {
         }
         finally {
             _closed = true;
+            _stmt = null;
         }
     }
 
@@ -352,7 +356,7 @@ public class DelegatingStatement extends AbandonedTrace implements Statement {
      */
     @Override
     public String toString() {
-    return _stmt.toString();
+    return _stmt == null ? "NULL" : _stmt.toString();
     }
 
     @Override
diff --git a/src/test/java/org/apache/commons/dbcp2/TestPStmtPoolingBasicDataSource.java b/src/test/java/org/apache/commons/dbcp2/TestPStmtPoolingBasicDataSource.java
index 6ce5d034..08041c52 100644
--- a/src/test/java/org/apache/commons/dbcp2/TestPStmtPoolingBasicDataSource.java
+++ b/src/test/java/org/apache/commons/dbcp2/TestPStmtPoolingBasicDataSource.java
@@ -155,7 +155,7 @@ public class TestPStmtPoolingBasicDataSource extends TestBasicDataSource {
 
         conn.setCatalog("catalog1");
         DelegatingPreparedStatement stmt3 = (DelegatingPreparedStatement) conn.prepareStatement("select 'a' from dual");
-        TesterPreparedStatement inner3 = (TesterPreparedStatement) stmt1.getInnermostDelegate();
+        TesterPreparedStatement inner3 = (TesterPreparedStatement) stmt3.getInnermostDelegate();
         assertEquals("catalog1", inner3.getCatalog());
         stmt3.close();
 
@@ -231,7 +231,7 @@ public class TestPStmtPoolingBasicDataSource extends TestBasicDataSource {
 
     // currently fails with AssertionFailedError: Did not expect any threads to fail expected:<0> but was:<1>
     // The following appears in the console: Unexpected error: ResultSet is closed.
-    public void IGNOREDtestMultipleThreads1() throws Exception {
+    public void testMultipleThreads1() throws Exception {
         ds.setMaxWaitMillis(-1);
         ds.setMaxTotal(5);
         ds.setMaxOpenPreparedStatements(-1);
