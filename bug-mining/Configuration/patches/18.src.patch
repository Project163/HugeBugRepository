diff --git a/src/java/org/apache/commons/configuration/AbstractFileConfiguration.java b/src/java/org/apache/commons/configuration/AbstractFileConfiguration.java
index 862a326d..45cd7ba1 100644
--- a/src/java/org/apache/commons/configuration/AbstractFileConfiguration.java
+++ b/src/java/org/apache/commons/configuration/AbstractFileConfiguration.java
@@ -34,6 +34,8 @@ import java.util.Iterator;
 import org.apache.commons.configuration.reloading.InvariantReloadingStrategy;
 import org.apache.commons.configuration.reloading.ReloadingStrategy;
 import org.apache.commons.lang.StringUtils;
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
 
 /**
  * <p>Partial implementation of the <code>FileConfiguration</code> interface.
@@ -93,6 +95,9 @@ public abstract class AbstractFileConfiguration extends BaseConfiguration implem
     /** Holds a reference to the reloading strategy.*/
     protected ReloadingStrategy strategy;
 
+    /** The logger.*/
+    private Log log = LogFactory.getLog(getClass());
+
     /** A lock object for protecting reload operations.*/
     private Object reloadLock = new Object();
 
@@ -299,7 +304,7 @@ public abstract class AbstractFileConfiguration extends BaseConfiguration implem
             }
             catch (IOException e)
             {
-                e.printStackTrace();
+                log.warn("Could not close input stream", e);
             }
         }
     }
@@ -463,7 +468,7 @@ public abstract class AbstractFileConfiguration extends BaseConfiguration implem
             }
             catch (IOException e)
             {
-                e.printStackTrace();
+                log.warn("Could not close output stream", e);
             }
         }
     }
@@ -770,6 +775,10 @@ public abstract class AbstractFileConfiguration extends BaseConfiguration implem
 
                     if (strategy.reloadingRequired())
                     {
+                        if (log.isInfoEnabled())
+                        {
+                            log.info("Reloading configuration. URL is " + getURL());
+                        }
                         fireEvent(EVENT_RELOAD, null, getURL(), true);
                         setDetailEvents(false);
                         try
@@ -789,7 +798,7 @@ public abstract class AbstractFileConfiguration extends BaseConfiguration implem
                 }
                 catch (Exception e)
                 {
-                    e.printStackTrace();
+                    log.warn("Error when reloading configuration", e);
                     // todo rollback the changes if the file can't be reloaded
                 }
                 finally
diff --git a/src/java/org/apache/commons/configuration/ConfigurationUtils.java b/src/java/org/apache/commons/configuration/ConfigurationUtils.java
index 2d294e43..e15ffe0f 100644
--- a/src/java/org/apache/commons/configuration/ConfigurationUtils.java
+++ b/src/java/org/apache/commons/configuration/ConfigurationUtils.java
@@ -382,6 +382,14 @@ public final class ConfigurationUtils
      */
     public static URL locate(String base, String name)
     {
+        if (log.isDebugEnabled())
+        {
+            StringBuffer buf = new StringBuffer();
+            buf.append("ConfigurationUtils.locate(): base is ").append(base);
+            buf.append(", name is ").append(name);
+            log.debug(buf.toString());
+        }
+
         if (name == null)
         {
             // undefined, always return null
@@ -417,7 +425,7 @@ public final class ConfigurationUtils
                 }
             }
 
-            log.debug("Configuration loaded from the URL " + url);
+            log.debug("Loading configuration from the URL " + url);
         }
         catch (IOException e)
         {
@@ -433,11 +441,11 @@ public final class ConfigurationUtils
                 try
                 {
                     url = file.toURL();
-                    log.debug("Configuration loaded from the absolute path " + name);
+                    log.debug("Loading configuration from the absolute path " + name);
                 }
                 catch (MalformedURLException e)
                 {
-                    e.printStackTrace();
+                    log.warn("Could not obtain URL from file", e);
                 }
             }
         }
@@ -455,12 +463,12 @@ public final class ConfigurationUtils
 
                 if (url != null)
                 {
-                    log.debug("Configuration loaded from the base path " + name);
+                    log.debug("Loading configuration from the path " + file);
                 }
             }
-            catch (IOException e)
+            catch (MalformedURLException e)
             {
-                e.printStackTrace();
+                log.warn("Could not obtain URL from file", e);
             }
         }
 
@@ -477,13 +485,13 @@ public final class ConfigurationUtils
 
                 if (url != null)
                 {
-                    log.debug("Configuration loaded from the home path " + name);
+                    log.debug("Loading configuration from the home path " + file);
                 }
 
             }
-            catch (IOException e)
+            catch (MalformedURLException e)
             {
-                e.printStackTrace();
+                log.warn("Could not obtain URL from file", e);
             }
         }
 
@@ -512,7 +520,7 @@ public final class ConfigurationUtils
 
             if (url != null)
             {
-                log.debug("Configuration loaded from the context classpath (" + resourceName + ")");
+                log.debug("Loading configuration from the context classpath (" + resourceName + ")");
             }
         }
 
@@ -523,7 +531,7 @@ public final class ConfigurationUtils
 
             if (url != null)
             {
-                log.debug("Configuration loaded from the system classpath (" + resourceName + ")");
+                log.debug("Loading configuration from the system classpath (" + resourceName + ")");
             }
         }
         return url;
diff --git a/src/java/org/apache/commons/configuration/plist/XMLPropertyListConfiguration.java b/src/java/org/apache/commons/configuration/plist/XMLPropertyListConfiguration.java
index 1b43b2a6..470aa217 100644
--- a/src/java/org/apache/commons/configuration/plist/XMLPropertyListConfiguration.java
+++ b/src/java/org/apache/commons/configuration/plist/XMLPropertyListConfiguration.java
@@ -495,7 +495,8 @@ public class XMLPropertyListConfiguration extends AbstractHierarchicalFileConfig
             }
             catch (ParseException e)
             {
-                e.printStackTrace();
+                // ignore
+                ;
             }
         }
 
