diff --git a/src/main/java/org/apache/commons/validator/routines/CodeValidator.java b/src/main/java/org/apache/commons/validator/routines/CodeValidator.java
index d9de7945..31111301 100644
--- a/src/main/java/org/apache/commons/validator/routines/CodeValidator.java
+++ b/src/main/java/org/apache/commons/validator/routines/CodeValidator.java
@@ -213,8 +213,12 @@ public final class CodeValidator implements Serializable {
      */
     public Object validate(String input) {
 
-        String code = (input == null ? null : input.trim());
-        if (code != null && code.length() == 0) {
+        if (input == null) {
+            return null;
+        }
+
+        String code = input.trim();
+        if (code.length() == 0) {
             return null;
         }
 
diff --git a/src/test/java/org/apache/commons/validator/routines/CodeValidatorTest.java b/src/test/java/org/apache/commons/validator/routines/CodeValidatorTest.java
index f2a86059..b9f192cb 100644
--- a/src/test/java/org/apache/commons/validator/routines/CodeValidatorTest.java
+++ b/src/test/java/org/apache/commons/validator/routines/CodeValidatorTest.java
@@ -195,6 +195,18 @@ public class CodeValidatorTest extends TestCase {
         assertEquals("Trimmed",      "A",  validator.validate(" A  "));
     }
 
+    public void testValidator294_1() {
+        CodeValidator validator = new CodeValidator((String)null, 0, -1, (CheckDigit)null);
+        assertEquals("Null",         null, validator.validate(null));
+        validator = new CodeValidator((String)null, -1, 0, (CheckDigit)null);
+        assertEquals("Null",         null, validator.validate(null));
+    }
+
+    public void testValidator294_2() {
+        CodeValidator validator = new CodeValidator((String)null, -1, 0, (CheckDigit)null);
+        assertEquals("Null",         null, validator.validate(null));
+    }
+
     /**
      * Test Regular Expression.
      */
