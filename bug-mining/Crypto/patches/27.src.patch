diff --git a/src/main/java/org/apache/commons/crypto/cipher/CryptoCipher.java b/src/main/java/org/apache/commons/crypto/cipher/CryptoCipher.java
index bd494fb6..746a4d1c 100644
--- a/src/main/java/org/apache/commons/crypto/cipher/CryptoCipher.java
+++ b/src/main/java/org/apache/commons/crypto/cipher/CryptoCipher.java
@@ -44,13 +44,6 @@ public interface CryptoCipher extends Closeable {
      */
     CipherTransformation getTransformation();
 
-    /**
-     * Gets the properties for this cipher.
-     *
-     * @return the properties for this cipher.
-     */
-    Properties getProperties();
-
     /**
      * Initializes the cipher with mode, key and iv.
      *
diff --git a/src/main/java/org/apache/commons/crypto/cipher/JceCipher.java b/src/main/java/org/apache/commons/crypto/cipher/JceCipher.java
index 324c75f3..2098b43f 100644
--- a/src/main/java/org/apache/commons/crypto/cipher/JceCipher.java
+++ b/src/main/java/org/apache/commons/crypto/cipher/JceCipher.java
@@ -37,7 +37,6 @@
  * Implements the {@link CryptoCipher} using JCE provider.
  */
 public class JceCipher implements CryptoCipher {
-    private final Properties props;
     private final CipherTransformation transformation;
     private final Cipher cipher;
 
@@ -50,7 +49,6 @@ public class JceCipher implements CryptoCipher {
      */
     public JceCipher(Properties props, CipherTransformation transformation)
             throws GeneralSecurityException {
-        this.props = props;
         this.transformation = transformation;
 
         String provider = getJCEProvider(props);
@@ -71,16 +69,6 @@ public CipherTransformation getTransformation() {
         return transformation;
     }
 
-    /**
-     * Gets the properties for the jce cipher.
-     *
-     * @return the properties for this cipher.
-     */
-    @Override
-    public Properties getProperties() {
-        return props;
-    }
-
     /**
      * Initializes the cipher with mode, key and iv.
      *
diff --git a/src/main/java/org/apache/commons/crypto/cipher/OpensslCipher.java b/src/main/java/org/apache/commons/crypto/cipher/OpensslCipher.java
index 37938c44..a39e7694 100644
--- a/src/main/java/org/apache/commons/crypto/cipher/OpensslCipher.java
+++ b/src/main/java/org/apache/commons/crypto/cipher/OpensslCipher.java
@@ -36,7 +36,6 @@
  * Implements the CryptoCipher using JNI into OpenSSL.
  */
 public class OpensslCipher implements CryptoCipher {
-    private final Properties props;
     private final CipherTransformation transformation;
     private final Openssl cipher;
 
@@ -49,7 +48,6 @@ public class OpensslCipher implements CryptoCipher {
      */
     public OpensslCipher(Properties props, CipherTransformation transformation)
             throws GeneralSecurityException {
-        this.props = props;
         this.transformation = transformation;
 
         String loadingFailureReason = Openssl.getLoadingFailureReason();
@@ -70,16 +68,6 @@ public CipherTransformation getTransformation() {
         return transformation;
     }
 
-    /**
-     * Gets the properties for the openssl cipher.
-     *
-     * @return the properties for this cipher.
-     */
-    @Override
-    public Properties getProperties() {
-        return props;
-    }
-
     /**
      * Initializes the cipher with mode, key and iv.
      *
diff --git a/src/main/java/org/apache/commons/crypto/stream/PositionedCryptoInputStream.java b/src/main/java/org/apache/commons/crypto/stream/PositionedCryptoInputStream.java
index cbd77fb0..55f47c3d 100644
--- a/src/main/java/org/apache/commons/crypto/stream/PositionedCryptoInputStream.java
+++ b/src/main/java/org/apache/commons/crypto/stream/PositionedCryptoInputStream.java
@@ -55,6 +55,11 @@ public class PositionedCryptoInputStream extends CTRCryptoInputStream {
      */
     private final Queue<CipherState> cipherPool = new ConcurrentLinkedQueue<CipherState>();
 
+    /**
+     * properties for constructing a CryptoCipher
+     */
+    private final Properties props;
+
     /**
      * Constructs a {@link PositionedCryptoInputStream}.
      *
@@ -68,8 +73,8 @@ public class PositionedCryptoInputStream extends CTRCryptoInputStream {
      */
     public PositionedCryptoInputStream(Properties props, Input in, byte[] key,
             byte[] iv, long streamOffset) throws IOException {
-        this(in, Utils.getCipherInstance(AES_CTR_NOPADDING, props), Utils
-                .getBufferSize(props), key, iv, streamOffset);
+        this(props, in, Utils.getCipherInstance(AES_CTR_NOPADDING, props),
+                Utils.getBufferSize(props), key, iv, streamOffset);
     }
 
     /**
@@ -83,10 +88,11 @@ public PositionedCryptoInputStream(Properties props, Input in, byte[] key,
      * @param streamOffset the start offset in the data.
      * @throws IOException if an I/O error occurs.
      */
-    protected PositionedCryptoInputStream(Input input, CryptoCipher cipher,
+    protected PositionedCryptoInputStream(Properties props, Input input, CryptoCipher cipher,
             int bufferSize, byte[] key, byte[] iv, long streamOffset)
             throws IOException {
         super(input, cipher, bufferSize, key, iv, streamOffset);
+        this.props = props;
     }
 
     /**
@@ -314,7 +320,7 @@ private CipherState getCipherState() throws IOException {
             CryptoCipher cipher;
             try {
                 cipher = CryptoCipherFactory.getInstance(getCipher()
-                        .getTransformation(), getCipher().getProperties());
+                        .getTransformation(), props);
             } catch (GeneralSecurityException e) {
                 throw new IOException(e);
             }
diff --git a/src/test/java/org/apache/commons/crypto/stream/PositionedCryptoInputStreamTest.java b/src/test/java/org/apache/commons/crypto/stream/PositionedCryptoInputStreamTest.java
index 09b8fd97..1781796e 100644
--- a/src/test/java/org/apache/commons/crypto/stream/PositionedCryptoInputStreamTest.java
+++ b/src/test/java/org/apache/commons/crypto/stream/PositionedCryptoInputStreamTest.java
@@ -92,7 +92,7 @@ public void setUp() throws IOException {
 
     private PositionedCryptoInputStream getCryptoInputStream(
             CryptoCipher cipher, int bufferSize) throws IOException {
-        return new PositionedCryptoInputStream(new PositionedInputForTest(
+        return new PositionedCryptoInputStream(props, new PositionedInputForTest(
                 Arrays.copyOf(encData, encData.length)), cipher, bufferSize,
                 key, iv, 0);
     }
