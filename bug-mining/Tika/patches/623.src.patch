diff --git a/CHANGES.txt b/CHANGES.txt
index aa4aac0af..e1650fa99 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -34,7 +34,8 @@ Release 1.7 - Current Development
     of RecursiveParserWrapper (TIKA-1451).
 
   * Tika now integrates the Geospatial Data Abstraction Library
-    (GDAL) for parsing hundreds of geospatial formats (TIKA-605).
+    (GDAL) for parsing hundreds of geospatial formats (TIKA-605,
+    TIKA-1503).
 
   * ExternalParsers can now use Regexs to specify dynamic keys
    (TIKA-1441).
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/gdal/TestGDALParser.java b/tika-parsers/src/test/java/org/apache/tika/parser/gdal/TestGDALParser.java
index 755701104..54e7b68f1 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/gdal/TestGDALParser.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/gdal/TestGDALParser.java
@@ -135,7 +135,13 @@ public class TestGDALParser extends TikaTest {
 
 	@Test
 	public void testParseFITS() {
+        String fitsFilename = "/test-documents/WFPC2u5780205r_c0fx.fits";
+
 		assumeTrue(canRun());
+        // If the exit code is 1 (meaning FITS isn't supported by the installed version of gdalinfo, don't run this test.
+        String[] fitsCommand = { "gdalinfo", TestGDALParser.class.getResource(fitsFilename).getPath() };
+        assumeTrue(ExternalParser.check(fitsCommand, 1));
+
 		String expectedAllgMin = "-7.319537E1";
 		String expectedAtodcorr = "COMPLETE";
 		String expectedAtodfile = "uref$dbu1405iu.r1h";
@@ -144,7 +150,7 @@ public class TestGDALParser extends TikaTest {
 
 		GDALParser parser = new GDALParser();
 		InputStream stream = TestGDALParser.class
-				.getResourceAsStream("/test-documents/WFPC2u5780205r_c0fx.fits");
+				.getResourceAsStream(fitsFilename);
 		Metadata met = new Metadata();
 		BodyContentHandler handler = new BodyContentHandler();
 		try {
