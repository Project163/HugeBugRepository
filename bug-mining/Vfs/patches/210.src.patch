diff --git a/commons-vfs2/src/main/java/org/apache/commons/vfs2/provider/sftp/SftpFileSystem.java b/commons-vfs2/src/main/java/org/apache/commons/vfs2/provider/sftp/SftpFileSystem.java
index be16b77a..0a4930c4 100644
--- a/commons-vfs2/src/main/java/org/apache/commons/vfs2/provider/sftp/SftpFileSystem.java
+++ b/commons-vfs2/src/main/java/org/apache/commons/vfs2/provider/sftp/SftpFileSystem.java
@@ -58,7 +58,7 @@ public class SftpFileSystem extends AbstractFileSystem {
      */
     private volatile Session session;
 
-    private ChannelSftp idleChannel;
+    private volatile ChannelSftp idleChannel;
 
     private final int connectTimeoutMillis;
 
@@ -89,8 +89,12 @@ public class SftpFileSystem extends AbstractFileSystem {
     @Override
     protected void doCloseCommunicationLink() {
         if (idleChannel != null) {
-            idleChannel.disconnect();
-            idleChannel = null;
+            synchronized (this) {
+                if (idleChannel != null) {
+                    idleChannel.disconnect();
+                    idleChannel = null;
+                }
+            }
         }
 
         if (session != null) {
@@ -108,10 +112,14 @@ public class SftpFileSystem extends AbstractFileSystem {
     protected ChannelSftp getChannel() throws IOException {
         try {
             // Use the pooled channel, or create a new one
-            final ChannelSftp channel;
+            ChannelSftp channel = null;
             if (idleChannel != null) {
-                channel = idleChannel;
-                idleChannel = null;
+                synchronized (this) {
+                    if (idleChannel != null) {
+                        channel = idleChannel;
+                        idleChannel = null;
+                    }
+                }
             } else {
                 channel = (ChannelSftp) getSession().openChannel("sftp");
                 channel.connect(connectTimeoutMillis);
@@ -169,9 +177,15 @@ public class SftpFileSystem extends AbstractFileSystem {
      */
     protected void putChannel(final ChannelSftp channel) {
         if (idleChannel == null) {
-            // put back the channel only if it is still connected
-            if (channel.isConnected() && !channel.isClosed()) {
-                idleChannel = channel;
+            synchronized (this) {
+                if (idleChannel == null) {
+                    // put back the channel only if it is still connected
+                    if (channel.isConnected() && !channel.isClosed()) {
+                        idleChannel = channel;
+                    }
+                } else {
+                    channel.disconnect();
+                }
             }
         } else {
             channel.disconnect();
diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index e17e082d..7b8e857e 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -104,6 +104,10 @@ The <action> type attribute can be add,update,fix,remove.
       <action issue="VFS-711" dev="ggregory" type="fix" due-to="Gary Gregory">
         [SFTP] SftpFileSystem can initialize underlying Session more than once while multithreading.
       </action>
+      <action issue="VFS-662" dev="ggregory" type="fix" due-to="Alexey Abashev, Gary Gregory">
+        [SFTP] SftpFileSystem has Thread-safe issue about idleChannel (#36).
+      </action>
+      
     </release>
     <release version="2.3" date="2019-02-01" description="New features and bug fix release.">
       <action issue="VFS-645" dev="ggregory" type="fix">
