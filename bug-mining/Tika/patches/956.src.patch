diff --git a/CHANGES.txt b/CHANGES.txt
index 72ed77fda..74e486fb0 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -1,5 +1,11 @@
 Release 1.17 - ???
 
+  * RFC822Parser now selects the best alternative for
+    multipart/alternative body components.  This aligns with the
+    behavior of the OutlookParser (TIKA-2478).  Users can select
+    legacy behavior via the "extractAllAlternatives" parameter
+    in the RFC822 parser definition in tika-config.xml.
+
   * Narrow mime detection for ms-owner files and add detection
     for .nls files (TIKA-2469).
 
diff --git a/tika-core/src/test/java/org/apache/tika/TikaTest.java b/tika-core/src/test/java/org/apache/tika/TikaTest.java
index 9fccc7c99..153a5640f 100644
--- a/tika-core/src/test/java/org/apache/tika/TikaTest.java
+++ b/tika-core/src/test/java/org/apache/tika/TikaTest.java
@@ -232,6 +232,16 @@ public abstract class TikaTest {
         return wrapper.getMetadata();
     }
 
+    protected List<Metadata> getRecursiveMetadata(String filePath, Parser parserToWrap, ParseContext parseContext) throws Exception {
+        RecursiveParserWrapper wrapper = new RecursiveParserWrapper(parserToWrap,
+                new BasicContentHandlerFactory(BasicContentHandlerFactory.HANDLER_TYPE.XML, -1));
+        try (InputStream is = getResourceAsStream("/test-documents/" + filePath)) {
+            wrapper.parse(is, new DefaultHandler(), new Metadata(), parseContext);
+        }
+        return wrapper.getMetadata();
+    }
+
+
     /**
      * Basic text extraction.
      * <p>
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java b/tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java
index b3d8644d0..40db8f37d 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java
@@ -16,23 +16,6 @@
  */
 package org.apache.tika.parser.mail;
 
-import static org.apache.tika.utils.DateUtils.MIDDAY;
-import static org.apache.tika.utils.DateUtils.UTC;
-
-import java.io.IOException;
-import java.io.InputStream;
-import java.text.DateFormat;
-import java.text.DateFormatSymbols;
-import java.text.ParseException;
-import java.text.SimpleDateFormat;
-import java.util.Date;
-import java.util.Locale;
-import java.util.Map;
-import java.util.Map.Entry;
-import java.util.TimeZone;
-import java.util.regex.Matcher;
-import java.util.regex.Pattern;
-
 import org.apache.james.mime4j.MimeException;
 import org.apache.james.mime4j.codec.DecodeMonitor;
 import org.apache.james.mime4j.codec.DecoderUtil;
@@ -50,17 +33,47 @@ import org.apache.james.mime4j.message.MaximalBodyDescriptor;
 import org.apache.james.mime4j.parser.ContentHandler;
 import org.apache.james.mime4j.stream.BodyDescriptor;
 import org.apache.james.mime4j.stream.Field;
+import org.apache.tika.exception.TikaException;
 import org.apache.tika.extractor.EmbeddedDocumentExtractor;
 import org.apache.tika.extractor.EmbeddedDocumentUtil;
+import org.apache.tika.io.IOUtils;
 import org.apache.tika.io.TikaInputStream;
 import org.apache.tika.metadata.Message;
 import org.apache.tika.metadata.Metadata;
 import org.apache.tika.metadata.TikaCoreProperties;
 import org.apache.tika.mime.MediaType;
 import org.apache.tika.parser.ParseContext;
+import org.apache.tika.parser.Parser;
+import org.apache.tika.parser.html.HtmlParser;
+import org.apache.tika.parser.rtf.RTFParser;
+import org.apache.tika.parser.txt.TXTParser;
+import org.apache.tika.sax.BodyContentHandler;
+import org.apache.tika.sax.EmbeddedContentHandler;
 import org.apache.tika.sax.XHTMLContentHandler;
 import org.xml.sax.SAXException;
 
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.text.DateFormat;
+import java.text.DateFormatSymbols;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Date;
+import java.util.List;
+import java.util.Locale;
+import java.util.Map;
+import java.util.Map.Entry;
+import java.util.Stack;
+import java.util.TimeZone;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
+import static org.apache.tika.utils.DateUtils.MIDDAY;
+import static org.apache.tika.utils.DateUtils.UTC;
+
 /**
  * Bridge between mime4j's content handler and the generic Sax content handler
  * used by Tika. See
@@ -68,6 +81,8 @@ import org.xml.sax.SAXException;
  */
 class MailContentHandler implements ContentHandler {
 
+    private static final String MULTIPART_ALTERNATIVE = "multipart/alternative";
+
     //TIKA-1970 Mac Mail's format
     private static final Pattern GENERAL_TIME_ZONE_NO_MINUTES_PATTERN =
             Pattern.compile("(?:UTC|GMT)([+-])(\\d?\\d)\\Z");
@@ -125,19 +140,27 @@ class MailContentHandler implements ContentHandler {
         return sdf;
     }
 
+
+    private final XHTMLContentHandler handler;
+    private final Metadata metadata;
+    private final ParseContext parseContext;
     private boolean strictParsing = false;
+    private final boolean extractAllAlternatives;
+    private final EmbeddedDocumentExtractor extractor;
 
-    private XHTMLContentHandler handler;
-    private Metadata metadata;
-    private EmbeddedDocumentExtractor extractor;
+    //this is used to buffer a multipart body that
+    //keeps track of multipart/alternative and its children
+    private Stack<Part> alternativePartBuffer = new Stack<>();
 
-    private boolean inPart = false;
-    private BodyDescriptor part = null;
+    private Stack<BodyDescriptor> parts = new Stack<>();
 
-    MailContentHandler(XHTMLContentHandler xhtml, Metadata metadata, ParseContext context, boolean strictParsing) {
+    MailContentHandler(XHTMLContentHandler xhtml, Metadata metadata,
+                       ParseContext context, boolean strictParsing, boolean extractAllAlternatives) {
         this.handler = xhtml;
         this.metadata = metadata;
+        this.parseContext = context;
         this.strictParsing = strictParsing;
+        this.extractAllAlternatives = extractAllAlternatives;
 
         // Fetch / Build an EmbeddedDocumentExtractor with which
         //  to handle/process the parts/attachments
@@ -146,6 +169,7 @@ class MailContentHandler implements ContentHandler {
         this.extractor = EmbeddedDocumentUtil.getEmbeddedDocumentExtractor(context);
     }
 
+    @Override
     public void body(BodyDescriptor body, InputStream is) throws MimeException,
             IOException {
         // use a different metadata object
@@ -157,9 +181,9 @@ class MailContentHandler implements ContentHandler {
         submd.set(Metadata.CONTENT_ENCODING, body.getCharset());
 
         // TIKA-2455: flag the containing type.
-        if (inPart) {
-            submd.set(Message.MULTIPART_SUBTYPE, part.getSubType());
-            submd.set(Message.MULTIPART_BOUNDARY, part.getBoundary());
+        if (parts.size() > 0) {
+            submd.set(Message.MULTIPART_SUBTYPE, parts.peek().getSubType());
+            submd.set(Message.MULTIPART_BOUNDARY, parts.peek().getBoundary());
         }   
         if (body instanceof MaximalBodyDescriptor) {
             MaximalBodyDescriptor maximalBody = (MaximalBodyDescriptor) body;
@@ -180,20 +204,55 @@ class MailContentHandler implements ContentHandler {
                 submd.set( Metadata.CONTENT_DISPOSITION, contentDisposition.toString() );
             }
         }
+        //if we're in a multipart/alternative or any one of its children
+        //add the bodypart to the latest that was added
+        if (! extractAllAlternatives && alternativePartBuffer.size() > 0) {
+            ByteArrayOutputStream bos = new ByteArrayOutputStream();
+            IOUtils.copy(is, bos);
+            alternativePartBuffer.peek().children.add(new BodyContents(submd, bos.toByteArray()));
+        } else {
+            //else handle as you would any other embedded content
+            try (TikaInputStream tis = TikaInputStream.get(is)) {
+                handleEmbedded(tis, submd);
+            }
+        }
+    }
+
+    private void handleEmbedded(TikaInputStream tis, Metadata metadata) throws MimeException, IOException {
+
+        String disposition = metadata.get(Metadata.CONTENT_DISPOSITION);
+        boolean isInline = false;
+        if (disposition != null) {
+            if (disposition.toLowerCase(Locale.US).contains("inline")) {
+                metadata.set(TikaCoreProperties.EMBEDDED_RESOURCE_TYPE,
+                        TikaCoreProperties.EmbeddedResourceType.INLINE.toString());
+                isInline = true;
+            }
+        }
+        if (! isInline) {
+            metadata.set(TikaCoreProperties.EMBEDDED_RESOURCE_TYPE,
+                    TikaCoreProperties.EmbeddedResourceType.ATTACHMENT.toString());
+        }
 
         try {
-            if (extractor.shouldParseEmbedded(submd)) {
+            if (extractor.shouldParseEmbedded(metadata)) {
                 // Wrap the InputStream before passing on, as the James provided
                 //  one misses many features we might want eg mark/reset
-                TikaInputStream tis = TikaInputStream.get(is);
-                extractor.parseEmbedded(tis, handler, submd, false);
+                extractor.parseEmbedded(tis, handler, metadata, false);
             }
         } catch (SAXException e) {
             throw new MimeException(e);
         }
+
     }
 
+    @Override
     public void endBodyPart() throws MimeException {
+        //if we're buffering for a multipart/alternative
+        //don't write </p></div>
+        if (alternativePartBuffer.size() > 0) {
+            return;
+        }
         try {
             handler.endElement("p");
             handler.endElement("div");
@@ -202,9 +261,11 @@ class MailContentHandler implements ContentHandler {
         }
     }
 
+    @Override
     public void endHeader() throws MimeException {
     }
 
+    @Override
     public void startMessage() throws MimeException {
         try {
             handler.startDocument();
@@ -213,6 +274,7 @@ class MailContentHandler implements ContentHandler {
         }
     }
 
+    @Override
     public void endMessage() throws MimeException {
         try {
             handler.endDocument();
@@ -221,11 +283,29 @@ class MailContentHandler implements ContentHandler {
         }
     }
 
+    @Override
     public void endMultipart() throws MimeException {
-        inPart = false;
-        part = null;
+
+        if (alternativePartBuffer.size() == 1) {
+            Part alternativeRoot = alternativePartBuffer.pop();
+            try {
+                handleBestParts(alternativeRoot);
+            } catch (IOException e) {
+                throw new MimeException(e);
+            }
+        } else if (alternativePartBuffer.size() > 1) {
+            alternativePartBuffer.pop();
+        }
+        //test that parts has something
+        //if it doesn't, there's a problem with the file
+        //e.g. more endMultiPart than startMultipart
+        //we're currently silently swallowing this
+        if (parts.size() > 0) {
+            parts.pop();
+        }
     }
 
+    @Override
     public void epilogue(InputStream is) throws MimeException, IOException {
     }
 
@@ -237,9 +317,9 @@ class MailContentHandler implements ContentHandler {
      * Field.html
      */
     public void field(Field field) throws MimeException {
-        // inPart indicates whether these metadata correspond to the
-        // whole message or its parts
-        if (inPart) {
+        // if we're in a part, skip.
+        // We want to gather only the metadata for the whole msg.
+        if (parts.size() > 0) {
             return;
         }
 
@@ -369,13 +449,21 @@ class MailContentHandler implements ContentHandler {
         }
     }
 
+    @Override
     public void preamble(InputStream is) throws MimeException, IOException {
     }
 
+    @Override
     public void raw(InputStream is) throws MimeException, IOException {
     }
 
+    @Override
     public void startBodyPart() throws MimeException {
+        //if we're buffering for a multipart/alternative
+        //don't write <div><p>
+        if (alternativePartBuffer.size() > 0) {
+            return;
+        }
         try {
             handler.startElement("div", "class", "email-entry");
             handler.startElement("p");
@@ -384,14 +472,33 @@ class MailContentHandler implements ContentHandler {
         }
     }
 
+    @Override
     public void startHeader() throws MimeException {
         // TODO Auto-generated method stub
 
     }
 
+    @Override
     public void startMultipart(BodyDescriptor descr) throws MimeException {
-        inPart = true;
-        part = descr;
+        parts.push(descr);
+
+        if (! extractAllAlternatives) {
+            if (alternativePartBuffer.size() == 0
+                    && MULTIPART_ALTERNATIVE.equalsIgnoreCase(descr.getMimeType())) {
+                Part part = new Part(descr);
+                alternativePartBuffer.push(part);
+            } else if (alternativePartBuffer.size() > 0) {
+                //add the part to the stack
+                Part parent = alternativePartBuffer.peek();
+                Part part = new Part(descr);
+                alternativePartBuffer.push(part);
+
+
+                if (parent != null) {
+                    parent.children.add(part);
+                }
+            }
+        }
     }
 
     private String stripOutFieldPrefix(Field field, String fieldname) {
@@ -403,4 +510,106 @@ class MailContentHandler implements ContentHandler {
         return temp.substring(loc);
     }
 
+    private void handleBestParts(Part part) throws MimeException, IOException {
+        if (part == null) {
+            return;
+        }
+
+        if (part instanceof BodyContents) {
+            handlePart((BodyContents)part);
+            return;
+        }
+
+
+        if (MULTIPART_ALTERNATIVE.equalsIgnoreCase(part.bodyDescriptor.getMimeType())) {
+            int bestPartScore = -1;
+            Part bestPart = null;
+            for (Part alternative : part.children) {
+                int score = score(alternative);
+                if (score > bestPartScore) {
+                    bestPart = alternative;
+                    bestPartScore = score;
+                }
+            }
+            handleBestParts(bestPart);
+        } else {
+            for (Part child : part.children) {
+                handleBestParts(child);
+            }
+        }
+    }
+
+    private void handlePart(BodyContents part) throws MimeException, IOException {
+        String contentType = part.metadata.get(Metadata.CONTENT_TYPE);
+        Parser parser = null;
+        if (MediaType.TEXT_HTML.toString().equalsIgnoreCase(contentType)) {
+            parser =
+                    EmbeddedDocumentUtil.tryToFindExistingLeafParser(HtmlParser.class, parseContext);
+        } else if ("application/rtf".equalsIgnoreCase(contentType)) {
+            parser =
+                    EmbeddedDocumentUtil.tryToFindExistingLeafParser(RTFParser.class, parseContext);
+        } else if (MediaType.TEXT_PLAIN.toString().equalsIgnoreCase(contentType)) {
+            parser =
+                    EmbeddedDocumentUtil.tryToFindExistingLeafParser(TXTParser.class, parseContext);
+        }
+
+
+        if (parser == null) {
+            try (TikaInputStream tis = TikaInputStream.get(part.bytes)) {
+                handleEmbedded(tis, part.metadata);
+            }
+        } else {
+
+            //parse inline
+            try {
+                parser.parse(
+                        new ByteArrayInputStream(part.bytes),
+                        new EmbeddedContentHandler(new BodyContentHandler(handler)),
+                        new Metadata(), parseContext
+                );
+            } catch (SAXException | TikaException e) {
+                throw new MimeException(e);
+            }
+        }
+    }
+
+    private int score(Part part) {
+        if (part == null) {
+            return 0;
+        }
+        if (part instanceof BodyContents) {
+            String contentType = ((BodyContents)part).metadata.get(Metadata.CONTENT_TYPE);
+            if (contentType == null) {
+                return 0;
+            } else if (contentType.equalsIgnoreCase(MediaType.TEXT_PLAIN.toString())) {
+                return 1;
+            } else if (contentType.equalsIgnoreCase("application/rtf")) {
+                //TODO -- is this the right definition in rfc822 for rich text?!
+                return 2;
+            } else if (contentType.equalsIgnoreCase(MediaType.TEXT_HTML.toString())) {
+                return 3;
+            }
+        }
+        return 4;
+    }
+
+    private static class Part {
+        private final BodyDescriptor bodyDescriptor;
+        private final List<Part> children = new ArrayList<>();
+
+        public Part(BodyDescriptor bodyDescriptor) {
+            this.bodyDescriptor = bodyDescriptor;
+        }
+    }
+
+    private static class BodyContents extends Part {
+        private final Metadata metadata;
+        private final byte[] bytes;
+
+        private BodyContents(Metadata metadata, byte[] bytes) {
+            super(null);
+            this.metadata = metadata;
+            this.bytes = bytes;
+        }
+    }
 }
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/mail/RFC822Parser.java b/tika-parsers/src/main/java/org/apache/tika/parser/mail/RFC822Parser.java
index 03bce971d..06a094ff3 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/mail/RFC822Parser.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/mail/RFC822Parser.java
@@ -25,6 +25,7 @@ import org.apache.james.mime4j.MimeException;
 import org.apache.james.mime4j.message.DefaultBodyDescriptorBuilder;
 import org.apache.james.mime4j.parser.MimeStreamParser;
 import org.apache.james.mime4j.stream.MimeConfig;
+import org.apache.tika.config.Field;
 import org.apache.tika.exception.TikaException;
 import org.apache.tika.io.TikaInputStream;
 import org.apache.tika.metadata.Metadata;
@@ -39,7 +40,7 @@ import org.xml.sax.SAXException;
  * Uses apache-mime4j to parse emails. Each part is treated with the
  * corresponding parser and displayed within elements.
  * <p/>
- * A {@link MimeEntityConfig} object can be passed in the parsing context
+ * A {@link MimeConfig} object can be passed in the parsing context
  * to better control the parsing process.
  *
  * @author jnioche@digitalpebble.com
@@ -53,6 +54,9 @@ public class RFC822Parser extends AbstractParser {
     private static final Set<MediaType> SUPPORTED_TYPES = Collections
             .singleton(MediaType.parse("message/rfc822"));
 
+    @Field
+    private boolean extractAllAlternatives = false;
+
     public Set<MediaType> getSupportedTypes(ParseContext context) {
         return SUPPORTED_TYPES;
     }
@@ -72,7 +76,8 @@ public class RFC822Parser extends AbstractParser {
         XHTMLContentHandler xhtml = new XHTMLContentHandler(handler, metadata);
 
         MailContentHandler mch = new MailContentHandler(
-                xhtml, metadata, context, config.isStrictParsing());
+                xhtml, metadata, context, config.isStrictParsing(),
+                extractAllAlternatives);
         parser.setContentHandler(mch);
         parser.setContentDecoding(true);
         
@@ -95,4 +100,19 @@ public class RFC822Parser extends AbstractParser {
         }
     }
 
+    /**
+     * Until version 1.17, Tika handled all body parts as embedded objects (see TIKA-2478).
+     * In 1.17, we modified the parser to select only the best alternative body
+     * parts for multipart/alternative sections, and we inline the content
+     * as we do for .msg files.
+     *
+     * The legacy behavior can be set by setting {@link #extractAllAlternatives}
+     * to <code>true</code>.  As of 1.17, the default value is <code>false</code>
+     *
+     * @param extractAllAlternatives whether or not to extract all alternative parts
+     * @since 1.17
+     */
+    public void setExtractAllAlternatives(boolean extractAllAlternatives) {
+        this.extractAllAlternatives = extractAllAlternatives;
+    }
 }
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractOfficeParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractOfficeParser.java
index ba0ded4a0..53f7dd1b6 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractOfficeParser.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractOfficeParser.java
@@ -113,4 +113,23 @@ public abstract class AbstractOfficeParser extends AbstractParser {
         defaultOfficeParserConfig.getConcatenatePhoneticRuns();
     }
 
+    /**
+     * Some .msg files can contain body content in html, rtf and/or text.
+     * The default behavior is to pick the first non-null value and include only that.
+     * If you'd like to extract all non-null body content, which is likely duplicative,
+     * set this value to true.
+     *
+     * @param extractAllAlternativesFromMSG whether or not to extract all alternative parts from msg files
+     * @since 1.17
+     */
+    @Field
+    public void setExtractAllAlternativesFromMSG(boolean extractAllAlternativesFromMSG) {
+        defaultOfficeParserConfig.setExtractAllAlternativesFromMSG(extractAllAlternativesFromMSG);
+    }
+
+
+    public boolean getExtractAllAlternativesFromMSG() {
+        return defaultOfficeParserConfig.getExtractAllAlternativesFromMSG();
+    }
+
 }
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParserConfig.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParserConfig.java
index 36da3049d..34b865e67 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParserConfig.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParserConfig.java
@@ -17,6 +17,8 @@
 package org.apache.tika.parser.microsoft;
 
 
+import org.apache.tika.config.Field;
+
 import java.io.Serializable;
 
 public class OfficeParserConfig implements Serializable {
@@ -31,6 +33,7 @@ public class OfficeParserConfig implements Serializable {
 
     private boolean useSAXDocxExtractor = false;
     private boolean useSAXPptxExtractor = false;
+    private boolean extractAllAlternativesFromMSG;
 
     /**
      * Sets whether or not MSOffice parsers should extract macros.
@@ -170,6 +173,25 @@ public class OfficeParserConfig implements Serializable {
     public void setConcatenatePhoneticRuns(boolean concatenatePhoneticRuns) {
         this.concatenatePhoneticRuns = concatenatePhoneticRuns;
     }
+
+
+    /**
+     * Some .msg files can contain body content in html, rtf and/or text.
+     * The default behavior is to pick the first non-null value and include only that.
+     * If you'd like to extract all non-null body content, which is likely duplicative,
+     * set this value to true.
+     *
+     * @param extractAllAlternativesFromMSG whether or not to extract all alternative parts
+     * @since 1.17
+     */
+    public void setExtractAllAlternativesFromMSG(boolean extractAllAlternativesFromMSG) {
+        this.extractAllAlternativesFromMSG = extractAllAlternativesFromMSG;
+    }
+
+
+    public boolean getExtractAllAlternativesFromMSG() {
+        return extractAllAlternativesFromMSG;
+    }
 }
 
 
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java
index e4b53855f..649de6790 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java
@@ -53,6 +53,7 @@ import org.apache.poi.hsmf.exceptions.ChunkNotFoundException;
 import org.apache.poi.poifs.filesystem.DirectoryNode;
 import org.apache.poi.poifs.filesystem.NPOIFSFileSystem;
 import org.apache.poi.util.CodePageUtil;
+import org.apache.tika.config.Field;
 import org.apache.tika.exception.TikaException;
 import org.apache.tika.extractor.EmbeddedDocumentUtil;
 import org.apache.tika.io.TikaInputStream;
@@ -61,6 +62,7 @@ import org.apache.tika.metadata.Metadata;
 import org.apache.tika.metadata.Office;
 import org.apache.tika.metadata.Property;
 import org.apache.tika.metadata.TikaCoreProperties;
+import org.apache.tika.mime.MediaType;
 import org.apache.tika.parser.ParseContext;
 import org.apache.tika.parser.Parser;
 import org.apache.tika.parser.html.HtmlEncodingDetector;
@@ -123,6 +125,8 @@ public class OutlookExtractor extends AbstractPOIFSExtractor {
     private final MAPIMessage msg;
     private final ParseContext parseContext;
 
+    private final boolean extractAllAlternatives;
+
     public OutlookExtractor(NPOIFSFileSystem filesystem, ParseContext context) throws TikaException {
         this(filesystem.getRoot(), context);
     }
@@ -130,6 +134,7 @@ public class OutlookExtractor extends AbstractPOIFSExtractor {
     public OutlookExtractor(DirectoryNode root, ParseContext context) throws TikaException {
         super(context);
         this.parseContext = context;
+        this.extractAllAlternatives = context.get(OfficeParserConfig.class).getExtractAllAlternativesFromMSG();
         try {
             this.msg = new MAPIMessage(root);
         } catch (IOException e) {
@@ -240,50 +245,7 @@ public class OutlookExtractor extends AbstractPOIFSExtractor {
                     textChunk = chunk;
                 }
             }
-
-            boolean doneBody = false;
-            xhtml.startElement("div", "class", "message-body");
-            if (htmlChunk != null) {
-                byte[] data = null;
-                if (htmlChunk instanceof ByteChunk) {
-                    data = ((ByteChunk) htmlChunk).getValue();
-                } else if (htmlChunk instanceof StringChunk) {
-                    data = ((StringChunk) htmlChunk).getRawValue();
-                }
-                if (data != null) {
-                    Parser htmlParser =
-                            EmbeddedDocumentUtil.tryToFindExistingLeafParser(HtmlParser.class, parseContext);
-                    if (htmlParser == null) {
-                        htmlParser = new HtmlParser();
-                    }
-                    htmlParser.parse(
-                            new ByteArrayInputStream(data),
-                            new EmbeddedContentHandler(new BodyContentHandler(xhtml)),
-                            new Metadata(), parseContext
-                    );
-                    doneBody = true;
-                }
-            }
-            if (rtfChunk != null && !doneBody) {
-                ByteChunk chunk = (ByteChunk) rtfChunk;
-                MAPIRtfAttribute rtf = new MAPIRtfAttribute(
-                        MAPIProperty.RTF_COMPRESSED, Types.BINARY.getId(), chunk.getValue()
-                );
-                Parser rtfParser =
-                        EmbeddedDocumentUtil.tryToFindExistingLeafParser(RTFParser.class, parseContext);
-                if (rtfParser == null) {
-                    rtfParser = new RTFParser();
-                }
-                rtfParser.parse(
-                        new ByteArrayInputStream(rtf.getData()),
-                        new EmbeddedContentHandler(new BodyContentHandler(xhtml)),
-                        new Metadata(), parseContext);
-                doneBody = true;
-            }
-            if (textChunk != null && !doneBody) {
-                xhtml.element("p", ((StringChunk) textChunk).getValue());
-            }
-            xhtml.endElement("div");
+            handleBodyChunks(htmlChunk, rtfChunk, textChunk, xhtml);
 
             // Process the attachments
             for (AttachmentChunks attachment : msg.getAttachmentFiles()) {
@@ -327,6 +289,110 @@ public class OutlookExtractor extends AbstractPOIFSExtractor {
         }
     }
 
+    private void handleBodyChunks(Chunk htmlChunk, Chunk rtfChunk, Chunk textChunk, XHTMLContentHandler xhtml) throws SAXException, IOException, TikaException {
+
+        if (extractAllAlternatives) {
+            extractAllAlternatives(htmlChunk, rtfChunk, textChunk, xhtml);
+            return;
+        }
+
+        boolean doneBody = false;
+        xhtml.startElement("div", "class", "message-body");
+        if (htmlChunk != null) {
+            byte[] data = null;
+            if (htmlChunk instanceof ByteChunk) {
+                data = ((ByteChunk) htmlChunk).getValue();
+            } else if (htmlChunk instanceof StringChunk) {
+                data = ((StringChunk) htmlChunk).getRawValue();
+            }
+            if (data != null) {
+                Parser htmlParser =
+                        EmbeddedDocumentUtil.tryToFindExistingLeafParser(HtmlParser.class, parseContext);
+                if (htmlParser == null) {
+                    htmlParser = new HtmlParser();
+                }
+                htmlParser.parse(
+                        new ByteArrayInputStream(data),
+                        new EmbeddedContentHandler(new BodyContentHandler(xhtml)),
+                        new Metadata(), parseContext
+                );
+                doneBody = true;
+            }
+        }
+        if (rtfChunk != null && (extractAllAlternatives || !doneBody)) {
+            ByteChunk chunk = (ByteChunk) rtfChunk;
+            MAPIRtfAttribute rtf = new MAPIRtfAttribute(
+                    MAPIProperty.RTF_COMPRESSED, Types.BINARY.getId(), chunk.getValue()
+            );
+            Parser rtfParser =
+                    EmbeddedDocumentUtil.tryToFindExistingLeafParser(RTFParser.class, parseContext);
+            if (rtfParser == null) {
+                rtfParser = new RTFParser();
+            }
+            rtfParser.parse(
+                    new ByteArrayInputStream(rtf.getData()),
+                    new EmbeddedContentHandler(new BodyContentHandler(xhtml)),
+                    new Metadata(), parseContext);
+            doneBody = true;
+        }
+        if (textChunk != null && (extractAllAlternatives || !doneBody)) {
+            xhtml.element("p", ((StringChunk) textChunk).getValue());
+        }
+        xhtml.endElement("div");
+
+    }
+
+    private void extractAllAlternatives(Chunk htmlChunk, Chunk rtfChunk, Chunk textChunk, XHTMLContentHandler xhtml)
+            throws TikaException, SAXException, IOException {
+        if (htmlChunk != null) {
+            byte[] data = getValue(htmlChunk);
+            if (data != null) {
+                handleEmbeddedResource(
+                        TikaInputStream.get(data),
+                        "html-body", null,
+                        MediaType.TEXT_HTML.toString(), xhtml, true
+                );
+            }
+        }
+        if (rtfChunk != null) {
+            ByteChunk chunk = (ByteChunk) rtfChunk;
+            MAPIRtfAttribute rtf = new MAPIRtfAttribute(
+                    MAPIProperty.RTF_COMPRESSED, Types.BINARY.getId(), chunk.getValue()
+            );
+
+            byte[] data = rtf.getData();
+            if (data != null) {
+                handleEmbeddedResource(
+                        TikaInputStream.get(data),
+                        "rtf-body", null,
+                        "application/rtf", xhtml, true
+                );
+            }
+        }
+        if (textChunk != null) {
+            byte[] data = getValue(textChunk);
+            if (data != null) {
+                handleEmbeddedResource(
+                        TikaInputStream.get(data),
+                        "text-body", null,
+                        MediaType.TEXT_PLAIN.toString(), xhtml, true
+                );
+            }
+        }
+
+    }
+
+    //can return null!
+    private byte[] getValue(Chunk chunk) {
+        byte[] data = null;
+        if (chunk instanceof ByteChunk) {
+            data = ((ByteChunk) chunk).getValue();
+        } else if (chunk instanceof StringChunk) {
+            data = ((StringChunk) chunk).getRawValue();
+        }
+        return data;
+    }
+
     private void handleFromTo(Map<String, String[]> headers, Metadata metadata) throws ChunkNotFoundException {
         String from = msg.getDisplayFrom();
         metadata.set(TikaCoreProperties.CREATOR, from);
@@ -659,7 +725,6 @@ public class OutlookExtractor extends AbstractPOIFSExtractor {
         return recipients;
     }
 
-
     private static class Recipient {
         String name;
         String displayName;
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/mail/RFC822ParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/mail/RFC822ParserTest.java
index ce1d7f9c7..7b48f13c4 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/mail/RFC822ParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/mail/RFC822ParserTest.java
@@ -31,24 +31,20 @@ import static org.mockito.Mockito.times;
 import static org.mockito.Mockito.verify;
 
 import java.io.ByteArrayInputStream;
-import java.io.IOException;
 import java.io.InputStream;
 import java.nio.charset.StandardCharsets;
 import java.text.DateFormat;
 import java.text.DateFormatSymbols;
 import java.text.SimpleDateFormat;
-import java.util.ArrayList;
 import java.util.Date;
 import java.util.List;
 import java.util.Locale;
 
 import org.apache.james.mime4j.stream.MimeConfig;
 import org.apache.tika.TikaTest;
-import org.apache.tika.detect.DefaultDetector;
-import org.apache.tika.detect.Detector;
+import org.apache.tika.config.TikaConfig;
 import org.apache.tika.exception.TikaException;
 import org.apache.tika.extractor.ContainerExtractor;
-import org.apache.tika.extractor.EmbeddedDocumentExtractor;
 import org.apache.tika.extractor.ParserContainerExtractor;
 import org.apache.tika.io.TikaInputStream;
 import org.apache.tika.metadata.Message;
@@ -63,10 +59,10 @@ import org.apache.tika.parser.RecursiveParserWrapper;
 import org.apache.tika.parser.ocr.TesseractOCRParserTest;
 import org.apache.tika.sax.BodyContentHandler;
 import org.apache.tika.sax.XHTMLContentHandler;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.xml.sax.Attributes;
 import org.xml.sax.ContentHandler;
-import org.xml.sax.SAXException;
 import org.xml.sax.helpers.DefaultHandler;
 
 public class RFC822ParserTest extends TikaTest {
@@ -78,17 +74,27 @@ public class RFC822ParserTest extends TikaTest {
         return stream;
     }
 
+    //legacy RFC822 behavior...extract every alternative part
+    private static Parser EXTRACT_ALL_ALTERNATIVES_PARSER;
+    private static TikaConfig TIKA_CONFIG;
+
+    @BeforeClass
+    public static void setUp() throws Exception {
+
+        try (InputStream is = getStream("org/apache/tika/parser/mail/tika-config-extract-all-alternatives.xml")) {
+            TIKA_CONFIG = new TikaConfig(is);
+        }
+        EXTRACT_ALL_ALTERNATIVES_PARSER = new AutoDetectParser(TIKA_CONFIG);
+    }
+
     @Test
     public void testSimple() throws Exception {
-        Parser parser = new RFC822Parser();
         Metadata metadata = new Metadata();
         InputStream stream = getStream("test-documents/testRFC822");
         ContentHandler handler = mock(DefaultHandler.class);
-        ParseContext context = new ParseContext();
-        context.set(Parser.class, new AutoDetectParser());
 
         try {
-            parser.parse(stream, handler, metadata, context);
+            EXTRACT_ALL_ALTERNATIVES_PARSER.parse(stream, handler, metadata, new ParseContext());
             verify(handler).startDocument();
             //just one body
             verify(handler).startElement(eq(XHTMLContentHandler.XHTML), eq("p"), eq("p"), any(Attributes.class));
@@ -135,14 +141,13 @@ public class RFC822ParserTest extends TikaTest {
 
     @Test
     public void testMultipart() {
-        Parser parser = new RFC822Parser();
         Metadata metadata = new Metadata();
         InputStream stream = getStream("test-documents/testRFC822-multipart");
         ContentHandler handler = mock(XHTMLContentHandler.class);
         ParseContext context = new ParseContext();
-        context.set(Parser.class, new AutoDetectParser());
+        context.set(Parser.class, EXTRACT_ALL_ALTERNATIVES_PARSER);
         try {
-            parser.parse(stream, handler, metadata, context);
+            EXTRACT_ALL_ALTERNATIVES_PARSER.parse(stream, handler, metadata, context);
             verify(handler).startDocument();
             int bodyExpectedTimes = 4, multipackExpectedTimes = 5;
             // TIKA-1422. TesseractOCRParser interferes with the number of times the handler is invoked.
@@ -161,12 +166,11 @@ public class RFC822ParserTest extends TikaTest {
         }
 
         //repeat, this time looking at content
-        parser = new RFC822Parser();
         metadata = new Metadata();
         stream = getStream("test-documents/testRFC822-multipart");
         handler = new BodyContentHandler();
         try {
-            parser.parse(stream, handler, metadata, context);
+            EXTRACT_ALL_ALTERNATIVES_PARSER.parse(stream, handler, metadata, context);
             //tests correct decoding of quoted printable text, including UTF-8 bytes into Unicode
             String bodyText = handler.toString();
             assertTrue(bodyText.contains("body 1"));
@@ -179,7 +183,6 @@ public class RFC822ParserTest extends TikaTest {
 
     @Test
     public void testQuotedPrintable() {
-        Parser parser = new RFC822Parser();
         Metadata metadata = new Metadata();
         InputStream stream = getStream("test-documents/testRFC822_quoted");
         ContentHandler handler = new BodyContentHandler();
@@ -187,7 +190,7 @@ public class RFC822ParserTest extends TikaTest {
         context.set(Parser.class, new AutoDetectParser());
 
         try {
-            parser.parse(stream, handler, metadata, context);
+            EXTRACT_ALL_ALTERNATIVES_PARSER.parse(stream, handler, metadata, context);
             //tests correct decoding of quoted printable text, including UTF-8 bytes into Unicode
             String bodyText = handler.toString();
             assertTrue(bodyText.contains("D\u00FCsseldorf has non-ascii."));
@@ -200,16 +203,16 @@ public class RFC822ParserTest extends TikaTest {
     }
 
     @Test
-    public void testBase64() {
-        Parser parser = new RFC822Parser();
+    public void testBase64() throws Exception  {
         Metadata metadata = new Metadata();
         InputStream stream = getStream("test-documents/testRFC822_base64");
         ContentHandler handler = new BodyContentHandler();
         ParseContext context = new ParseContext();
-        context.set(Parser.class, new AutoDetectParser());
-
+        context.set(Parser.class, EXTRACT_ALL_ALTERNATIVES_PARSER);
+        //need to pass in hint.  Autodetects text/plain
+        metadata.set(Metadata.CONTENT_TYPE, "message/rfc822");
         try {
-            parser.parse(stream, handler, metadata, context);
+            EXTRACT_ALL_ALTERNATIVES_PARSER.parse(stream, handler, metadata, context);
             //tests correct decoding of base64 text, including ISO-8859-1 bytes into Unicode
             assertContains("Here is some text, with international characters, voil\u00E0!", handler.toString());
         } catch (Exception e) {
@@ -219,13 +222,12 @@ public class RFC822ParserTest extends TikaTest {
 
     @Test
     public void testI18NHeaders() {
-        Parser parser = new RFC822Parser();
         Metadata metadata = new Metadata();
         InputStream stream = getStream("test-documents/testRFC822_i18nheaders");
         ContentHandler handler = mock(DefaultHandler.class);
 
         try {
-            parser.parse(stream, handler, metadata, new ParseContext());
+            EXTRACT_ALL_ALTERNATIVES_PARSER.parse(stream, handler, metadata, new ParseContext());
             //tests correct decoding of internationalized headers, both
             //quoted-printable (Q) and Base64 (B).
             assertEquals("Keld J\u00F8rn Simonsen <keld@dkuug.dk>",
@@ -245,12 +247,11 @@ public class RFC822ParserTest extends TikaTest {
      */
     @Test
     public void testUnusualFromAddress() throws Exception {
-        Parser parser = new RFC822Parser();
         Metadata metadata = new Metadata();
         InputStream stream = getStream("test-documents/testRFC822_oddfrom");
         ContentHandler handler = mock(DefaultHandler.class);
 
-        parser.parse(stream, handler, metadata, new ParseContext());
+        EXTRACT_ALL_ALTERNATIVES_PARSER.parse(stream, handler, metadata, new ParseContext());
         assertEquals("Saved by Windows Internet Explorer 7",
                 metadata.get(TikaCoreProperties.CREATOR));
         assertEquals("Air Permit Programs | Air & Radiation | US EPA",
@@ -272,13 +273,12 @@ public class RFC822ParserTest extends TikaTest {
         String name = inputBuilder.toString();
         byte[] data = ("From: " + name + "\r\n\r\n").getBytes(US_ASCII);
 
-        Parser parser = new RFC822Parser();
         ContentHandler handler = new DefaultHandler();
         Metadata metadata = new Metadata();
         ParseContext context = new ParseContext();
 
         try {
-            parser.parse(
+            EXTRACT_ALL_ALTERNATIVES_PARSER.parse(
                     new ByteArrayInputStream(data), handler, metadata, context);
             fail();
         } catch (TikaException expected) {
@@ -286,7 +286,7 @@ public class RFC822ParserTest extends TikaTest {
 
         MimeConfig config = new MimeConfig.Builder().setMaxHeaderLen(-1).setMaxLineLen(-1).build();
         context.set(MimeConfig.class, config);
-        parser.parse(
+        EXTRACT_ALL_ALTERNATIVES_PARSER.parse(
                 new ByteArrayInputStream(data), handler, metadata, context);
         assertEquals(name.trim(), metadata.get(TikaCoreProperties.CREATOR));
     }
@@ -296,14 +296,13 @@ public class RFC822ParserTest extends TikaTest {
      */
     @Test
     public void testSomeMissingHeaders() throws Exception {
-        Parser parser = new RFC822Parser();
         Metadata metadata = new Metadata();
         InputStream stream = getStream("test-documents/testRFC822-limitedheaders");
         ContentHandler handler = new BodyContentHandler();
         ParseContext context = new ParseContext();
-        context.set(Parser.class, new AutoDetectParser());
+        context.set(Parser.class, EXTRACT_ALL_ALTERNATIVES_PARSER);
 
-        parser.parse(stream, handler, metadata, context);
+        EXTRACT_ALL_ALTERNATIVES_PARSER.parse(stream, handler, metadata, context);
         assertEquals(true, metadata.isMultiValued(TikaCoreProperties.CREATOR));
         assertEquals("xyz", metadata.getValues(TikaCoreProperties.CREATOR)[0]);
         assertEquals("abc", metadata.getValues(TikaCoreProperties.CREATOR)[1]);
@@ -325,13 +324,12 @@ public class RFC822ParserTest extends TikaTest {
      */
     @Test
     public void testEncryptedZipAttachment() throws Exception {
-        Parser parser = new RFC822Parser();
         Metadata metadata = new Metadata();
         ParseContext context = new ParseContext();
-        context.set(Parser.class, new AutoDetectParser());
+        context.set(Parser.class, EXTRACT_ALL_ALTERNATIVES_PARSER);
         InputStream stream = getStream("test-documents/testRFC822_encrypted_zip");
         ContentHandler handler = new BodyContentHandler();
-        parser.parse(stream, handler, metadata, context);
+        EXTRACT_ALL_ALTERNATIVES_PARSER.parse(stream, handler, metadata, context);
 
         // Check we go the metadata
         assertEquals("Juha Haaga <juha.haaga@gmail.com>", metadata.get(Metadata.MESSAGE_FROM));
@@ -356,7 +354,7 @@ public class RFC822ParserTest extends TikaTest {
         });
         stream = getStream("test-documents/testRFC822_encrypted_zip");
         handler = new BodyContentHandler();
-        parser.parse(stream, handler, metadata, context);
+        EXTRACT_ALL_ALTERNATIVES_PARSER.parse(stream, handler, metadata, context);
 
         assertContains("Includes encrypted zip file", handler.toString());
         assertContains("password is \"test\".", handler.toString());
@@ -381,13 +379,12 @@ public class RFC822ParserTest extends TikaTest {
      */
     @Test
     public void testNormalZipAttachment() throws Exception {
-        Parser parser = new RFC822Parser();
         Metadata metadata = new Metadata();
         ParseContext context = new ParseContext();
-        context.set(Parser.class, new AutoDetectParser());
+        context.set(Parser.class, EXTRACT_ALL_ALTERNATIVES_PARSER);
         InputStream stream = getStream("test-documents/testRFC822_normal_zip");
         ContentHandler handler = new BodyContentHandler();
-        parser.parse(stream, handler, metadata, context);
+        EXTRACT_ALL_ALTERNATIVES_PARSER.parse(stream, handler, metadata, context);
 
         // Check we go the metadata
         assertEquals("Juha Haaga <juha.haaga@gmail.com>", metadata.get(Metadata.MESSAGE_FROM));
@@ -413,7 +410,7 @@ public class RFC822ParserTest extends TikaTest {
     @Test
     public void testGetAttachmentsAsEmbeddedResources() throws Exception {
         TrackingHandler tracker = new TrackingHandler();
-        ContainerExtractor ex = new ParserContainerExtractor();
+        ContainerExtractor ex = new ParserContainerExtractor(TIKA_CONFIG);
         try (TikaInputStream tis = TikaInputStream.get(getStream("test-documents/testRFC822-multipart"))) {
             assertEquals(true, ex.isSupported(tis));
             ex.extract(tis, ex, tracker);
@@ -544,7 +541,8 @@ public class RFC822ParserTest extends TikaTest {
 
     @Test
     public void testExtractAttachments() throws Exception {
-        List<Metadata> metadataList = getRecursiveMetadata("testEmailWithPNGAtt.eml");
+        List<Metadata> metadataList = getRecursiveMetadata("testEmailWithPNGAtt.eml",
+                EXTRACT_ALL_ALTERNATIVES_PARSER);
         // Check we get the metadata
         assertEquals("Tika Test <XXXX@apache.org>", metadataList.get(3).get(Metadata.MESSAGE_FROM));
         assertEquals("Test Attachment Email", metadataList.get(3).get(TikaCoreProperties.TITLE));
@@ -561,7 +559,8 @@ public class RFC822ParserTest extends TikaTest {
 
     @Test
     public void testEmbeddedMetadata() throws Exception {
-        List<Metadata> seenMetadata = getRecursiveMetadata("testRFC822-multipart");
+        List<Metadata> seenMetadata = getRecursiveMetadata("testRFC822-multipart",
+                EXTRACT_ALL_ALTERNATIVES_PARSER);
 
         assertEquals(4, seenMetadata.size());
         assertEquals(null, seenMetadata.get(1).get(Metadata.CONTENT_DISPOSITION));
@@ -577,8 +576,7 @@ public class RFC822ParserTest extends TikaTest {
 
     @Test
     public void testMultipartFlags() throws Exception {
-
-        List<Metadata> metadataList = getRecursiveMetadata("testRFC822-multipart");
+        List<Metadata> metadataList = getRecursiveMetadata("testRFC822-multipart", EXTRACT_ALL_ALTERNATIVES_PARSER);
         // Check the root metadata.
         assertEquals("mixed", metadataList.get(0).get(Message.MULTIPART_SUBTYPE));
         assertEquals("0016e64606800312ee04913db790", metadataList.get(0).get(Message.MULTIPART_BOUNDARY));
@@ -595,7 +593,82 @@ public class RFC822ParserTest extends TikaTest {
 
         // Check the metadata of the attached GIF.
         assertTrue(metadataList.get(3).get(Metadata.CONTENT_TYPE).equals("image/gif"));
-        assertTrue(metadataList.get(3).get(Message.MULTIPART_SUBTYPE) == null);
-        assertTrue(metadataList.get(3).get(Message.MULTIPART_BOUNDARY) == null);
+        assertEquals("mixed", metadataList.get(3).get(Message.MULTIPART_SUBTYPE));
+        assertEquals("0016e64606800312ee04913db790", metadataList.get(3).get(Message.MULTIPART_BOUNDARY));
+    }
+
+    @Test
+    public void testBasicAlternativeBodyHandling() throws Exception {
+        /*
+            multi-part/mixed
+                multi-part/alternative
+                    text
+                    html
+                gif
+         */
+        List<Metadata> metadataList = getRecursiveMetadata("testRFC822-multipart");
+        assertEquals(2, metadataList.size());
+        String body = metadataList.get(0).get(RecursiveParserWrapper.TIKA_CONTENT);
+        assertContains("body 2", body);
+        assertNotContained("body 1", body);
+        assertEquals("message/rfc822", metadataList.get(0).get(Metadata.CONTENT_TYPE));
+        assertEquals("image/gif", metadataList.get(1).get(Metadata.CONTENT_TYPE));
+        assertEquals("/logo.gif", metadataList.get(1).get(RecursiveParserWrapper.EMBEDDED_RESOURCE_PATH));
+    }
+
+    @Test
+    public void testMixedRelatedMultipart() throws Exception {
+        /*
+            multipart/mixed (..6)
+                multipart/related (..5)
+                    multipart/alternative  (..4)
+                        text/plain
+                        text/html
+                image/jpeg (inline) Mary with cooler.jpeg  (..5)
+            image/jpeg (attachment) mary-coffee.jpg (..6)
+
+         */
+
+        List<Metadata> metadataList = getRecursiveMetadata("testRFC822-mixed-simple");
+        assertEquals(3, metadataList.size());
+
+        assertContains("body 2", metadataList.get(0).get(RecursiveParserWrapper.TIKA_CONTENT));
+        assertNotContained("body 1", metadataList.get(0).get(RecursiveParserWrapper.TIKA_CONTENT));
+        assertEquals("message/rfc822", metadataList.get(0).get(Metadata.CONTENT_TYPE));
+
+        assertEquals("image/jpeg", metadataList.get(1).get(Metadata.CONTENT_TYPE));
+        assertEquals("/Mary with cooler.jpeg", metadataList.get(1).get(RecursiveParserWrapper.EMBEDDED_RESOURCE_PATH));
+        assertEquals(TikaCoreProperties.EmbeddedResourceType.INLINE.toString(),
+                metadataList.get(1).get(TikaCoreProperties.EMBEDDED_RESOURCE_TYPE));
+
+        assertEquals("image/jpeg", metadataList.get(2).get(Metadata.CONTENT_TYPE));
+        assertEquals("/mary-coffee.jpg", metadataList.get(2).get(RecursiveParserWrapper.EMBEDDED_RESOURCE_PATH));
+        assertEquals(TikaCoreProperties.EmbeddedResourceType.ATTACHMENT.toString(),
+                metadataList.get(2).get(TikaCoreProperties.EMBEDDED_RESOURCE_TYPE));
+    }
+
+    @Test
+    public void testAlternativeWithComplexMixedChild() throws Exception {
+        /*
+        This tests that both html body chunks are stitched back
+        together in the body text for the main email.
+
+            multi-part/alternative
+                    text
+                    multipart/mixed
+                        html body chunk 1
+                        pdf
+                        html body chunk 2
+
+         */
+        List<Metadata> metadataList = getRecursiveMetadata("testRFC822-mixed-with-pdf-inline");
+        assertEquals(2, metadataList.size());
+        String body = metadataList.get(0).get(RecursiveParserWrapper.TIKA_CONTENT);
+        assertContains("body 2", body);
+        assertContains("body 3", body);
+        assertNotContained("body 1", body);
+        assertEquals("message/rfc822", metadataList.get(0).get(Metadata.CONTENT_TYPE));
+        assertEquals("application/pdf", metadataList.get(1).get(Metadata.CONTENT_TYPE));
+        assertEquals("/tzora-titan-4-hummer-xl-manual.pdf", metadataList.get(1).get(RecursiveParserWrapper.EMBEDDED_RESOURCE_PATH));
     }
 }
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/mbox/MboxParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/mbox/MboxParserTest.java
index 22b1d9a22..f1650a998 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/mbox/MboxParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/mbox/MboxParserTest.java
@@ -16,24 +16,26 @@
  */
 package org.apache.tika.parser.mbox;
 
-import static org.apache.tika.TikaTest.assertContains;
 import static org.junit.Assert.assertEquals;
 
 import java.io.InputStream;
+import java.util.List;
 import java.util.Map;
 
+import org.apache.tika.TikaTest;
 import org.apache.tika.detect.TypeDetector;
 import org.apache.tika.metadata.Metadata;
 import org.apache.tika.metadata.TikaCoreProperties;
 import org.apache.tika.parser.AutoDetectParser;
 import org.apache.tika.parser.ParseContext;
 import org.apache.tika.parser.Parser;
+import org.apache.tika.parser.RecursiveParserWrapper;
 import org.apache.tika.sax.BodyContentHandler;
 import org.junit.Before;
 import org.junit.Test;
 import org.xml.sax.ContentHandler;
 
-public class MboxParserTest {
+public class MboxParserTest extends TikaTest {
 
     protected ParseContext recursingContext;
     private Parser autoDetectParser;
@@ -167,4 +169,14 @@ public class MboxParserTest {
         Metadata firstMail = mboxParser.getTrackingMetadata().get(0);
         assertEquals("message/rfc822", firstMail.get(Metadata.CONTENT_TYPE));
     }
+
+    @Test
+    public void testTika2478() throws Exception {
+        List<Metadata> metadataList = getRecursiveMetadata("testMBOX_complex.mbox");
+        assertEquals(2, metadataList.size());
+        assertEquals("application/mbox", metadataList.get(0).get(Metadata.CONTENT_TYPE));
+        assertEquals("message/rfc822", metadataList.get(1).get(Metadata.CONTENT_TYPE));
+        assertContains("body 2", metadataList.get(1).get(RecursiveParserWrapper.TIKA_CONTENT));
+        assertNotContained("body 1", metadataList.get(1).get(RecursiveParserWrapper.TIKA_CONTENT));
+    }
 }
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/OutlookParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/OutlookParserTest.java
index f9c253b35..acfb75445 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/OutlookParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/OutlookParserTest.java
@@ -27,17 +27,21 @@ import javax.xml.transform.stream.StreamResult;
 import java.io.InputStream;
 import java.io.StringWriter;
 import java.util.Arrays;
+import java.util.List;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
 import org.apache.tika.TikaTest;
+import org.apache.tika.config.TikaConfig;
 import org.apache.tika.metadata.Message;
 import org.apache.tika.metadata.Metadata;
 import org.apache.tika.metadata.Office;
 import org.apache.tika.metadata.TikaCoreProperties;
+import org.apache.tika.mime.MediaType;
 import org.apache.tika.parser.AutoDetectParser;
 import org.apache.tika.parser.ParseContext;
 import org.apache.tika.parser.Parser;
+import org.apache.tika.parser.RecursiveParserWrapper;
 import org.apache.tika.sax.BodyContentHandler;
 import org.junit.Test;
 import org.xml.sax.ContentHandler;
@@ -301,4 +305,39 @@ public class OutlookParserTest extends TikaTest {
         assertTrue(expected + ", but got: " + metadata.get(Office.MAPI_MESSAGE_CLASS),
                 expected.equalsIgnoreCase(metadata.get(Office.MAPI_MESSAGE_CLASS).replaceAll("_", "")));
     }
+
+    @Test
+    public void testHandlingAllAlternativesBodies() throws Exception {
+        //test that default only has one body
+        List<Metadata> metadataList = getRecursiveMetadata("testMSG.msg");
+        assertEquals(1, metadataList.size());
+        assertContains("breaking your application",
+                metadataList.get(0).get(RecursiveParserWrapper.TIKA_CONTENT));
+        assertEquals("application/vnd.ms-outlook",
+                metadataList.get(0).get(Metadata.CONTENT_TYPE));
+
+        //now try extracting all bodies
+        //they should each appear as standalone attachments
+        //with no content in the body of the msg level
+        TikaConfig tikaConfig = new TikaConfig(getResourceAsStream("tika-config-extract-all-alternatives-msg.xml"));
+        Parser p = new AutoDetectParser(tikaConfig);
+
+        metadataList = getRecursiveMetadata("testMSG.msg", p);
+        assertEquals(3, metadataList.size());
+
+        assertNotContained("breaking your application",
+                metadataList.get(0).get(RecursiveParserWrapper.TIKA_CONTENT));
+        assertEquals("application/vnd.ms-outlook",
+                metadataList.get(0).get(Metadata.CONTENT_TYPE));
+
+        assertContains("breaking your application",
+                metadataList.get(1).get(RecursiveParserWrapper.TIKA_CONTENT));
+        assertEquals("application/rtf",
+                metadataList.get(1).get(Metadata.CONTENT_TYPE));
+
+        assertContains("breaking your application",
+                metadataList.get(2).get(RecursiveParserWrapper.TIKA_CONTENT));
+        assertTrue(metadataList.get(2).get(Metadata.CONTENT_TYPE).startsWith("text/plain"));
+
+    }
 }
diff --git a/tika-parsers/src/test/resources/org/apache/tika/parser/mail/tika-config-extract-all-alternatives.xml b/tika-parsers/src/test/resources/org/apache/tika/parser/mail/tika-config-extract-all-alternatives.xml
new file mode 100644
index 000000000..3348a6bef
--- /dev/null
+++ b/tika-parsers/src/test/resources/org/apache/tika/parser/mail/tika-config-extract-all-alternatives.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+  Licensed to the Apache Software Foundation (ASF) under one or more
+  contributor license agreements.  See the NOTICE file distributed with
+  this work for additional information regarding copyright ownership.
+  The ASF licenses this file to You under the Apache License, Version 2.0
+  (the "License"); you may not use this file except in compliance with
+  the License.  You may obtain a copy of the License at
+
+  http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+-->
+<properties>
+    <parsers>
+        <parser class="org.apache.tika.parser.DefaultParser">
+            <parser-exclude class="org.apache.tika.parser.mail.RFC822Parser"/>
+        </parser>
+
+        <parser class="org.apache.tika.parser.mail.RFC822Parser">
+            <params>
+                <param name="extractAllAlternatives" type="bool">true</param>
+            </params>
+        </parser>
+    </parsers>
+</properties>
diff --git a/tika-parsers/src/test/resources/org/apache/tika/parser/microsoft/tika-config-extract-all-alternatives-msg.xml b/tika-parsers/src/test/resources/org/apache/tika/parser/microsoft/tika-config-extract-all-alternatives-msg.xml
new file mode 100644
index 000000000..58361a311
--- /dev/null
+++ b/tika-parsers/src/test/resources/org/apache/tika/parser/microsoft/tika-config-extract-all-alternatives-msg.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+  Licensed to the Apache Software Foundation (ASF) under one or more
+  contributor license agreements.  See the NOTICE file distributed with
+  this work for additional information regarding copyright ownership.
+  The ASF licenses this file to You under the Apache License, Version 2.0
+  (the "License"); you may not use this file except in compliance with
+  the License.  You may obtain a copy of the License at
+
+  http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+-->
+<properties>
+    <parsers>
+        <parser class="org.apache.tika.parser.DefaultParser">
+            <parser-exclude class="org.apache.tika.parser.microsoft.OfficeParser"/>
+        </parser>
+
+        <parser class="org.apache.tika.parser.microsoft.OfficeParser">
+            <params>
+                <param name="extractAllAlternativesFromMSG" type="bool">true</param>
+            </params>
+        </parser>
+    </parsers>
+</properties>
diff --git a/tika-parsers/src/test/resources/test-documents/testMBOX_complex.mbox b/tika-parsers/src/test/resources/test-documents/testMBOX_complex.mbox
new file mode 100644
index 000000000..2327db47e
--- /dev/null
+++ b/tika-parsers/src/test/resources/test-documents/testMBOX_complex.mbox
@@ -0,0 +1,278 @@
+From hey@example.com Mon Jul 20 01:01:07 2015
+X-Mozilla-Keys:                                                                                 
+Mime-Version: 1.0
+X-Mailer: GroupWise 8.0
+Subject: xxxxxxx 
+Date: Mon, 20 Jul 2015 00:01:07 -0700
+X-Google-Dkim-Signature: v=1
+X-Google-Dkim-Signature: a=rsa-sha256
+X-Google-Dkim-Signature: c=relaxed/relaxed
+X-Google-Dkim-Signature: d=1e100.net
+X-Google-Dkim-Signature: s=20130820
+X-Google-Dkim-Signature:
+	 h=x-gm-message-state:from:to:subject:date:message-id:mime-version
+	 :content-type:thread-index:content-language
+X-Google-Dkim-Signature: bh=6mbIiWEQS9mPVNOeDWSwZUkgJyf4EiIZILqHu7AgV+w=
+X-Google-Dkim-Signature:
+	 b=MuWgJ6ay0cvlCrXsi6MEeLMwObj1zz/zEriU+yrKKpi9P/S+SXH50CWr80RS7GQbP+
+	 sSbuEioL14Km0OqngW+VTn9UEFPxcfmYIq+F1q//tDSWNKd1/O+mbPjVwn19WjK4cGPY
+	 Sbu4Mv+QSqUMvFUU2Ci7MevU168N7QV/EesPNm14ZM9DHn3ofOLQfHGF+1894yj9bXSi
+	 pOA4h2Cuer4ZZewHIjmVWRjyXv1Gblk9rX0EaELhaAwYVyizRFUgmTSurEjVvFEIM2lH
+	 F5GMYJs1iJKZNujkUg022SYw6VayTXrTBKJ5Vdj0m/NnpN+qf4Bq6hL7YHoUT/pkD+7G
+	 ZUSw==
+X-Gm-Message-State:
+	 ALoCoQmCQqcDJfjK7QhiGeBsFM8PagZDpSoBb6i286XR4WGgCXsLWEzMnFYdvQ0NCfOQiaYKSU
+	0L
+X-Received: by 10.152.1.4 with SMTP id 4mr26471101lai.25.1437375668293
+X-Received: Mon
+X-Received: 20 Jul 2015 00:01:08 -0700
+X-Mailer: Microsoft Outlook 14.0
+Message-ID: <021701d0c2b9$dadbf470$9092ea50$@example.com>
+From: "Some Person" <hey@example.com>
+To: 
+Content-Type: multipart/alternative; boundary="____LPHMXLZMXOMRLFKSEJCW____"
+
+
+--____LPHMXLZMXOMRLFKSEJCW____
+Content-Type: text/plain; charset=iso-8859-15
+Content-Transfer-Encoding: quoted-printable
+Content-Disposition: inline
+
+Dear Some Person,=20
+
+=20
+
+My name is Another Person. body 1
+
+=20
+
+Thank you in advance for your response.
+
+=20
+
+Sincerely,
+
+=20
+
+Another Person
+
+
+--____LPHMXLZMXOMRLFKSEJCW____
+Content-Type: text/html; charset=us-ascii
+Content-Transfer-Encoding: quoted-printable
+
+<html xmlns:v=3D"urn:schemas-microsoft-com:vml" xmlns:o=3D"=
+urn:schemas-microsoft-com:office:office" xmlns:w=3D"urn:schemas-microsoft-c=
+om:office:word" xmlns:m=3D"http://schemas.microsoft.com/office/2004/12/omml=
+" xmlns=3D"http://www.w3.org/TR/REC-html40"><head><meta http-equiv=3DConten=
+t-Type content=3D"text/html; charset=3Dus-ascii"><meta name=3DGenerator =
+content=3D"Microsoft Word 14 (filtered medium)"><style><!--
+/* Font Definitions */
+@font-face
+	{font-family:Wingdings;
+	panose-1:5 0 0 0 0 0 0 0 0 0;}
+@font-face
+	{font-family:Wingdings;
+	panose-1:5 0 0 0 0 0 0 0 0 0;}
+@font-face
+	{font-family:Calibri;
+	panose-1:2 15 5 2 2 2 4 3 2 4;}
+/* Style Definitions */
+p.MsoNormal, li.MsoNormal, div.MsoNormal
+	{margin:0cm;
+	margin-bottom:.0001pt;
+	font-size:11.0pt;
+	font-family:"Calibri","sans-serif";
+	mso-fareast-language:EN-US;}
+a:link, span.MsoHyperlink
+	{mso-style-priority:99;
+	color:blue;
+	text-decoration:underline;}
+a:visited, span.MsoHyperlinkFollowed
+	{mso-style-priority:99;
+	color:purple;
+	text-decoration:underline;}
+p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
+	{mso-style-priority:34;
+	margin-top:0cm;
+	margin-right:0cm;
+	margin-bottom:0cm;
+	margin-left:36.0pt;
+	margin-bottom:.0001pt;
+	font-size:11.0pt;
+	font-family:"Calibri","sans-serif";
+	mso-fareast-language:EN-US;}
+span.EmailStyle17
+	{mso-style-type:personal-compose;
+	font-family:"Calibri","sans-serif";
+	color:windowtext;}
+.MsoChpDefault
+	{mso-style-type:export-only;
+	font-family:"Calibri","sans-serif";
+	mso-fareast-language:EN-US;}
+@page WordSection1
+	{size:612.0pt 792.0pt;
+	margin:2.0cm 42.5pt 2.0cm 3.0cm;}
+div.WordSection1
+	{page:WordSection1;}
+/* List Definitions */
+@list l0
+	{mso-list-id:443892463;
+	mso-list-type:hybrid;
+	mso-list-template-ids:1935180358 654736764 134807555 134807557 =
+134807553 134807555 134807557 134807553 134807555 134807557;}
+@list l0:level1
+	{mso-level-start-at:0;
+	mso-level-number-format:bullet;
+	mso-level-text:-;
+	mso-level-tab-stop:none;
+	mso-level-number-position:left;
+	text-indent:-18.0pt;
+	font-family:"Calibri","sans-serif";
+	mso-fareast-font-family:Calibri;
+	mso-bidi-font-family:"Times New Roman";}
+@list l0:level2
+	{mso-level-number-format:bullet;
+	mso-level-text:o;
+	mso-level-tab-stop:none;
+	mso-level-number-position:left;
+	text-indent:-18.0pt;
+	font-family:"Courier New";}
+@list l0:level3
+	{mso-level-number-format:bullet;
+	mso-level-text:\F0A7;
+	mso-level-tab-stop:none;
+	mso-level-number-position:left;
+	text-indent:-18.0pt;
+	font-family:Wingdings;}
+@list l0:level4
+	{mso-level-number-format:bullet;
+	mso-level-text:\F0B7;
+	mso-level-tab-stop:none;
+	mso-level-number-position:left;
+	text-indent:-18.0pt;
+	font-family:Symbol;}
+@list l0:level5
+	{mso-level-number-format:bullet;
+	mso-level-text:o;
+	mso-level-tab-stop:none;
+	mso-level-number-position:left;
+	text-indent:-18.0pt;
+	font-family:"Courier New";}
+@list l0:level6
+	{mso-level-number-format:bullet;
+	mso-level-text:\F0A7;
+	mso-level-tab-stop:none;
+	mso-level-number-position:left;
+	text-indent:-18.0pt;
+	font-family:Wingdings;}
+@list l0:level7
+	{mso-level-number-format:bullet;
+	mso-level-text:\F0B7;
+	mso-level-tab-stop:none;
+	mso-level-number-position:left;
+	text-indent:-18.0pt;
+	font-family:Symbol;}
+@list l0:level8
+	{mso-level-number-format:bullet;
+	mso-level-text:o;
+	mso-level-tab-stop:none;
+	mso-level-number-position:left;
+	text-indent:-18.0pt;
+	font-family:"Courier New";}
+@list l0:level9
+	{mso-level-number-format:bullet;
+	mso-level-text:\F0A7;
+	mso-level-tab-stop:none;
+	mso-level-number-position:left;
+	text-indent:-18.0pt;
+	font-family:Wingdings;}
+@list l1
+	{mso-list-id:2052682647;
+	mso-list-type:hybrid;
+	mso-list-template-ids:1171682678 -311925116 134807555 134807557 =
+134807553 134807555 134807557 134807553 134807555 134807557;}
+@list l1:level1
+	{mso-level-start-at:0;
+	mso-level-number-format:bullet;
+	mso-level-text:-;
+	mso-level-tab-stop:none;
+	mso-level-number-position:left;
+	text-indent:-18.0pt;
+	font-family:"Calibri","sans-serif";
+	mso-fareast-font-family:Calibri;
+	mso-bidi-font-family:"Times New Roman";}
+@list l1:level2
+	{mso-level-number-format:bullet;
+	mso-level-text:o;
+	mso-level-tab-stop:none;
+	mso-level-number-position:left;
+	text-indent:-18.0pt;
+	font-family:"Courier New";}
+@list l1:level3
+	{mso-level-number-format:bullet;
+	mso-level-text:\F0A7;
+	mso-level-tab-stop:none;
+	mso-level-number-position:left;
+	text-indent:-18.0pt;
+	font-family:Wingdings;}
+@list l1:level4
+	{mso-level-number-format:bullet;
+	mso-level-text:\F0B7;
+	mso-level-tab-stop:none;
+	mso-level-number-position:left;
+	text-indent:-18.0pt;
+	font-family:Symbol;}
+@list l1:level5
+	{mso-level-number-format:bullet;
+	mso-level-text:o;
+	mso-level-tab-stop:none;
+	mso-level-number-position:left;
+	text-indent:-18.0pt;
+	font-family:"Courier New";}
+@list l1:level6
+	{mso-level-number-format:bullet;
+	mso-level-text:\F0A7;
+	mso-level-tab-stop:none;
+	mso-level-number-position:left;
+	text-indent:-18.0pt;
+	font-family:Wingdings;}
+@list l1:level7
+	{mso-level-number-format:bullet;
+	mso-level-text:\F0B7;
+	mso-level-tab-stop:none;
+	mso-level-number-position:left;
+	text-indent:-18.0pt;
+	font-family:Symbol;}
+@list l1:level8
+	{mso-level-number-format:bullet;
+	mso-level-text:o;
+	mso-level-tab-stop:none;
+	mso-level-number-position:left;
+	text-indent:-18.0pt;
+	font-family:"Courier New";}
+@list l1:level9
+	{mso-level-number-format:bullet;
+	mso-level-text:\F0A7;
+	mso-level-tab-stop:none;
+	mso-level-number-position:left;
+	text-indent:-18.0pt;
+	font-family:Wingdings;}
+ol
+	{margin-bottom:0cm;}
+ul
+	{margin-bottom:0cm;}
+--></style><!--[if gte mso 9]><xml>
+<o:shapedefaults v:ext=3D"edit" spidmax=3D"1026" />
+</xml><![endif]--><!--[if gte mso 9]><xml>
+<o:shapelayout v:ext=3D"edit">
+<o:idmap v:ext=3D"edit" data=3D"1" />
+</o:shapelayout></xml><![endif]--></head><body lang=3DEN-GB link=3Dblue =
+vlink=3Dpurple><div class=3DWordSection1><p class=3DMsoNormal>Dear =
+Mr.Person, <o:p></o:p></p><p class=3DMsoNormal><o:p>&nbsp;</o:p></p><p =
+class=3DMsoNormal>My name is Another Person. body 2<o:p></o:p></p><p class=3DMsoNormal><o:p>&nbsp;</o:p></p><p class=3DMsoNormal>Thank you =
+response.<o:p></o:p></p><p class=3DMsoNormal><o:p>&nbsp;</o:p></p><p =
+class=3DMsoNormal>Sincerely,<o:p></o:p></p><p class=3DMsoNormal><o:p>&nbsp;=
+</o:p></p><p class=3DMsoNormal>Another Person<o:p></o:p></p></div></body></h=
+tml>
+--____LPHMXLZMXOMRLFKSEJCW____--
diff --git a/tika-parsers/src/test/resources/test-documents/testRFC822-mixed-simple b/tika-parsers/src/test/resources/test-documents/testRFC822-mixed-simple
new file mode 100644
index 000000000..31ab49ed4
--- /dev/null
+++ b/tika-parsers/src/test/resources/test-documents/testRFC822-mixed-simple
@@ -0,0 +1,64 @@
+MIME-Version: 1.0
+Received: by 10.103.33.199 with HTTP; Tue, 6 Jun 2017 14:48:27 -0700 (PDT)
+Bcc: emailtosalesforce@r-kub1lq8760pccrdt39x94qxtajhk3q4zb1fzikf15ygnugofn.6a-euhkuaa.na50.le.salesforce.com
+Date: Tue, 6 Jun 2017 14:48:27 -0700
+Delivered-To: john.doe@gmail.com
+Message-ID: <CACmaLAZ16kghp1Qf99noL2P33AnAzU7bbKfju=JASRYyscvNdw@mail.gmail.com>
+Subject: Test BCCing email (rev 2)
+From: John Doe <john.doe@gmail.com>
+To: john.smith@domain.com
+Content-Type: multipart/mixed; boundary="94eb2c03266668996305515194b6"
+
+--94eb2c03266668996305515194b6
+Content-Type: multipart/related; boundary="94eb2c03266668996205515194b5"
+
+--94eb2c03266668996205515194b5
+Content-Type: multipart/alternative; boundary="94eb2c03266668995d05515194b4"
+
+--94eb2c03266668995d05515194b4
+Content-Type: text/plain; charset="UTF-8"
+Content-Transfer-Encoding: quoted-printable
+
+This is an email that will have some rich text and an attachment.
+
+*Because I've added some bold text here.*
+
+body 1
+*=E2=80=8B*
+*And here's some more text (still bold)*
+
+-- John
+
+--94eb2c03266668995d05515194b4
+Content-Type: text/html; charset="UTF-8"
+Content-Transfer-Encoding: quoted-printable
+
+<div dir=3D"ltr"><span style=3D"font-size:12.8px">This is an email that wil=
+l have some rich text and an attachment.</span><div style=3D"font-size:12.8=
+px"><br></div><div style=3D"font-size:12.8px"><b>Because I&#39;ve added som=
+e bold text here.</b></div><div style=3D"font-size:12.8px"><b><br></b></div=
+><div style=3D"font-size:12.8px"><b><img src=3D"cid:ii_j3m3inig0_15c7f60325=
+99828c" width=3D"396" height=3D"544"><br>=E2=80=8B</b></div><div style=3D"f=
+ont-size:12.8px"><b>And here&#39;s some more text (still bold)</b></div><di=
+v style=3D"font-size:12.8px"><b><br></b></div><div style=3D"font-size:12.8p=
+x">-- John</div><div style=3D"font-size:12.8px"><br>body 2</div><div style=3D"font=
+-size:12.8px"></div></div>
+
+--94eb2c03266668995d05515194b4--
+--94eb2c03266668996205515194b5
+Content-Type: image/jpeg; name="Mary with cooler.jpeg"
+Content-Disposition: inline; filename="Mary with cooler.jpeg"
+Content-Transfer-Encoding: base64
+Content-ID: <ii_j3m3inig0_15c7f6032599828c>
+X-Attachment-Id: ii_j3m3inig0_15c7f6032599828c
+
+
+--94eb2c03266668996205515194b5--
+--94eb2c03266668996305515194b6
+Content-Type: image/jpeg; name="mary-coffee.jpg"
+Content-Disposition: attachment; filename="mary-coffee.jpg"
+Content-Transfer-Encoding: base64
+X-Attachment-Id: f_j3m3jfpq1
+
+
+--94eb2c03266668996305515194b6--
\ No newline at end of file
diff --git a/tika-parsers/src/test/resources/test-documents/testRFC822-mixed-with-pdf-inline b/tika-parsers/src/test/resources/test-documents/testRFC822-mixed-with-pdf-inline
new file mode 100644
index 000000000..60ae65d83
--- /dev/null
+++ b/tika-parsers/src/test/resources/test-documents/testRFC822-mixed-with-pdf-inline
@@ -0,0 +1,600 @@
+Delivered-To: johndoe@gmail.com
+Received: by 10.103.83.197 with SMTP id o66csp1421430vsg;
+        Mon, 29 May 2017 16:56:08 -0700 (PDT)
+X-Received: by 10.84.137.3 with SMTP id 3mr78506105plm.68.1496102168554;
+        Mon, 29 May 2017 16:56:08 -0700 (PDT)
+ARC-Seal: i=1; a=rsa-sha256; t=1496102168; cv=none;
+        d=google.com; s=arc-20160816;
+        b=XXvx0gWtFZAYNmx5p9cyvz7Vodj0l0QxU5ftVARjjUZyZ7v5KAFHANgbGGBYYaYAw0
+         y7qMlQ2OYoZkHuKKi+ipO9G/Wkp8ZR31rLFPOD6GDgFi1HxdE4uW6PDabzR7tt58zYcX
+         xIzqtLcSZpbAW1jDn2FTX5WelV5toOGTZs7yHdRTFg/oOzybQPCNAQcOLCIYD5nhfMJA
+         bvYdMU23XOIy98iiUxHIOd9JdKeL4JwozdczoBqiwLzSHXKMi702zMcTS7rY182dbd/N
+         WMnPBhjgG7ath/Uv60aMudnWzFL4P8Plmyrf6f0jVL/fOR4pGlCoPuiQ5GSS24hQaEL/
+         kMOQ==
+ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
+        h=in-reply-to:to:references:date:subject:mime-version:message-id:from
+         :dkim-signature:arc-authentication-results;
+        bh=PHebpItQ2PaPQF/XYZNUdKyx0Gk68Mpr/iOTNLPN5hI=;
+        b=bsymaadNoACNEkhrBvcJXxGqGVhlaiUQhWC/d9GX0W4FfG0OXdF4Jpy3BCvm0mAstb
+         v+70yG2Cr94R9njJlY8LSBbhc8UOeh9n5TA/plVjkBzVvabJK0nC5B0Ru/0W/XCg3D1B
+         ywc3QRJsoS6Rwg16r6jUg8n/c+cD6K+w4kv/msHA7d9FQj+CPRBsXZ8owojyDREd26rp
+         kXV+h0NWRiO45XL8OVwz7yOyGmElAtzy/Jhg+nHy7UpJLawtN2wWQ+moSCy/m+daLI3p
+         o6MqFnX64Y1GHgWaMBZlCTegcqOC9QsD9rZDI8suvFt1lFg+csHfxJnNqDKnsb74yuhz
+         4FOw==
+ARC-Authentication-Results: i=1; mx.google.com;
+       dkim=pass header.i=@domain-com.20150623.gappssmtp.com;
+       spf=neutral (google.com: 2607:f8b0:400e:c00::22b is neither permitted nor denied by best guess record for domain of john.smith@domain.com) smtp.mailfrom=john.smith@domain.com
+Return-Path: <john.smith@domain.com>
+Received: from mail-pf0-x22b.google.com (mail-pf0-x22b.google.com. [2607:f8b0:400e:c00::22b])
+        by mx.google.com with ESMTPS id r87si10499171pfd.218.2017.05.29.16.56.08
+        for <johndoe@gmail.com>
+        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
+        Mon, 29 May 2017 16:56:08 -0700 (PDT)
+Received-SPF: neutral (google.com: 2607:f8b0:400e:c00::22b is neither permitted nor denied by best guess record for domain of john.smith@domain.com) client-ip=2607:f8b0:400e:c00::22b;
+Authentication-Results: mx.google.com;
+       dkim=pass header.i=@domain-com.20150623.gappssmtp.com;
+       spf=neutral (google.com: 2607:f8b0:400e:c00::22b is neither permitted nor denied by best guess record for domain of john.smith@domain.com) smtp.mailfrom=john.smith@domain.com
+Received: by mail-pf0-x22b.google.com with SMTP id m17so48929191pfg.3
+        for <johndoe@gmail.com>; Mon, 29 May 2017 16:56:08 -0700 (PDT)
+DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
+        d=domain-com.20150623.gappssmtp.com; s=20150623;
+        h=from:message-id:mime-version:subject:date:references:to:in-reply-to;
+        bh=PHebpItQ2PaPQF/XYZNUdKyx0Gk68Mpr/iOTNLPN5hI=;
+        b=Ed7nWpP6M/EHJg+1PNTzGA09nRTYofQsBinn3e3F1jVYYvdDTAvyxS7DJf0xKp6XPw
+         k104FZXUOkxrmESut8cjFwKSLHsSMsYbow7U7cLhiAMdQ9qw91cMvpDcFwIYmvaVVI2j
+         fFNTbTwUJDXif2eYuCns2pN++wtDBwTkN+sfn2Q2FrATm4QaXepySwokbl8FOjMvUclb
+         sQplhU1mhKLm/rkSSmCkAe74fo6JbErkpXHfEMwQB7LgLBmAWTJS8WKP0GAlYdnP6X4c
+         uS3bqmH3ayblghn/4GQsHdux6zAZtXgz4fgHK2m67W5/sDh/Zywj8VDt8PtMXu1M106m
+         O+xg==
+X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
+        d=1e100.net; s=20161025;
+        h=x-gm-message-state:from:message-id:mime-version:subject:date
+         :references:to:in-reply-to;
+        bh=PHebpItQ2PaPQF/XYZNUdKyx0Gk68Mpr/iOTNLPN5hI=;
+        b=axmOeTETLUmbOqxvWrkgR1vFQRLjAvDpAZbiJtBFpvPbLxj9WWqBDZF94sxOMWc5RF
+         P/0m5HUaa5HPb8nykr0tUie6zhIrzT6HubLdvvyWPL/oX9g3YpDKQXtzeaJUG3+kzONI
+         BeRwjDEbmyLUegj2Gess1NtV91s3ivb1pueaVPHbBKkiztNR/tzRGIkF9MnGAmIJ/Rof
+         9F0raho8/SJflts8K4wyM7fyfgt2+So3uxoYrg9HkNaj2dUzgPRhWk9UYy8UNkEvKubW
+         JX26xzQFLc5gkICKVVW+SBhcdnbuLIX/R/kW416PSVFH6lrc83v2ex6elMlBowWR1zMK
+         GT/w==
+X-Gm-Message-State: AODbwcBjD1bfO7UplrL7hRhgSzEeyjbcitGrIpG3QAM5bIjL6ygvx5vd Hyu3kdfSeB4b1ohL88z98Q==
+X-Received: by 10.99.112.66 with SMTP id a2mr21687762pgn.7.1496102167547;
+        Mon, 29 May 2017 16:56:07 -0700 (PDT)
+Return-Path: <john.smith@domain.com>
+Received: from [192.168.1.243] (108-196-129-58.lightspeed.frokca.sbcglobal.net. [108.196.129.58])
+        by smtp.gmail.com with ESMTPSA id o66sm18408039pga.64.2017.05.29.16.55.28
+        for <johndoe@gmail.com>
+        (version=TLS1 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
+        Mon, 29 May 2017 16:56:06 -0700 (PDT)
+From: John Smith <john.smith@domain.com>
+Content-Type: multipart/alternative; boundary="Apple-Mail=_C81A339C-755B-4F48-AEF5-6A55B22BC8FA"
+Message-Id: <55CFD80C-6447-4C8E-B68C-016D8C206F7B@domain.com>
+Mime-Version: 1.0 (Mac OS X Mail 9.3 \(3124\))
+Subject: Re: Jane Doe Has Invited You to Team "Jane" at RealtimeBoard
+Date: Mon, 29 May 2017 16:55:27 -0700
+References: <30166792.20170519222441.591f70a9caafe7.16435733@mail186-9.suw21.mandrillapp.com> <5905CAEF-F03D-4C65-A848-4B86D65498FA@domain.com> <EA5DA741-A746-482C-A912-070E9D2FEA18@domain.com>
+To: johndoe@gmail.com
+In-Reply-To: <EA5DA741-A746-482C-A912-070E9D2FEA18@domain.com>
+X-Mailer: Apple Mail (2.3124)
+
+--Apple-Mail=_C81A339C-755B-4F48-AEF5-6A55B22BC8FA
+Content-Transfer-Encoding: quoted-printable
+Content-Type: text/plain; charset=utf-8
+
+Attachment in middle
+
+body 1
+Hi Jane,
+
+I cannot access that page, but I don=E2=80=99t see any content on it.
+
+It might be my internet connection at Java Johns, I=E2=80=99ll try again wh=
+en I=E2=80=99m back at my office.
+
+=E2=80=94 John
+
+
+> On May 22, 2017, at 9:16am, Jane Doe <jane.doe@domain.com <=
+mailto:jane.doe@domain.com>> wrote:
+>=20
+>=20
+> Hi John,=20
+> Did you have a chance to take a look at the Board with competitor screens=
+hots. https://realtimeboard.com/app/board/o9J_k0-_0Xg=3D/ <https://realtime=
+board.com/app/board/o9J_k0-_0Xg=3D/>
+> Can you work with it? I think there is no need to upload it to our Wiki. =
+I plan to add more competitors to the board.
+>=20
+> Please let me know how I can help you.=20
+> Jane=20
+> =20
+>=20
+>> On 22 May 2017, at 07:54, John Smith <john.smith@domain.com <mailto:=
+john.smith@domain.com>> wrote:
+>>=20
+>> Hi Jane,
+>>=20
+>> I=E2=80=99m signed up, and part of the =E2=80=9CDomain=E2=80=9D team.
+>>=20
+>> =E2=80=94 John
+>>=20
+>>> Begin forwarded message:
+>>>=20
+>>> From: RealtimeBoard Team <notification@realtimeboard.com <mailto:notifi=
+cation@realtimeboard.com>>
+>>> Subject: Jane Doe Has Invited You to Team "Jane" at RealtimeBoard
+>>> Date: May 19, 2017 at 3:24:41pm PDT
+>>> To: <john.smith@domain.com <mailto:john.smith@domain.com>>
+>>> Reply-To: Jane Doe <jane.doe@domain.com <mailto:jane.doe=
+@domain.com>>
+
+
+
+>>>=20
+>>>   <https://mandrillapp.com/track/click/30166792/realtimeboard.com?p=3De=
+yJzIjoiMEVnZUstNFZxcERLRFE5blZRMHlSS1BLRS0wIiwidiI6MSwicCI6IntcInVcIjozMDE2=
+Njc5MixcInZcIjoxLFwidXJsXCI6XCJodHRwczpcXFwvXFxcL3JlYWx0aW1lYm9hcmQuY29tXFx=
+cL2luZGV4XFxcL1wiLFwiaWRcIjpcIjc0YjY5NzcwYTQwNzRlMjFiNTU4MmY5NDE1YmRlYTZjXC=
+IsXCJ1cmxfaWRzXCI6W1wiMDk5NjcwYTJiNmVhYTliMDE1YzdhZDkxOGUyZDNkMDBlOWY2OGFmY=
+lwiXX0ifQ>=09
+>>> =20
+>>> Hi john.smith@domain.com <mailto:john.smith@domain.com>!
+>>> =20
+>>> =09=09
+>>> Jane Doe has added you to the team "Jane".
+>>> =20
+>>> RealtimeBoard is an endless online whiteboard that can store an endless=
+ flow of ideas. Work on your projects visually and see what your colleagues=
+ and friends are doing in real-time!
+>>> =20
+>>> JOIN RIGHT NOW
+>>>  <https://mandrillapp.com/track/click/30166792/realtimeboard.com?p=3Dey=
+JzIjoieWxuSjNqdXdXZjByb2VadXhJSEFrY21BMUFNIiwidiI6MSwicCI6IntcInVcIjozMDE2N=
+jc5MixcInZcIjoxLFwidXJsXCI6XCJodHRwczpcXFwvXFxcL3JlYWx0aW1lYm9hcmQuY29tXFxc=
+L2FwcFxcXC8_aW52aXRlPTJhYWFhYWFhYjYzMDkzZDg4NWU5NGM2MzRlNmExNTQyLWQxNzQxOGF=
+hNmQyOThjMDktY2MwZTgzM2I2YjI4ZmI3OS1kNjg4NzcyMTUzYTljMzYwJmV2ZW50PW1haWxJbn=
+ZpdGUmbWFpbFVzZXJFbWFpbD1rZW4ua3J1Z2xlciU0MHNhbGVzaGVyby5haSZ0cmFjaz10cnVlX=
+CIsXCJpZFwiOlwiNzRiNjk3NzBhNDA3NGUyMWI1NTgyZjk0MTViZGVhNmNcIixcInVybF9pZHNc=
+IjpbXCI3NGNkMDQ2MmRhOWE2ZDA5OTAzZTdlNGY1OTRiM2IyMzRjMjAxYzg3XCJdfSJ9>=09
+>>> =20
+>>> =20
+>>>  =09=09Not sure why you are receiving this?
+>>> Ask Jane Doe at jane.doe@domain.com <mailto:jane.doe=
+@domain.com>=09
+>>>  =09=09
+>>> Other people in this team:
+>>> Jane Doe, Thomas=09
+>>>  =09=09
+>>> Happy whiteboarding!
+>>> RealtimeBoard Team.=09
+>>> =20
+>>> =20
+>>> RealtimeBlog <https://mandrillapp.com/track/click/30166792/realtimeboar=
+d.com?p=3DeyJzIjoicXZneG9NVVppWkZHSTVlUmtObHRvSFZPMXRRIiwidiI6MSwicCI6IntcI=
+nVcIjozMDE2Njc5MixcInZcIjoxLFwidXJsXCI6XCJodHRwczpcXFwvXFxcL3JlYWx0aW1lYm9h=
+cmQuY29tXFxcL3ByZXBhcmVcXFwvYmxvZ1xcXC8_dHJhY2s9dHJ1ZVwiLFwiaWRcIjpcIjc0YjY=
+5NzcwYTQwNzRlMjFiNTU4MmY5NDE1YmRlYTZjXCIsXCJ1cmxfaWRzXCI6W1wiMjc1ZmQ0NGZmYW=
+FkM2RjMjZhNzI4ZWI0NGExNjk2MGQ1ZmZiN2IwYVwiXX0ifQ>
+>>> =20
+>>>                                                    <https://mandrillapp=
+.com/track/click/30166792/www.facebook.com?p=3DeyJzIjoicUlPaUlQODhxb0c1cmpN=
+a3VhV01aaXZHYjVrIiwidiI6MSwicCI6IntcInVcIjozMDE2Njc5MixcInZcIjoxLFwidXJsXCI=
+6XCJodHRwczpcXFwvXFxcL3d3dy5mYWNlYm9vay5jb21cXFwvUmVhbHRpbWVCb2FyZFwiLFwiaW=
+RcIjpcIjc0YjY5NzcwYTQwNzRlMjFiNTU4MmY5NDE1YmRlYTZjXCIsXCJ1cmxfaWRzXCI6W1wiZ=
+TdlN2QyYWRlMWU3ZGNkYTNlMmQxNGRjYmNjNjNmODA4MDBiNDFiY1wiXX0ifQ>             =
+                                =09 =09                                    =
+               <https://mandrillapp.com/track/click/30166792/twitter.com?p=
+=3DeyJzIjoiQm5xalpTem1Td1kzZHZQWFMzMWx2TW95YUw4IiwidiI6MSwicCI6IntcInVcIjoz=
+MDE2Njc5MixcInZcIjoxLFwidXJsXCI6XCJodHRwczpcXFwvXFxcL3R3aXR0ZXIuY29tXFxcL3J=
+lYWx0aW1lYm9hcmRcIixcImlkXCI6XCI3NGI2OTc3MGE0MDc0ZTIxYjU1ODJmOTQxNWJkZWE2Y1=
+wiLFwidXJsX2lkc1wiOltcImZhYmNlMTMxMjgyYmU4NDI4MGJlY2FmMmI3YWE2OGZjZDFmNDU2Y=
+TFcIl19In0>                                             =09 =09            =
+                                       <https://mandrillapp.com/track/click=
+/30166792/vimeo.com?p=3DeyJzIjoiS0V5ZTRVLVpfcEdKRGFpbExKM3hiM2c0enBnIiwidiI=
+6MSwicCI6IntcInVcIjozMDE2Njc5MixcInZcIjoxLFwidXJsXCI6XCJodHRwczpcXFwvXFxcL3=
+ZpbWVvLmNvbVxcXC9yZWFsdGltZWJvYXJkXCIsXCJpZFwiOlwiNzRiNjk3NzBhNDA3NGUyMWI1N=
+TgyZjk0MTViZGVhNmNcIixcInVybF9pZHNcIjpbXCI3MGIyYmUyODU2MWZkZmU4MDUyZmQ1ZDIx=
+YjA1NzRiNzM1NmEyYjIzXCJdfSJ9>                                             =
+=09 =09                                                   <https://mandrill=
+app.com/track/click/30166792/plus.google.com?p=3DeyJzIjoidEZ0eVBCLWNlTnJHU0=
+U1bXRXNEIyd3c1YUxzIiwidiI6MSwicCI6IntcInVcIjozMDE2Njc5MixcInZcIjoxLFwidXJsX=
+CI6XCJodHRwczpcXFwvXFxcL3BsdXMuZ29vZ2xlLmNvbVxcXC8xMTE5NDQ4ODc0NTMxNTMzMTkx=
+NjVcXFwvcG9zdHNcIixcImlkXCI6XCI3NGI2OTc3MGE0MDc0ZTIxYjU1ODJmOTQxNWJkZWE2Y1w=
+iLFwidXJsX2lkc1wiOltcImRjNzZlZjZkMDIyMzEwOTgxNGE0NWJhODZhOWE2YmM4MTY4ZDRhND=
+NcIl19In0>                                            =20
+>>> =20
+>>> =20
+>>> =20
+>>>=20
+>>=20
+>=20
+
+
+--Apple-Mail=_C81A339C-755B-4F48-AEF5-6A55B22BC8FA
+Content-Type: multipart/mixed; boundary="Apple-Mail=_7280EA35-27ED-4485-9978-4D9FFCE613A6"
+
+--Apple-Mail=_7280EA35-27ED-4485-9978-4D9FFCE613A6
+Content-Transfer-Encoding: quoted-printable
+Content-Type: text/html; charset=utf-8
+
+<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html charset=
+=3Dutf-8"><meta http-equiv=3D"Content-Type" content=3D"text/html charset=3D=
+utf-8"></head><body style=3D"word-wrap: break-word; -webkit-nbsp-mode: spac=
+e; -webkit-line-break: after-white-space;" class=3D""><div class=3D"">Attac=
+hment in middle</div><div class=3D""><br class=3D""></div><div class=3D""><=
+br class=3D""></div>Hi Jane,<div class=3D""><br class=3D""></div><div class=
+=3D"">I can access that page, but I don=E2=80=99t see any content on it.</d=
+iv><div class=3D""><br class=3D""></div><div class=3D"">It might be my inte=
+rnet connection at Java Johns, I=E2=80=99ll try again when I=E2=80=99m back=
+ at my office.</div><div class=3D""><br class=3D""></div><div class=3D"">=
+=E2=80=94 John</div><div class=3D""><br class=3D""></div><div class=3D""><br=
+ class=3D""><div class=3D""><blockquote type=3D"cite" class=3D""><div class=
+=3D"">On May 22, 2017, at 9:16am, Jane Doe &lt;<a href=3D"mailto:jane.=
+doe@domain.com" class=3D"">jane.doe@domain.com</a>&gt; wro=
+te:</div><br class=3D"Apple-interchange-newline"><div class=3D""><meta http=
+-equiv=3D"Content-Type" content=3D"text/html charset=3Dutf-8" class=3D""><d=
+iv style=3D"word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-b=
+reak: after-white-space;" class=3D""><br class=3D""><div class=3D"">
+<div style=3D"letter-spacing: normal; text-align: start; text-indent: 0px; =
+text-transform: none; white-space: normal; word-spacing: 0px; -webkit-text-=
+stroke-width: 0px; word-wrap: break-word; -webkit-nbsp-mode: space; -webkit=
+-line-break: after-white-space;" class=3D""><div style=3D"word-wrap: break-=
+word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;" cla=
+ss=3D""><div style=3D"font-family: Helvetica; font-size: 12px; font-style: =
+normal; font-variant-caps: normal; font-weight: normal; letter-spacing: nor=
+mal; text-align: start; text-indent: 0px; text-transform: none; white-space=
+: normal; word-spacing: 0px; -webkit-text-stroke-width: 0px;" class=3D"">Hi=
+ John,&nbsp;</div><div style=3D"font-family: Helvetica; font-size: 12px; fon=
+t-style: normal; font-variant-caps: normal; font-weight: normal; letter-spa=
+cing: normal; text-align: start; text-indent: 0px; text-transform: none; wh=
+ite-space: normal; word-spacing: 0px; -webkit-text-stroke-width: 0px;" clas=
+s=3D"">Did you have a chance to body 2 look at the Board with competitor sc=
+reenshots.&nbsp;<a href=3D"https://realtimeboard.com/app/board/o9J_k0-_0Xg=
+=3D/" class=3D"">https://realtimeboard.com/app/board/o9J_k0-_0Xg=3D/</a></d=
+iv><div style=3D"font-family: Helvetica; font-size: 12px; font-style: norma=
+l; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; =
+text-align: start; text-indent: 0px; text-transform: none; white-space: nor=
+mal; word-spacing: 0px; -webkit-text-stroke-width: 0px;" class=3D"">Can you=
+ work with it? I think there is no need to upload it to our Wiki. I plan to=
+ add more competitors to the board.</div><div style=3D"font-family: Helveti=
+ca; font-size: 12px; font-style: normal; font-variant-caps: normal; font-we=
+ight: normal; letter-spacing: normal; text-align: start; text-indent: 0px; =
+text-transform: none; white-space: normal; word-spacing: 0px; -webkit-text-=
+stroke-width: 0px;" class=3D""><br class=3D""></div><div style=3D"font-fami=
+ly: Helvetica; font-size: 12px; font-style: normal; font-variant-caps: norm=
+al; font-weight: normal; letter-spacing: normal; text-align: start; text-in=
+dent: 0px; text-transform: none; white-space: normal; word-spacing: 0px; -w=
+ebkit-text-stroke-width: 0px;" class=3D"">Please let me know how I can help=
+ you.&nbsp;</div><div style=3D"font-family: Helvetica; font-size: 12px; fon=
+t-style: normal; font-variant-caps: normal; font-weight: normal; letter-spa=
+cing: normal; text-align: start; text-indent: 0px; text-transform: none; wh=
+ite-space: normal; word-spacing: 0px; -webkit-text-stroke-width: 0px;" clas=
+s=3D"">Jane&nbsp;</div><div style=3D"font-family: Helvetica; font-size: 12px=
+; font-style: normal; font-variant-caps: normal; font-weight: normal; lette=
+r-spacing: normal; text-align: start; text-indent: 0px; text-transform: non=
+e; white-space: normal; word-spacing: 0px; -webkit-text-stroke-width: 0px;"=
+ class=3D"">&nbsp;</div></div></div>
+</div>
+<br class=3D""><div class=3D""><blockquote type=3D"cite" class=3D""><div cl=
+ass=3D"">On 22 May 2017, at 07:54, John Smith &lt;<a href=3D"mailto:john.sm=
+ith@domain.com" class=3D"">john.smith@domain.com</a>&gt; wrote:</div=
+><br class=3D"Apple-interchange-newline"><div class=3D""><meta http-equiv=
+=3D"Content-Type" content=3D"text/html charset=3Dutf-8" class=3D""><div sty=
+le=3D"word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: =
+after-white-space;" class=3D"">Hi Jane,<div class=3D""><br class=3D""></div>=
+<div class=3D"">I=E2=80=99m signed up, and part of the =E2=80=9CDomain=
+=E2=80=9D team.</div><div class=3D""><br class=3D""></div><div class=3D"">=
+=E2=80=94 John<br class=3D""><div class=3D""><br class=3D""><blockquote type=
+=3D"cite" class=3D""><div class=3D"">Begin forwarded message:</div><br clas=
+s=3D"Apple-interchange-newline"><div style=3D"margin-top: 0px; margin-right=
+: 0px; margin-bottom: 0px; margin-left: 0px;" class=3D""><span style=3D"fon=
+t-family: -webkit-system-font, 'Helvetica Neue', Helvetica, sans-serif;" cl=
+ass=3D""><b class=3D"">From: </b></span><span style=3D"font-family: -webkit=
+-system-font, Helvetica Neue, Helvetica, sans-serif;" class=3D"">RealtimeBo=
+ard Team &lt;<a href=3D"mailto:notification@realtimeboard.com" class=3D"">n=
+otification@realtimeboard.com</a>&gt;<br class=3D""></span></div><div style=
+=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0p=
+x;" class=3D""><span style=3D"font-family: -webkit-system-font, 'Helvetica =
+Neue', Helvetica, sans-serif;" class=3D""><b class=3D"">Subject: </b></span=
+><span style=3D"font-family: -webkit-system-font, Helvetica Neue, Helvetica=
+, sans-serif;" class=3D""><b class=3D"">Jane Doe Has Invited You to T=
+eam "Jane" at RealtimeBoard</b><br class=3D""></span></div><div style=3D"mar=
+gin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px;" cla=
+ss=3D""><span style=3D"font-family: -webkit-system-font, 'Helvetica Neue', =
+Helvetica, sans-serif;" class=3D""><b class=3D"">Date: </b></span><span sty=
+le=3D"font-family: -webkit-system-font, Helvetica Neue, Helvetica, sans-ser=
+if;" class=3D"">May 19, 2017 at 3:24:41pm PDT<br class=3D""></span></div><d=
+iv style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-=
+left: 0px;" class=3D""><span style=3D"font-family: -webkit-system-font, 'He=
+lvetica Neue', Helvetica, sans-serif;" class=3D""><b class=3D"">To: </b></s=
+pan><span style=3D"font-family: -webkit-system-font, Helvetica Neue, Helvet=
+ica, sans-serif;" class=3D"">&lt;<a href=3D"mailto:john.smith@domain.com=
+" class=3D"">john.smith@domain.com</a>&gt;<br class=3D""></span></div><d=
+iv style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-=
+left: 0px;" class=3D""><span style=3D"font-family: -webkit-system-font, 'He=
+lvetica Neue', Helvetica, sans-serif;" class=3D""><b class=3D"">Reply-To: <=
+/b></span><span style=3D"font-family: -webkit-system-font, Helvetica Neue, =
+Helvetica, sans-serif;" class=3D"">Jane Doe &lt;<a href=3D"mailto:jane=
+.doe@domain.com" class=3D"">jane.doe@domain.com</a>&gt;<br=
+ class=3D""></span></div></blockquote></div></div></div></div></blockquote>=
+</div></div></div></blockquote><div class=3D""><br class=3D""></div><div cl=
+ass=3D""><br class=3D""></div></div></div></body></html>
+--Apple-Mail=_7280EA35-27ED-4485-9978-4D9FFCE613A6
+Content-Disposition: inline; filename=tzora-titan-4-hummer-xl-manual.pdf
+Content-Type: application/pdf; x-unix-mode=0644; name="tzora-titan-4-hummer-xl-manual.pdf"
+Content-Transfer-Encoding: base64
+
+
+--Apple-Mail=_7280EA35-27ED-4485-9978-4D9FFCE613A6
+Content-Transfer-Encoding: 7bit
+Content-Type: text/html; charset=us-ascii
+
+<html><head><meta http-equiv="Content-Type" content="text/html charset=us-ascii"><meta http-equiv="Content-Type" content="text/html charset=utf-8"></head><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;" class=""><div class=""><div class=""><br class=""><blockquote type="cite" class=""><div class=""><div style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;" class=""><div class=""><blockquote type="cite" class=""><div class=""><div style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;" class=""><div class=""><div class=""><blockquote type="cite" class=""><br class=""><div class=""><!-- name: Invite To Team En -->
+<!-- template slug: invite-to-team-en -->
+<!-- template labels: System -->
+<!-- from address: notification@realtimeboard.com -->
+<!-- from name: RealtimeBoard Team -->
+<!-- subject: Jane Doe Has Invited You to Team "Jane" at RealtimeBoard -->
+<!-- text:  -->
+
+
+
+
+
+    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" class="">
+
+
+<div style="Margin: 0;" class="">
+<table width="100%" cellpadding="0" cellspacing="0" border="0" style="border-collapse:collapse; background-color: #F0F5F7;" class="">
+    <tbody class=""><tr class="">
+        <td align="center" class="">
+            <table width="580" cellpadding="0" cellspacing="0" border="0" align="center" style="border-collapse:collapse;" class="">
+                <tbody class=""><tr class="">
+                    <td class="">
+                        <table width="100%" cellpadding="0" cellspacing="0" border="0" class="">
+                            <tbody class=""><tr class="">
+                                <td class="">
+                                    <table width="100%" cellpadding="0" cellspacing="0" border="0" style="border-collapse:collapse;" class="">
+                                        <tbody class=""><tr class="">
+                                            <td align="right" valign="top" class="">
+                                                <div style="width: 80px; height: 30px; background: #FBCF47;" class=""></div>
+                                            </td>
+                                            <td width="50" class=""></td>
+                                        </tr>
+                                    </tbody></table>
+                                </td>
+                            </tr>
+                        </tbody></table>
+
+
+                        <!-- ================== -->
+                        <!-- START CONTENT HERE -->
+                        <!-- ================== -->
+                        <table width="100%" cellpadding="0" cellspacing="0" border="0" style="background-color:#fff; border-radius:2px;" class="">
+                            <tbody class=""><tr class="">
+                                <td colspan="4" class="">
+
+                                    <table width="100%" cellpadding="0" cellspacing="0" border="0" class="">
+                                        <tbody class=""><tr class="">
+                                            <td class="">
+                                                <table width="100%" cellpadding="0" cellspacing="0" border="0" style="border-collapse:collapse;" class="">
+                                                    <tbody class=""><tr class="">
+                                                        <td align="right" valign="top" class="">
+                                                            <a href="https://mandrillapp.com/track/click/30166792/realtimeboard.com?p=eyJzIjoiMEVnZUstNFZxcERLRFE5blZRMHlSS1BLRS0wIiwidiI6MSwicCI6IntcInVcIjozMDE2Njc5MixcInZcIjoxLFwidXJsXCI6XCJodHRwczpcXFwvXFxcL3JlYWx0aW1lYm9hcmQuY29tXFxcL2luZGV4XFxcL1wiLFwiaWRcIjpcIjc0YjY5NzcwYTQwNzRlMjFiNTU4MmY5NDE1YmRlYTZjXCIsXCJ1cmxfaWRzXCI6W1wiMDk5NjcwYTJiNmVhYTliMDE1YzdhZDkxOGUyZDNkMDBlOWY2OGFmYlwiXX0ifQ" target="_blank" class="">
+                                                                <img src="https://letter.realtimeboard.com/2015-09-17/logo-small.png" width="80" height="50" border="0" alt="" style="display: inline-block;" class="">
+                                                            </a>
+                                                        </td>
+                                                        <td width="50" class=""></td>
+                                                    </tr>
+                                                </tbody></table>
+                                            </td>
+                                        </tr>
+                                    </tbody></table>
+
+                                    <table width="100%" cellpadding="0" cellspacing="0" border="0" style="border-collapse:collapse;" class="">
+                                        <tbody class=""><tr class="">
+                                            <td colspan="2" class="">
+                                                <div style="line-height: 30px;" class="">&nbsp;<br class=""></div>
+                                            </td>
+                                        </tr>
+                                        <tr class="">
+                                            <td width="120" class=""></td>
+                                            <td align="left" valign="top" style="font-family: Helvetica, Arial, sans-serif; font-size: 14px; font-weight: normal; color: #343C4C; line-height: 16px;" class="">Hi <a href="mailto:john.smith@domain.com" class="">john.smith@domain.com</a>!</td>
+                                        </tr>
+                                    </tbody></table>
+
+                                    <table width="100%" cellpadding="0" cellspacing="0" border="0" style="border-collapse:collapse;" class="">
+                                        <tbody class=""><tr class="">
+                                            <td colspan="4" class="">
+                                                <div style="line-height: 30px;" class="">&nbsp;<br class=""></div>
+                                            </td>
+                                        </tr>
+                                        <tr class="">
+                                            <td align="right" valign="middle" width="100" class="">
+                                                
+                                                <img src="https://d38pxtc7jddmir.cloudfront.net/5252525252/125642/204/77/1/big.jpg" alt="" border="0" style="width: 50px; height: 50px; display: block; border-radius: 50%;" width="50" height="50" class="">
+                                                
+                                            </td>
+                                            <td width="20" class=""></td>
+                                            <td align="left" valign="middle" class="">
+                                                <div style="font-family: Helvetica, Arial, sans-serif; font-size: 14px; font-weight: normal; color: #343C4C; line-height: 24px;" class="">Jane Doe has added you to the team "Jane".</div>
+                                            </td>
+                                            <td width="120" align="left" valign="middle" class=""></td>
+                                        </tr>
+                                    </tbody></table>
+
+                                    <table width="100%" cellpadding="0" cellspacing="0" border="0" style="border-collapse:collapse;" class="">
+                                        <tbody class=""><tr class="">
+                                            <td colspan="4" class="">
+                                                <div style="line-height: 25px;" class="">&nbsp;<br class=""></div>
+                                            </td>
+                                        </tr>
+                                        <tr class="">
+                                            <td align="right" valign="middle" width="100" class=""></td>
+                                            <td width="20" class=""></td>
+                                            <td align="left" valign="middle" class="">
+                                                <div style="font-family: Helvetica, Arial, sans-serif; font-size: 12px; font-weight: normal; color: #6B7588; line-height: 22px;" class="">
+                                                    body 3 RealtimeBoard is an endless online whiteboard that can store an endless flow of ideas. Work on your projects visually and see what your colleagues and friends are doing in real-time!
+                                                </div>
+                                            </td>
+                                            <td width="120" align="left" valign="middle" class=""></td>
+                                        </tr>
+                                    </tbody></table>
+
+
+                                    <table width="100%" cellpadding="0" cellspacing="0" border="0" style="border-collapse:collapse;" class="">
+                                        <tbody class=""><tr class="">
+                                            <td colspan="2" class="">
+                                                <div style="line-height: 25px;" class="">&nbsp;<br class=""></div>
+                                            </td>
+                                        </tr>
+                                        <tr class="">
+                                            <td width="120" class=""></td>
+                                            <td class="">
+                                                <table border="0" cellpadding="0" cellspacing="0" width="100%" style="background-color:#6699FF; border-radius:2px;" class="">
+                                                    <tbody class=""><tr class="">
+                                                        <td align="center" valign="middle" height="60" style="font-family: Helvetica, Arial, sans-serif; font-size: 14px; line-height: 17px; font-weight: bold; text-transform: uppercase; color: #FFFFFF; letter-spacing: 1px;" class="">
+                                                            <a href="https://mandrillapp.com/track/click/30166792/realtimeboard.com?p=eyJzIjoieWxuSjNqdXdXZjByb2VadXhJSEFrY21BMUFNIiwidiI6MSwicCI6IntcInVcIjozMDE2Njc5MixcInZcIjoxLFwidXJsXCI6XCJodHRwczpcXFwvXFxcL3JlYWx0aW1lYm9hcmQuY29tXFxcL2FwcFxcXC8_aW52aXRlPTJhYWFhYWFhYjYzMDkzZDg4NWU5NGM2MzRlNmExNTQyLWQxNzQxOGFhNmQyOThjMDktY2MwZTgzM2I2YjI4ZmI3OS1kNjg4NzcyMTUzYTljMzYwJmV2ZW50PW1haWxJbnZpdGUmbWFpbFVzZXJFbWFpbD1rZW4ua3J1Z2xlciU0MHNhbGVzaGVyby5haSZ0cmFjaz10cnVlXCIsXCJpZFwiOlwiNzRiNjk3NzBhNDA3NGUyMWI1NTgyZjk0MTViZGVhNmNcIixcInVybF9pZHNcIjpbXCI3NGNkMDQ2MmRhOWE2ZDA5OTAzZTdlNGY1OTRiM2IyMzRjMjAxYzg3XCJdfSJ9" target="_blank" style="color:#FFFFFF; text-decoration:none; display: block; line-height: 70px;" class="">Join right now</a>
+                                                        </td>
+                                                    </tr>
+                                                </tbody></table>
+                                            </td>
+                                            <td width="120" class=""></td>
+                                        </tr>
+                                        <tr class="">
+                                            <td colspan="2" class="">
+                                                <div style="line-height: 41px;" class="">&nbsp;<br class=""></div>
+                                            </td>
+                                        </tr>
+                                    </tbody></table>
+                                </td>
+                            </tr>
+                            <tr class="">
+                                <td colspan="4" class="">
+                                    <div style="line-height: 34px; border-top: 1px solid #F0F5F7;" class="">&nbsp;<br class=""></div>
+                                </td>
+                            </tr>
+                            <tr class="">
+                                <td width="50" class="">&nbsp;</td>
+                                <td valign="top" width="70" class="">
+                                    <img src="https://letter.realtimeboard.com/2015-09-17/welcome.png" width="48" height="48" border="0" alt="" style="display: inline-block;" class="">
+                                </td>
+                                <td align="left" valign="middle" style="font-family: Helvetica, Arial, sans-serif; font-size: 12px; font-weight: normal; color: #6B7588; line-height: 22px;" class="">
+                                    Not sure why you are receiving this?<br class="">
+                                    Ask Jane Doe at <a href="mailto:jane.doe@domain.com" target="_blank" style="font-family: Helvetica, Arial, sans-serif; font-size: 12px; font-weight: normal; color: #6699FF; line-height: 22px; text-decoration: underline;" class="">jane.doe@domain.com</a>
+                                </td>
+                                <td width="130" class=""></td>
+                            </tr>
+                            <tr class="">
+                                <td width="50" class="">&nbsp;</td>
+                                <td valign="top" width="70" class=""></td>
+                                <td align="left" valign="middle" style="font-family: Helvetica, Arial, sans-serif; font-size: 12px; font-weight: normal; color: #6B7588; line-height: 22px;" class="">
+                                    <br class="">
+                                    Other people in this team:<br class="">
+                                    Jane Doe, Thomas
+                                </td>
+                                <td width="130" class=""></td>
+                            </tr>
+                            <tr class="">
+                                <td width="50" class="">&nbsp;</td>
+                                <td valign="top" width="70" class=""></td>
+                                <td align="left" valign="middle" style="font-family: Helvetica, Arial, sans-serif; font-size: 12px; font-weight: normal; color: #6B7588; line-height: 22px;" class="">
+                                    <br class="">
+                                    Happy whiteboarding!<br class="">
+                                    RealtimeBoard Team.
+                                </td>
+                                <td width="130" class=""></td>
+                            </tr>
+                            <tr class="">
+                                <td colspan="4" class="">
+                                    <div style="line-height: 37px;" class="">&nbsp;<br class=""></div>
+                                </td>
+                            </tr>
+                        </tbody></table>
+                        <!-- ================== -->
+                        <!--  END CONTENT HERE  -->
+                        <!-- ================== -->
+
+                        <table width="100%" cellpadding="0" cellspacing="0" border="0" class="">
+                            <tbody class=""><tr class="">
+                                <td class="">
+                                    <div style="line-height: 45px;" class="">&nbsp;<br class=""></div>
+                                </td>
+                            </tr>
+
+                            <tr class="">
+                                <td align="center" class="">
+                                    <a href="https://mandrillapp.com/track/click/30166792/realtimeboard.com?p=eyJzIjoicXZneG9NVVppWkZHSTVlUmtObHRvSFZPMXRRIiwidiI6MSwicCI6IntcInVcIjozMDE2Njc5MixcInZcIjoxLFwidXJsXCI6XCJodHRwczpcXFwvXFxcL3JlYWx0aW1lYm9hcmQuY29tXFxcL3ByZXBhcmVcXFwvYmxvZ1xcXC8_dHJhY2s9dHJ1ZVwiLFwiaWRcIjpcIjc0YjY5NzcwYTQwNzRlMjFiNTU4MmY5NDE1YmRlYTZjXCIsXCJ1cmxfaWRzXCI6W1wiMjc1ZmQ0NGZmYWFkM2RjMjZhNzI4ZWI0NGExNjk2MGQ1ZmZiN2IwYVwiXX0ifQ" target="_blank" style="font-family: Helvetica, Arial, sans-serif; font-size: 14px; font-weight: normal; color: #6B7588; line-height: 16px; text-decoration: underline;" class="">RealtimeBlog</a>
+                                </td>
+                            </tr>
+
+                            <tr class="">
+                                <td class="">
+                                    <div style="line-height: 39px;" class="">&nbsp;<br class=""></div>
+                                </td>
+                            </tr>
+
+                            <tr class="">
+                                <td align="center" class="">
+                                    <table width="176" cellpadding="0" cellspacing="0" border="0" align="center" style="border-collapse:collapse; text-align: center;" class="">
+                                        <tbody class=""><tr class="">
+                                            <td width="35" class="">
+                                                <a href="https://mandrillapp.com/track/click/30166792/www.facebook.com?p=eyJzIjoicUlPaUlQODhxb0c1cmpNa3VhV01aaXZHYjVrIiwidiI6MSwicCI6IntcInVcIjozMDE2Njc5MixcInZcIjoxLFwidXJsXCI6XCJodHRwczpcXFwvXFxcL3d3dy5mYWNlYm9vay5jb21cXFwvUmVhbHRpbWVCb2FyZFwiLFwiaWRcIjpcIjc0YjY5NzcwYTQwNzRlMjFiNTU4MmY5NDE1YmRlYTZjXCIsXCJ1cmxfaWRzXCI6W1wiZTdlN2QyYWRlMWU3ZGNkYTNlMmQxNGRjYmNjNjNmODA4MDBiNDFiY1wiXX0ifQ" target="_blank" class="">
+                                                    <img src="https://letter.realtimeboard.com/2015-09-17/f.png" width="35" height="35" border="0" alt="" style="display: inline-block;" class="">
+                                                </a>
+                                            </td>
+                                            <td width="12" class="">&nbsp;</td>
+                                            <td width="35" class="">
+                                                <a href="https://mandrillapp.com/track/click/30166792/twitter.com?p=eyJzIjoiQm5xalpTem1Td1kzZHZQWFMzMWx2TW95YUw4IiwidiI6MSwicCI6IntcInVcIjozMDE2Njc5MixcInZcIjoxLFwidXJsXCI6XCJodHRwczpcXFwvXFxcL3R3aXR0ZXIuY29tXFxcL3JlYWx0aW1lYm9hcmRcIixcImlkXCI6XCI3NGI2OTc3MGE0MDc0ZTIxYjU1ODJmOTQxNWJkZWE2Y1wiLFwidXJsX2lkc1wiOltcImZhYmNlMTMxMjgyYmU4NDI4MGJlY2FmMmI3YWE2OGZjZDFmNDU2YTFcIl19In0" target="_blank" class="">
+                                                    <img src="https://letter.realtimeboard.com/2015-09-17/t.png" width="35" height="35" border="0" alt="" style="display: inline-block;" class="">
+                                                </a>
+                                            </td>
+                                            <td width="12" class="">&nbsp;</td>
+                                            <td width="35" class="">
+                                                <a href="https://mandrillapp.com/track/click/30166792/vimeo.com?p=eyJzIjoiS0V5ZTRVLVpfcEdKRGFpbExKM3hiM2c0enBnIiwidiI6MSwicCI6IntcInVcIjozMDE2Njc5MixcInZcIjoxLFwidXJsXCI6XCJodHRwczpcXFwvXFxcL3ZpbWVvLmNvbVxcXC9yZWFsdGltZWJvYXJkXCIsXCJpZFwiOlwiNzRiNjk3NzBhNDA3NGUyMWI1NTgyZjk0MTViZGVhNmNcIixcInVybF9pZHNcIjpbXCI3MGIyYmUyODU2MWZkZmU4MDUyZmQ1ZDIxYjA1NzRiNzM1NmEyYjIzXCJdfSJ9" target="_blank" class="">
+                                                    <img src="https://letter.realtimeboard.com/2015-09-17/v.png" width="35" height="35" border="0" alt="" style="display: inline-block;" class="">
+                                                </a>
+                                            </td>
+                                            <td width="12" class="">&nbsp;</td>
+                                            <td width="35" class="">
+                                                <a href="https://mandrillapp.com/track/click/30166792/plus.google.com?p=eyJzIjoidEZ0eVBCLWNlTnJHU0U1bXRXNEIyd3c1YUxzIiwidiI6MSwicCI6IntcInVcIjozMDE2Njc5MixcInZcIjoxLFwidXJsXCI6XCJodHRwczpcXFwvXFxcL3BsdXMuZ29vZ2xlLmNvbVxcXC8xMTE5NDQ4ODc0NTMxNTMzMTkxNjVcXFwvcG9zdHNcIixcImlkXCI6XCI3NGI2OTc3MGE0MDc0ZTIxYjU1ODJmOTQxNWJkZWE2Y1wiLFwidXJsX2lkc1wiOltcImRjNzZlZjZkMDIyMzEwOTgxNGE0NWJhODZhOWE2YmM4MTY4ZDRhNDNcIl19In0" target="_blank" class="">
+                                                    <img src="https://letter.realtimeboard.com/2015-09-17/g.png" width="35" height="35" border="0" alt="" style="display: inline-block;" class="">
+                                                </a>
+                                            </td>
+                                        </tr>
+                                    </tbody></table>
+                                </td>
+                            </tr>
+
+                            <tr class="">
+                                <td class="">
+                                    <div style="line-height: 34px;" class="">&nbsp;<br class=""></div>
+                                </td>
+                            </tr>
+
+                            <tr class="">
+                                <td class="">
+                                    <div style="line-height: 22px;" class="">&nbsp;<br class=""></div>
+                                </td>
+                            </tr>
+
+                        </tbody></table>
+                    </td>
+                </tr>
+
+                <tr class="">
+                    <td class="">
+                        <div style="line-height: 45px;" class="">&nbsp;<br class=""></div>
+                    </td>
+                </tr>
+
+            </tbody></table>
+        </td>
+    </tr>
+</tbody></table>
+<div style="display:none; white-space:nowrap; font:15px courier; line-height:0;" class="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>
+<img src="https://mandrillapp.com/track/open.php?u=30166792&amp;id=74b69770a4074e21b5582f9415bdea6c" height="1" width="1" class=""></div>
+
+</div></blockquote></div><br class=""></div></div></div></blockquote></div><br class=""></div></div></blockquote></div><br class=""></div></body></html>
+--Apple-Mail=_7280EA35-27ED-4485-9978-4D9FFCE613A6--
+--Apple-Mail=_C81A339C-755B-4F48-AEF5-6A55B22BC8FA--
\ No newline at end of file
