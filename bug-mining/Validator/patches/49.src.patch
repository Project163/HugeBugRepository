diff --git a/RELEASE-NOTES.txt b/RELEASE-NOTES.txt
index 5b23b39a..0f3dfd9e 100644
--- a/RELEASE-NOTES.txt
+++ b/RELEASE-NOTES.txt
@@ -81,6 +81,11 @@ IMPROVEMENTS OVER PREVIOUS RELEASE
                      Thanks to Sam Cooley
  * [VALIDATOR-334] - UrlValidator: isValidAuthority() returning true when supplied authority validator fails
                      Clarified documentation: validator is intended as an override
+ * [VALIDATOR-344] - AbstractCheckDigit class does not fully test invalid strings
+                     Fix up the testCalculateInvalid() invalid method to allow for 
+                     either invalid checksum or syntax (CheckDigitException) error
+                     when testing the entries in the invalid array.
+                     
 
 DEPRECATIONS
 ============
diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 30a7161a..04afa868 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -43,6 +43,12 @@ The <action> type attribute can be add,update,fix,remove.
   <body>
 
   <release version="1.4.1" date="tba" description="1.4 Maintenance release">
+    <action issue="VALIDATOR-344" dev="sebb" type="fix" >
+      AbstractCheckDigit class does not fully test invalid strings
+      Fix up the testCalculateInvalid() invalid method to allow for 
+      either invalid checksum or syntax (CheckDigitException) error
+      when testing the entries in the invalid array.
+    </action>
     <action issue="VALIDATOR-297" dev="sebb" type="fix">
       Punycode url is not valid
       Top-level domain regex matching was wrong; did not allow embedded "-" as per RFC2396
diff --git a/src/test/java/org/apache/commons/validator/routines/checkdigit/AbstractCheckDigitTest.java b/src/test/java/org/apache/commons/validator/routines/checkdigit/AbstractCheckDigitTest.java
index e3f57c53..e4a7955f 100644
--- a/src/test/java/org/apache/commons/validator/routines/checkdigit/AbstractCheckDigitTest.java
+++ b/src/test/java/org/apache/commons/validator/routines/checkdigit/AbstractCheckDigitTest.java
@@ -179,13 +179,23 @@ public abstract class AbstractCheckDigitTest extends TestCase {
         // test invalid code values
         for (int i = 0; i < invalid.length; i++) {
             try {
+                final String code = invalid[i];
                 if (log.isDebugEnabled()) {
-                    log.debug("   " + i + " Testing Invalid Check Digit, Code=[" + invalid[i] + "]");
+                    log.debug("   " + i + " Testing Invalid Check Digit, Code=[" + code + "]");
                 }
-                routine.calculate(invalid[i]);
-                fail("Invalid Characters[" + i + "]=" +  invalid[i] + " - expected exception");
-            } catch (Exception e) {
-                assertTrue("Invalid Character[" +i +"]=" +  e.getMessage(), e.getMessage().startsWith("Invalid Character["));
+                String expected = checkDigit(code);
+                String actual = routine.calculate(removeCheckDigit(code));
+                // If exception not thrown, check that the digit is incorrect instead
+                if (expected.equals(actual)) {
+                    fail("Expected mismatch for " + code + " expected " + expected + " actual " + actual);
+                }
+            } catch (CheckDigitException e) {
+                // possible failure messages:
+                // Invalid ISBN Length ...
+                // Invalid Character[ ...
+                // Are there any others?
+                assertTrue("Invalid Character[" +i +"]=" +  e.getMessage(), e.getMessage().startsWith("Invalid "));
+// WAS                assertTrue("Invalid Character[" +i +"]=" +  e.getMessage(), e.getMessage().startsWith("Invalid Character["));
             }
         }
     }
