diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index f9ff6d9d..43cea4a0 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -98,6 +98,9 @@ The dependencies for Validator have not changed since the 1.4 release.
 For the current list of dependencies, please see
 http://commons.apache.org/validator/dependencies.html
   ">
+    <action issue="VALIDATOR-420" type="fix" dev="sebb" due-to="Marcin Gasior">
+    Query params validator shouldn't accept whitespaces
+    </action>
     <action issue="VALIDATOR-419" type="fix" dev="sebb" due-to="Denis Iskhakov">
     Invalid IPv6 addresses that are IPv4-mapped pass InetAddressValidator validation
     </action>
diff --git a/src/main/java/org/apache/commons/validator/routines/UrlValidator.java b/src/main/java/org/apache/commons/validator/routines/UrlValidator.java
index d7649123..312c8e87 100644
--- a/src/main/java/org/apache/commons/validator/routines/UrlValidator.java
+++ b/src/main/java/org/apache/commons/validator/routines/UrlValidator.java
@@ -168,7 +168,7 @@ public class UrlValidator implements Serializable {
     private static final String PATH_REGEX = "^(/[-\\w:@&?=+,.!/~*'%$_;\\(\\)]*)?$";
     private static final Pattern PATH_PATTERN = Pattern.compile(PATH_REGEX);
 
-    private static final String QUERY_REGEX = "^(.*)$";
+    private static final String QUERY_REGEX = "^(\\S*)$";
     private static final Pattern QUERY_PATTERN = Pattern.compile(QUERY_REGEX);
 
     /**
diff --git a/src/test/java/org/apache/commons/validator/routines/UrlValidatorTest.java b/src/test/java/org/apache/commons/validator/routines/UrlValidatorTest.java
index 7ee65943..9e48e07d 100644
--- a/src/test/java/org/apache/commons/validator/routines/UrlValidatorTest.java
+++ b/src/test/java/org/apache/commons/validator/routines/UrlValidatorTest.java
@@ -491,6 +491,13 @@ protected void setUp() {
        assertTrue(validator.isValid("http://www.apache.org:/path"));
    }
 
+   public void testValidator420() {
+       UrlValidator validator = new UrlValidator();
+       assertFalse(validator.isValid("http://example.com/serach?address=Main Avenue"));
+       assertTrue(validator.isValid("http://example.com/serach?address=Main%20Avenue"));
+       assertTrue(validator.isValid("http://example.com/serach?address=Main+Avenue"));
+   }
+
    //-------------------- Test data for creating a composite URL
    /**
     * The data given below approximates the 4 parts of a URL
