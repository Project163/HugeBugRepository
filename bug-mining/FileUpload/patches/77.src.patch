diff --git a/spotbugs-exclude-filter.xml b/spotbugs-exclude-filter.xml
index e6800287..1ad2747f 100644
--- a/spotbugs-exclude-filter.xml
+++ b/spotbugs-exclude-filter.xml
@@ -32,19 +32,10 @@
         <Class name="org.apache.commons.fileupload2.MultipartStream" />
         <Bug pattern="MS_PKGPROTECT" />
     </Match>
-    <Match>
-        <Class name="org.apache.commons.fileupload2.ParameterParser" />
-        <Method name="parse" />
-        <Bug pattern="EI_EXPOSE_REP2" />
-    </Match>
     <Match>
         <Class name="org.apache.commons.fileupload2.disk.DiskFileItem" />
         <Bug pattern="DM_DEFAULT_ENCODING" />
     </Match>
-    <Match>
-        <Class name="org.apache.commons.fileupload2.disk.DiskFileItem" />
-        <Bug pattern="EI_EXPOSE_REP" />
-    </Match>
     <Match>
         <Class name="org.apache.commons.fileupload2.disk.DiskFileItem" />
         <Bug pattern="RV_RETURN_VALUE_IGNORED_BAD_PRACTICE" />
diff --git a/src/main/java/org/apache/commons/fileupload2/ParameterParser.java b/src/main/java/org/apache/commons/fileupload2/ParameterParser.java
index 929da800..22f2328c 100644
--- a/src/main/java/org/apache/commons/fileupload2/ParameterParser.java
+++ b/src/main/java/org/apache/commons/fileupload2/ParameterParser.java
@@ -299,7 +299,7 @@ public class ParameterParser {
             return new HashMap<>();
         }
         final HashMap<String, String> params = new HashMap<>();
-        this.chars = charArray;
+        this.chars = charArray.clone();
         this.pos = offset;
         this.len = length;
 
diff --git a/src/main/java/org/apache/commons/fileupload2/disk/DiskFileItem.java b/src/main/java/org/apache/commons/fileupload2/disk/DiskFileItem.java
index 688ec9bc..fd4b0dc1 100644
--- a/src/main/java/org/apache/commons/fileupload2/disk/DiskFileItem.java
+++ b/src/main/java/org/apache/commons/fileupload2/disk/DiskFileItem.java
@@ -305,7 +305,7 @@ public class DiskFileItem
             if (cachedContent == null && dfos != null) {
                 cachedContent = dfos.getData();
             }
-            return cachedContent;
+            return cachedContent != null ? cachedContent.clone() : new byte[0];
         }
 
         byte[] fileData = new byte[(int) getSize()];
@@ -347,16 +347,15 @@ public class DiskFileItem
      */
     @Override
     public String getString() {
-        byte[] rawdata = new byte[0];
         try {
-            rawdata = get();
+            byte[] rawData = get();
             String charset = getCharSet();
             if (charset == null) {
                 charset = defaultCharset;
             }
-            return new String(rawdata, charset);
+            return new String(rawData, charset);
         } catch (final IOException e) {
-            return new String(rawdata);
+            return new String(new byte[0]);
         }
     }
 
