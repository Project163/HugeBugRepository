diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageExtractor.java
index 1d5df628c..8c9c63885 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageExtractor.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageExtractor.java
@@ -33,6 +33,7 @@ import org.apache.tika.exception.TikaException;
 import org.apache.tika.extractor.EmbeddedDocumentExtractor;
 import org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor;
 import org.apache.tika.io.CloseShieldInputStream;
+import org.apache.tika.io.TemporaryResources;
 import org.apache.tika.io.TikaInputStream;
 import org.apache.tika.metadata.Metadata;
 import org.apache.tika.parser.ParseContext;
@@ -150,9 +151,10 @@ class PackageExtractor {
      * @param xhtml content handler
      * @throws IOException if an IO error occurs
      * @throws SAXException if a SAX error occurs
+     * @throws TikaException if another error occurs
      */
     public void unpack(ArchiveInputStream archive, XHTMLContentHandler xhtml)
-            throws IOException, SAXException {
+            throws IOException, SAXException, TikaException {
         try {
             ArchiveEntry entry = archive.getNextEntry();
             while (entry != null) {
@@ -167,8 +169,13 @@ class PackageExtractor {
                         if (extractor.shouldParseEmbedded(entrydata)) {
                             // For detectors to work, we need a mark/reset supporting
                             //  InputStream, which ArchiveInputStream isn't, so wrap
-                            TikaInputStream stream = TikaInputStream.get(archive);
-                            extractor.parseEmbedded(stream, xhtml, entrydata, true);
+                            TemporaryResources tmp = new TemporaryResources();
+                            try {
+                                TikaInputStream stream = TikaInputStream.get(archive, tmp);
+                                extractor.parseEmbedded(stream, xhtml, entrydata, true);
+                            } finally {
+                                tmp.dispose();
+                            }
                         }
                     } else if (name != null && name.length() > 0) {
                         xhtml.element("p", name);
