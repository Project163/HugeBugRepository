diff --git a/johnzon-jaxrs/src/main/java/org/apache/johnzon/jaxrs/JohnzonMessageBodyWriter.java b/johnzon-jaxrs/src/main/java/org/apache/johnzon/jaxrs/JohnzonMessageBodyWriter.java
index 07d63672..e6a8d364 100644
--- a/johnzon-jaxrs/src/main/java/org/apache/johnzon/jaxrs/JohnzonMessageBodyWriter.java
+++ b/johnzon-jaxrs/src/main/java/org/apache/johnzon/jaxrs/JohnzonMessageBodyWriter.java
@@ -34,7 +34,6 @@ import java.io.InputStream;
 import java.io.OutputStream;
 import java.io.Writer;
 import java.lang.annotation.Annotation;
-import java.lang.reflect.ParameterizedType;
 import java.lang.reflect.Type;
 import java.util.Collection;
 
@@ -82,7 +81,7 @@ public class JohnzonMessageBodyWriter<T> extends IgnorableTypes implements Messa
                         final OutputStream entityStream) throws IOException {
         if (rawType.isArray()) {
             mapper.writeArray(t, entityStream);
-        } else if (Collection.class.isAssignableFrom(rawType) && ParameterizedType.class.isInstance(genericType)) {
+        } else if (Collection.class.isInstance(t)) {
             mapper.writeArray(Collection.class.cast(t), entityStream);
         } else {
             mapper.writeObject(t, entityStream);
diff --git a/johnzon-jaxrs/src/test/java/org/apache/johnzon/jaxrs/JohnzonProviderTest.java b/johnzon-jaxrs/src/test/java/org/apache/johnzon/jaxrs/JohnzonProviderTest.java
index 405c77cf..6af6f689 100644
--- a/johnzon-jaxrs/src/test/java/org/apache/johnzon/jaxrs/JohnzonProviderTest.java
+++ b/johnzon-jaxrs/src/test/java/org/apache/johnzon/jaxrs/JohnzonProviderTest.java
@@ -27,11 +27,13 @@ import org.junit.AfterClass;
 import org.junit.BeforeClass;
 import org.junit.Test;
 
+import javax.ws.rs.Consumes;
 import javax.ws.rs.GET;
 import javax.ws.rs.POST;
 import javax.ws.rs.Path;
 import javax.ws.rs.Produces;
 import javax.ws.rs.WebApplicationException;
+import javax.ws.rs.client.Entity;
 import javax.ws.rs.core.GenericType;
 import javax.ws.rs.core.MediaType;
 import javax.ws.rs.core.StreamingOutput;
@@ -39,6 +41,8 @@ import java.io.IOException;
 import java.io.OutputStream;
 import java.lang.reflect.ParameterizedType;
 import java.lang.reflect.Type;
+import java.util.ArrayList;
+import java.util.Collection;
 import java.util.List;
 
 import static java.util.Arrays.asList;
@@ -126,6 +130,17 @@ public class JohnzonProviderTest {
         }
     }
 
+    @Test
+    public void listPostNoGeneric() {
+        final List<Johnzon> list = new ArrayList<Johnzon>();
+        final Johnzon johnzon = new Johnzon();
+        johnzon.setName("test");
+        list.add(johnzon);
+        list.add(new Johnzon());
+
+        assertTrue(client(MediaType.TEXT_PLAIN_TYPE).path("johnzon/list").post(Entity.json(list), boolean.class));
+    }
+
     private static WebClient client() {
         return client(MediaType.APPLICATION_JSON_TYPE);
     }
@@ -180,6 +195,14 @@ public class JohnzonProviderTest {
             return Boolean.toString("client".equals(f.getName()));
         }
 
+        @POST
+        @Path("list")
+        @Consumes(MediaType.APPLICATION_JSON)
+        @Produces(MediaType.TEXT_PLAIN)
+        public boolean asParam(final Collection<Johnzon> list) {
+            return list.size() == 2 && list.iterator().next().getName().equals("test");
+        }
+
         @GET
         @Path("stream")
         public StreamingOutput out() {
