diff --git a/CHANGES.txt b/CHANGES.txt
index af11a2430..5c48a2efd 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -1,5 +1,8 @@
 Release 2.7.1 - ???
 
+   * Fix bug in closing <a> elements in the presence of <b> elements
+     in RTF files (TIKA-3972).
+
    * Improve extraction of embedded file names in .docx (TIKA-3968).
 
    * Normalize author, title, subject and description to their Dublin Core
diff --git a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module/src/main/java/org/apache/tika/parser/microsoft/rtf/TextExtractor.java b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module/src/main/java/org/apache/tika/parser/microsoft/rtf/TextExtractor.java
index 9388b8461..28ca76299 100644
--- a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module/src/main/java/org/apache/tika/parser/microsoft/rtf/TextExtractor.java
+++ b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module/src/main/java/org/apache/tika/parser/microsoft/rtf/TextExtractor.java
@@ -605,13 +605,7 @@ final class TextExtractor {
             localInParagraph = true;
         }
         if (!localInParagraph) {
-            // Ensure </i></b> order
-            if (groupState.italic) {
-                end("i");
-            }
-            if (groupState.bold) {
-                end("b");
-            }
+            endStyles(groupState);
             if (pendingListEnd != 0 && groupState.list != pendingListEnd) {
                 endList(pendingListEnd);
                 pendingListEnd = 0;
@@ -626,14 +620,7 @@ final class TextExtractor {
                 start(P);
                 pushParagraphTag(P);
             }
-
-            // Ensure <b><i> order
-            if (groupState.bold) {
-                start("b");
-            }
-            if (groupState.italic) {
-                start("i");
-            }
+            startStyles(groupState);
             inParagraph = true;
         }
     }
@@ -696,12 +683,7 @@ final class TextExtractor {
             if (preserveStyles && (groupState.bold || groupState.italic)) {
                 start(P);
                 pushParagraphTag(P);
-                if (groupState.bold) {
-                    start("b");
-                }
-                if (groupState.italic) {
-                    start("i");
-                }
+                startStyles(groupState);
                 inParagraph = true;
             } else {
                 inParagraph = false;
@@ -1199,10 +1181,7 @@ final class TextExtractor {
                         end("i");
                     }
                     groupState.bold = true;
-                    start("b");
-                    if (groupState.italic) {
-                        start("i");
-                    }
+                    startStyles(groupState);
                 }
             } else if (equals("i")) {
                 if (!groupState.italic) {
@@ -1218,14 +1197,7 @@ final class TextExtractor {
         if (equals("pard")) {
             // Reset styles
             pushText();
-            if (groupState.italic) {
-                end("i");
-                groupState.italic = false;
-            }
-            if (groupState.bold) {
-                end("b");
-                groupState.bold = false;
-            }
+            endStyles(groupState);
             if (inList()) { // && (groupStates.size() == 1 || groupStates.peekLast().list < 0))
                 pendingListEnd();
             }
@@ -1233,14 +1205,7 @@ final class TextExtractor {
             if (groupState.italic || groupState.bold) {
                 // Reset styles
                 pushText();
-                if (groupState.italic) {
-                    end("i");
-                    groupState.italic = false;
-                }
-                if (groupState.bold) {
-                    end("b");
-                    groupState.bold = false;
-                }
+                endStyles(groupState);
             }
         } else if (equals("par")) {
             if (!ignored) {
@@ -1399,6 +1364,36 @@ final class TextExtractor {
         }
     }
 
+    private void startStyles(GroupState groupState)
+            throws TikaException, IOException, SAXException {
+        //don't change styles within a <a > element
+        if (fieldState != 0) {
+            return;
+        }
+        // Ensure <b><i> order
+        if (groupState.bold) {
+            start("b");
+        }
+        if (groupState.italic) {
+            start("i");
+        }
+    }
+    private void endStyles(GroupState groupState) throws TikaException, IOException, SAXException {
+        //don't change styles within a <a > element
+        if (fieldState != 0) {
+            return;
+        }
+        // Ensure </i></b> order
+        if (groupState.italic) {
+            end("i");
+            groupState.italic = false;
+        }
+        if (groupState.bold) {
+            end("b");
+            groupState.bold = false;
+        }
+    }
+
     // Push new GroupState
     private void processGroupStart(PushbackInputStream in) throws IOException {
         ansiSkip = 0;
diff --git a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module/src/test/java/org/apache/tika/parser/microsoft/rtf/RTFParserTest.java b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module/src/test/java/org/apache/tika/parser/microsoft/rtf/RTFParserTest.java
index e9b36fdc5..1fd53fe34 100644
--- a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module/src/test/java/org/apache/tika/parser/microsoft/rtf/RTFParserTest.java
+++ b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module/src/test/java/org/apache/tika/parser/microsoft/rtf/RTFParserTest.java
@@ -311,6 +311,14 @@ public class RTFParserTest extends TikaTest {
         assertEquals(-1, content.indexOf("<p>\t\t</p>"));
     }
 
+    @Test
+    public void testHyperLinkAndStyles() throws Exception {
+        String content = getXML("testRTFHyperlinkAndStyles.rtf").xml;
+        String needle = "<b><i>DIP</i>: " +
+                "<a href=\"..\\\\..\\\\SAUCES\\\\Dips\\\\Dip, Caesar.doc\">Dip, Caesar.doc</a></b>";
+        assertContains(needle, content);
+    }
+
     @Test
     public void testIgnoredControlWord() throws Exception {
         assertContains("<p>The quick brown fox jumps over the lazy dog</p>",
diff --git a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module/src/test/resources/test-documents/testRTFHyperlinkAndStyles.rtf b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module/src/test/resources/test-documents/testRTFHyperlinkAndStyles.rtf
new file mode 100644
index 000000000..c7a82a4c8
--- /dev/null
+++ b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module/src/test/resources/test-documents/testRTFHyperlinkAndStyles.rtf
@@ -0,0 +1 @@
+{\rtf1\ansi\deff0\uc1\ansicpg1252\deftab720{\fonttbl{\f0\fnil\fcharset1 Arial;}{\f1\fnil\fcharset1 Times New Roman;}{\f2\fnil\fcharset1 WingDings;}}{\colortbl\red0\green0\blue0;\red255\green0\blue0;\red0\green128\blue0;\red0\green0\blue255;\red255\green255\blue0;\red255\green0\blue255;\red128\green0\blue128;\red128\green0\blue0;\red0\green255\blue0;\red0\green255\blue255;\red0\green128\blue128;\red0\green0\blue128;\red255\green255\blue255;\red192\green192\blue192;\red128\green128\blue128;\red0\green0\blue0;\red128\green128\blue0;}\wpprheadfoot1\paperw12240\paperh15840\margl720\margr720\margt720\margb720\headery720\footery720\endnhere\sectdefaultcl{\*\generator WPTools_5.17;}{\stylesheet{\s1\li0\fi0\ri0\sb0\sa0\ql\vertalt\fs20 Normal;}{\s2\li0\fi0\ri0\sb0\sa0\ql\vertalt\fs20 Default Paragraph Font;}{\s3\li0\fi0\ri0\sb0\sa0\ql\vertalt\fs20\cf3\ul\sbasedon2 Hyperlink;}}{\pard\plain\plain\f1\fs36\par\pard\plain\plain\f1\fs36\par\plain\f1\fs28\tab 10\'94Flour Tortilla\par\plain\f1\fs28\tab Caesar \f1\b\i DIP\f1\i0 : {\field{\*\fldinst{HYPERLINK "..\\\\..\\\\SAUCES\\\\Dips\\\\Dip, Caesar.doc"}}{\*\fldtitle{..\\\\..\\\\SAUCES\\\\Dips\\\\Dip, Caesar.doc}}{\fldrslt{\f1\cf3\cs103\ul\cs3 Dip, Caesar.doc\plain\f1\fs28\b}}}\par\plain\f1\fs28\tab Ripped Romaine\par\plain\f1\fs28\tab Blackened Salmon julienne\par\plain\f1\fs28\tab Shaved Red Onion\par\plain\f1\fs28\tab Julienne Tomato\par\plain\f1\fs28\tab Grated Parmesan\par\plain\f1\fs28\tab Blackening spice: {\field{\*\fldinst{HYPERLINK "..\\\\..\\\\SPICE\\\\Blackening Spice.doc"}}{\*\fldtitle{..\\\\..\\\\SPICE\\\\Blackening Spice.doc}}{\fldrslt{\f1\cf3\cs103\ul\cs3 Blackening Spice.doc\plain\f1\fs28}}}\par\pard\plain\plain\f1\fs28\par\plain\f1\fs28 Method\par\plain\f1\fs28 Procedure Text \par\pard\plain\plain\f1\fs36\par}}
