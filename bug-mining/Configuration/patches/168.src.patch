diff --git a/src/main/java/org/apache/commons/configuration/MapConfiguration.java b/src/main/java/org/apache/commons/configuration/MapConfiguration.java
index 7ae3aea9..dbffc147 100644
--- a/src/main/java/org/apache/commons/configuration/MapConfiguration.java
+++ b/src/main/java/org/apache/commons/configuration/MapConfiguration.java
@@ -239,6 +239,7 @@ public class MapConfiguration extends AbstractConfiguration implements Cloneable
             @SuppressWarnings("unchecked")
             Map<String, Object> clonedMap = (Map<String, Object>) ConfigurationUtils.clone(map);
             copy.map = clonedMap;
+            copy.cloneInterpolator(this);
             return copy;
         }
         catch (CloneNotSupportedException cex)
diff --git a/src/test/java/org/apache/commons/configuration/TestMapConfiguration.java b/src/test/java/org/apache/commons/configuration/TestMapConfiguration.java
index ee3ce2e2..5c8d4e45 100644
--- a/src/test/java/org/apache/commons/configuration/TestMapConfiguration.java
+++ b/src/test/java/org/apache/commons/configuration/TestMapConfiguration.java
@@ -107,6 +107,25 @@ public class TestMapConfiguration extends TestAbstractConfiguration
                 .getString("key1"));
     }
 
+    /**
+     * Tests whether interpolation works as expected after cloning.
+     */
+    @Test
+    public void testCloneInterpolation()
+    {
+        final String keyAnswer = "answer";
+        final String keyValue = "value";
+        MapConfiguration config = (MapConfiguration) getConfiguration();
+        config.addProperty(keyAnswer, "The answer is ${" + keyValue + "}.");
+        config.addProperty(keyValue, 42);
+        MapConfiguration clone = (MapConfiguration) config.clone();
+        clone.setProperty(keyValue, 43);
+        assertEquals("Wrong interpolation in original", "The answer is 42.",
+                config.getString(keyAnswer));
+        assertEquals("Wrong interpolation in clone", "The answer is 43.",
+                clone.getString(keyAnswer));
+    }
+
     /**
      * Tests adding another value to an existing property.
      */
