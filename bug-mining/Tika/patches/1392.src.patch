diff --git a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-text-module/src/main/java/org/apache/tika/parser/csv/CSVSniffer.java b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-text-module/src/main/java/org/apache/tika/parser/csv/CSVSniffer.java
index 24123a56b..1a772c22d 100644
--- a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-text-module/src/main/java/org/apache/tika/parser/csv/CSVSniffer.java
+++ b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-text-module/src/main/java/org/apache/tika/parser/csv/CSVSniffer.java
@@ -134,6 +134,8 @@ class CSVSniffer {
         Map<Integer, MutableInt> rowLengthCounts = new HashMap<>();
         int charsRead = 0;
         int colCount = 0;
+        boolean rowZero = true;
+        boolean rowZeroEmpty = false;
         int encapsulated = 0; //number of cells that are encapsulated in dquotes (for now)
         boolean parseException = false;
 
@@ -326,7 +328,12 @@ class CSVSniffer {
             } else {
                 cnt.increment();
             }
+            if (rowZero && colCount <= 1) {
+                // row zero single column => no delimiter in first line
+                rowZeroEmpty = true;
+            }
             colCount = 0;
+            rowZero = false;
         }
 
         void unquoted(String string) {
@@ -377,6 +384,11 @@ class CSVSniffer {
                 return 0.0;
             }
 
+            if (rowZeroEmpty) {
+                // TIKA-4278: not credible that there would be no delimiter in row zero
+                return 0.0;
+            }
+
             //TODO: convert this to continuous vs vague heuristic step function
             double consistency = (double) max / (double) totalRows;
             return ((1d - (1d / Math.pow(totalRows, 0.3))) * consistency);
