diff --git a/tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java b/tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java
index b6e6dce3a..54a199fae 100644
--- a/tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java
+++ b/tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java
@@ -512,6 +512,7 @@ public class TikaInputStream extends TaggedInputStream {
                 in.close();
                 // Re-point the stream at the file now we have it
                 in = new BufferedInputStream(new FileInputStream(file));
+                length = file.length();
             }
         }
         return file;
diff --git a/tika-core/src/main/java/org/apache/tika/sax/SecureContentHandler.java b/tika-core/src/main/java/org/apache/tika/sax/SecureContentHandler.java
index 4d2f57dcb..866dd290e 100644
--- a/tika-core/src/main/java/org/apache/tika/sax/SecureContentHandler.java
+++ b/tika-core/src/main/java/org/apache/tika/sax/SecureContentHandler.java
@@ -16,6 +16,8 @@
  */
 package org.apache.tika.sax;
 
+import java.io.IOException;
+
 import org.apache.tika.exception.TikaException;
 import org.apache.tika.io.TikaInputStream;
 import org.xml.sax.ContentHandler;
@@ -129,6 +131,18 @@ public class SecureContentHandler extends ContentHandlerDecorator {
         }
     }
 
+    private long getByteCount() throws SAXException {
+        try {
+            if (stream.hasLength()) {
+                return stream.getLength();
+            } else {
+                return stream.getPosition();
+            }
+        } catch (IOException e) {
+            throw new SAXException("Unable to get stream length", e);
+        }
+    }
+
     /**
      * Records the given number of output characters (or more accurately
      * UTF-16 code units). Throws an exception if the recorded number of
@@ -139,9 +153,10 @@ public class SecureContentHandler extends ContentHandlerDecorator {
      */
     private void advance(int length) throws SAXException {
         characterCount += length;
+        long byteCount = getByteCount();
         if (characterCount > threshold
-                && characterCount > stream.getPosition() * ratio) {
-            throw new SecureSAXException();
+                && characterCount > byteCount * ratio) {
+            throw new SecureSAXException(byteCount);
         }
     }
 
@@ -166,9 +181,9 @@ public class SecureContentHandler extends ContentHandlerDecorator {
      */
     private class SecureSAXException extends SAXException {
 
-        public SecureSAXException() {
+        public SecureSAXException(long byteCount) throws SAXException {
             super("Suspected zip bomb: "
-                    + stream.getPosition() + " input bytes produced "
+                    + byteCount + " input bytes produced "
                     + characterCount + " output characters");
         }
 
