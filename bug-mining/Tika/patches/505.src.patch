diff --git a/tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java b/tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java
index 680b4c56a..32352ea9c 100755
--- a/tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java
+++ b/tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java
@@ -126,6 +126,13 @@ public class ToXMLContentHandler extends ToTextContentHandler {
     @Override
     public void startPrefixMapping(String prefix, String uri)
             throws SAXException {
+        try {
+            if (currentElement != null
+                    && prefix.equals(currentElement.getPrefix(uri))) {
+                return;
+            }
+        } catch (SAXException ignore) {
+        }
         namespaces.put(uri, prefix);
     }
 
@@ -182,7 +189,7 @@ public class ToXMLContentHandler extends ToTextContentHandler {
         }
 
         namespaces.clear();
-        
+
         // Reset the position in the tree, to avoid endless stack overflow
         // chains (see TIKA-1070)
         currentElement = currentElement.parent;
diff --git a/tika-parsers/src/test/java/org/apache/tika/TikaTest.java b/tika-parsers/src/test/java/org/apache/tika/TikaTest.java
index 37ec134ee..2c6fa3879 100644
--- a/tika-parsers/src/test/java/org/apache/tika/TikaTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/TikaTest.java
@@ -18,13 +18,8 @@ package org.apache.tika;
 
 import java.io.File;
 import java.io.InputStream;
-import java.io.StringWriter;
 import java.net.URISyntaxException;
 import java.net.URL;
-import javax.xml.transform.OutputKeys;
-import javax.xml.transform.sax.SAXTransformerFactory;
-import javax.xml.transform.sax.TransformerHandler;
-import javax.xml.transform.stream.StreamResult;
 
 import junit.framework.TestCase;
 
@@ -32,6 +27,8 @@ import org.apache.tika.metadata.Metadata;
 import org.apache.tika.parser.AutoDetectParser;
 import org.apache.tika.parser.ParseContext;
 import org.apache.tika.parser.Parser;
+import org.apache.tika.sax.ToXMLContentHandler;
+import org.xml.sax.ContentHandler;
 
 /**
  * Parent class of Tika tests
@@ -89,22 +86,15 @@ public abstract class TikaTest extends TestCase {
         InputStream input = null;
         Metadata metadata = new Metadata();
         Parser parser = new AutoDetectParser();
-        
-        StringWriter sw = new StringWriter();
-        SAXTransformerFactory factory = (SAXTransformerFactory)
-                 SAXTransformerFactory.newInstance();
-        TransformerHandler handler = factory.newTransformerHandler();
-        handler.getTransformer().setOutputProperty(OutputKeys.METHOD, "xml");
-        handler.getTransformer().setOutputProperty(OutputKeys.INDENT, "no");
-        handler.setResult(new StreamResult(sw));
 
         ParseContext context = new ParseContext();
         context.set(Parser.class, parser);
 
         input = getResourceAsStream("/test-documents/" + filePath);
         try {
+            ContentHandler handler = new ToXMLContentHandler();
             parser.parse(input, handler, metadata, context);
-            return new XMLResult(sw.toString(), metadata);
+            return new XMLResult(handler.toString(), metadata);
         } finally {
             input.close();
         }
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/PowerPointParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/PowerPointParserTest.java
index f1974d56e..752042985 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/PowerPointParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/PowerPointParserTest.java
@@ -229,8 +229,8 @@ public class PowerPointParserTest extends TikaTest {
     // TIKA-1025
     public void testEmbeddedPlacedholder() throws Exception {
        XMLResult result = getXML("testPPT_embedded2.ppt");
-       assertContains("<div class=\"embedded\" id=\"1\"/>", result.xml);
-       assertContains("<div class=\"embedded\" id=\"14\"/>", result.xml);
+       assertContains("<div class=\"embedded\" id=\"1\" />", result.xml);
+       assertContains("<div class=\"embedded\" id=\"14\" />", result.xml);
     }
 
     // TIKA-817
@@ -239,7 +239,8 @@ public class PowerPointParserTest extends TikaTest {
        //autodate automatically.  For pptx, where value is stored,
        //value is extracted.  For ppt, however, no date is extracted.
        XMLResult result = getXML("testPPT_autodate.ppt");
-       assertContains("<p class=\"slide-content\">Now<br/>\n"+
-          "*<br/>\n*<br/>", result.xml);
+       assertContains(
+               "<p class=\"slide-content\">Now<br />\n*<br />\n*<br />",
+               result.xml);
     }
 }
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/WordParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/WordParserTest.java
index a1533d90f..b05da52b4 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/WordParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/WordParserTest.java
@@ -141,7 +141,7 @@ public class WordParserTest extends TikaTest {
         // is the pdf file" and before "Bye Bye":
         int i = result.indexOf("Here is the pdf file:");
         assertTrue(i != -1);
-        int j = result.indexOf("<div class=\"embedded\" id=\"_1402837031\"/>");
+        int j = result.indexOf("<div class=\"embedded\" id=\"_1402837031\" />");
         assertTrue(j != -1);
         int k = result.indexOf("Bye Bye");
         assertTrue(k != -1);
@@ -153,14 +153,14 @@ public class WordParserTest extends TikaTest {
     // TIKA-982
     public void testEmbeddedRTF() throws Exception {
         String result = getXML("testWORD_embedded_rtf.doc").xml;
-        assertTrue(result.indexOf("<div class=\"embedded\" id=\"_1404039792\"/>") != -1);
+        assertTrue(result.indexOf("<div class=\"embedded\" id=\"_1404039792\" />") != -1);
         assertTrue(result.indexOf("_1404039792.rtf") != -1);
     }
 
     // TIKA-1019
     public void testDocumentLink() throws Exception {
         String result = getXML("testDocumentLink.doc").xml;
-        assertTrue(result.indexOf("<div class=\"embedded\" id=\"_1327495610\"/>") != -1);
+        assertTrue(result.indexOf("<div class=\"embedded\" id=\"_1327495610\" />") != -1);
         assertTrue(result.indexOf("_1327495610.unknown") != -1);
     }
 
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParserTest.java
index 832a61cbf..44aed9ace 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParserTest.java
@@ -390,7 +390,7 @@ public class OOXMLParserTest extends TikaTest {
       assertTrue(xml.contains("<h1>Heading Level 1</h1>"));
       assertTrue(xml.contains("<h2>Heading Level 2</h2>"));
       // Headings with anchor tags in them
-      assertTrue(xml.replaceAll("\r?\n", "").contains("<h3><a name=\"OnLevel3\"/>Heading Level 3</h3>"));
+      assertTrue(xml.contains("<h3><a name=\"OnLevel3\" />Heading Level 3</h3>"));
       // Bold and italic
       assertTrue(xml.contains("<b>BOLD</b>"));
       assertTrue(xml.contains("<i>ITALIC</i>"));
@@ -408,9 +408,9 @@ public class OOXMLParserTest extends TikaTest {
       xml = result.xml;
 
       // Images 2-4 (there is no 1!)
-      assertTrue("Image not found in:\n"+xml, xml.contains("<img src=\"embedded:image2.png\" alt=\"A description...\"/>"));
-      assertTrue("Image not found in:\n"+xml, xml.contains("<img src=\"embedded:image3.jpeg\" alt=\"A description...\"/>"));
-      assertTrue("Image not found in:\n"+xml, xml.contains("<img src=\"embedded:image4.png\" alt=\"A description...\"/>"));
+      assertTrue("Image not found in:\n"+xml, xml.contains("<img src=\"embedded:image2.png\" alt=\"A description...\" />"));
+      assertTrue("Image not found in:\n"+xml, xml.contains("<img src=\"embedded:image3.jpeg\" alt=\"A description...\" />"));
+      assertTrue("Image not found in:\n"+xml, xml.contains("<img src=\"embedded:image4.png\" alt=\"A description...\" />"));
             
       // Text too
       assertTrue(xml.contains("<p>The end!</p>"));
@@ -897,26 +897,10 @@ public class OOXMLParserTest extends TikaTest {
 
     // TIKA-997:
     public void testEmbeddedZipInPPTX() throws Exception {
-        InputStream input = OOXMLParserTest.class.getResourceAsStream(
-              "/test-documents/test_embedded_zip.pptx");
-        Metadata metadata = new Metadata();
-        StringWriter sw = new StringWriter();
-        SAXTransformerFactory factory = (SAXTransformerFactory)
-                 SAXTransformerFactory.newInstance();
-        TransformerHandler handler = factory.newTransformerHandler();
-        handler.getTransformer().setOutputProperty(OutputKeys.METHOD, "xml");
-        handler.getTransformer().setOutputProperty(OutputKeys.INDENT, "no");
-        handler.setResult(new StreamResult(sw));
-
-        try {
-            new OOXMLParser().parse(input, handler, metadata, new ParseContext());
-        } finally {
-            input.close();
-        }
-        String xml = sw.toString();
-        int h = xml.indexOf("<div class=\"embedded\" id=\"slide1_rId3\"/>");
+        String xml = getXML("test_embedded_zip.pptx").xml;
+        int h = xml.indexOf("<div class=\"embedded\" id=\"slide1_rId3\" />");
         int i = xml.indexOf("Send me a note");
-        int j = xml.indexOf("<div class=\"embedded\" id=\"slide2_rId4\"/>");
+        int j = xml.indexOf("<div class=\"embedded\" id=\"slide2_rId4\" />");
         int k = xml.indexOf("<p>No title</p>");
         assertTrue(h != -1);
         assertTrue(i != -1);
@@ -965,8 +949,8 @@ public class OOXMLParserTest extends TikaTest {
     // TIKA-1032:
     public void testEmbeddedPPTXTwoSlides() throws Exception {
         String xml = getXML("testPPT_embedded_two_slides.pptx").xml;
-        assertContains("<div class=\"embedded\" id=\"slide1_rId7\"/>" , xml);
-        assertContains("<div class=\"embedded\" id=\"slide2_rId7\"/>" , xml);
+        assertContains("<div class=\"embedded\" id=\"slide1_rId7\" />" , xml);
+        assertContains("<div class=\"embedded\" id=\"slide2_rId7\" />" , xml);
     }
     
     /**
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/pdf/PDFParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/pdf/PDFParserTest.java
index 1a76b6ba5..fe78fcbe6 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/pdf/PDFParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/pdf/PDFParserTest.java
@@ -355,7 +355,7 @@ public class PDFParserTest extends TikaTest {
      */
     public void testLinks() throws Exception {
         final XMLResult result = getXML("testPDFVarious.pdf");
-        assertContains("<div class=\"annotation\"><a href=\"http://tika.apache.org/\"/></div>", result.xml);
+        assertContains("<div class=\"annotation\"><a href=\"http://tika.apache.org/\" /></div>", result.xml);
     }
 
     public void testDisableAutoSpace() throws Exception {
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/pkg/ZipParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/pkg/ZipParserTest.java
index 2e3cfd260..c20035c73 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/pkg/ZipParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/pkg/ZipParserTest.java
@@ -139,8 +139,8 @@ public class ZipParserTest extends AbstractPkgTest {
     // TIKA-1036
     public void testPlaceholders() throws Exception {
         String xml = getXML("testEmbedded.zip").xml;
-        assertContains("<div class=\"embedded\" id=\"test1.txt\"/>", xml);
-        assertContains("<div class=\"embedded\" id=\"test2.txt\"/>", xml);
+        assertContains("<div class=\"embedded\" id=\"test1.txt\" />", xml);
+        assertContains("<div class=\"embedded\" id=\"test2.txt\" />", xml);
 
         // Also make sure EMBEDDED_RELATIONSHIP_ID was
         // passed when parsing the embedded docs:
