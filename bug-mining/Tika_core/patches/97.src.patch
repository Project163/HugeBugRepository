diff --git a/tika-core/src/main/java/org/apache/tika/sax/SecureContentHandler.java b/tika-core/src/main/java/org/apache/tika/sax/SecureContentHandler.java
index 92322d8ee..d6bad2497 100644
--- a/tika-core/src/main/java/org/apache/tika/sax/SecureContentHandler.java
+++ b/tika-core/src/main/java/org/apache/tika/sax/SecureContentHandler.java
@@ -17,6 +17,7 @@
 package org.apache.tika.sax;
 
 import java.io.IOException;
+import java.util.LinkedList;
 
 import org.apache.tika.exception.TikaException;
 import org.apache.tika.io.TikaInputStream;
@@ -53,6 +54,11 @@ public class SecureContentHandler extends ContentHandlerDecorator {
      */
     private int currentDepth = 0;
 
+    /**
+     * Current number of nested &lt;div class="package-entr"&gt; elements.
+     */
+    private LinkedList<Integer> packageEntryDepths = new LinkedList<Integer>();
+
     /**
      * Output threshold.
      */
@@ -66,7 +72,12 @@ public class SecureContentHandler extends ContentHandlerDecorator {
     /**
      * Maximum XML element nesting level.
      */
-    private int maxDepth = 30;
+    private int maxDepth = 100;
+
+    /**
+     * Maximum package entry nesting level.
+     */
+    private int maxPackageEntryDepth = 10;
 
     /**
      * Decorates the given content handler with zip bomb prevention based
@@ -137,6 +148,26 @@ public class SecureContentHandler extends ContentHandlerDecorator {
     }
 
 
+    /**
+     * Sets the maximum package entry nesting level. If this depth level is
+     * exceeded then an exception gets thrown.
+     *
+     * @param depth maximum package entry nesting level
+     */
+    public void setMaximumPackageEntryDepth(int depth) {
+        this.maxPackageEntryDepth = depth;
+    }
+
+    /**
+     * Returns the maximum package entry nesting level.
+     *
+     * @return maximum package entry nesting level
+     */
+    public int getMaximumPackageEntryDepth() {
+        return maxPackageEntryDepth;
+    }
+
+
     /**
      * Sets the maximum XML element nesting level. If this depth level is
      * exceeded then an exception gets thrown.
@@ -199,20 +230,37 @@ public class SecureContentHandler extends ContentHandlerDecorator {
             String uri, String localName, String name, Attributes atts)
             throws SAXException {
         currentDepth++;
-        if (currentDepth < maxDepth) {
-            super.startElement(uri, localName, name, atts);
-        } else {
+        if (currentDepth >= maxDepth) {
             throw new SecureSAXException(
                     "Suspected zip bomb: "
                     + currentDepth + " levels of XML element nesting");
         }
+
+        if ("div".equals(name)
+                && "package-entry".equals(atts.getValue("class"))) {
+            packageEntryDepths.addLast(currentDepth);
+            if (packageEntryDepths.size() >= maxPackageEntryDepth) {
+                throw new SecureSAXException(
+                        "Suspected zip bomb: "
+                        + packageEntryDepths.size()
+                        + " levels of package entry nesting");
+            }
+        }
+
+        super.startElement(uri, localName, name, atts);
     }
 
     @Override
     public void endElement(
             String uri, String localName, String name) throws SAXException {
-        currentDepth--;
         super.endElement(uri, localName, name);
+
+        if (!packageEntryDepths.isEmpty()
+                && packageEntryDepths.getLast() == currentDepth) {
+            packageEntryDepths.removeLast();
+        }
+
+        currentDepth--;
     }
 
     @Override
diff --git a/tika-core/src/test/java/org/apache/tika/sax/SecureContentHandlerTest.java b/tika-core/src/test/java/org/apache/tika/sax/SecureContentHandlerTest.java
index 1df3662b5..8ac9c7380 100644
--- a/tika-core/src/test/java/org/apache/tika/sax/SecureContentHandlerTest.java
+++ b/tika-core/src/test/java/org/apache/tika/sax/SecureContentHandlerTest.java
@@ -20,9 +20,11 @@ import java.io.IOException;
 
 import junit.framework.TestCase;
 
+import org.apache.tika.exception.TikaException;
 import org.apache.tika.io.NullInputStream;
 import org.apache.tika.io.TikaInputStream;
 import org.xml.sax.SAXException;
+import org.xml.sax.helpers.AttributesImpl;
 import org.xml.sax.helpers.DefaultHandler;
 
 /**
@@ -113,4 +115,38 @@ public class SecureContentHandlerTest extends TestCase {
         }
     }
 
+    public void testNestedElements() throws SAXException {
+        for (int i = 1; i < handler.getMaximumDepth(); i++) {
+            handler.startElement("", "x", "x", new AttributesImpl());
+        }
+        try {
+            handler.startElement("", "x", "x", new AttributesImpl());
+            fail("Nested XML element limit exceeded");
+        } catch (SAXException e) {
+            try {
+                handler.throwIfCauseOf(e);
+                throw e;
+            } catch (TikaException expected) {
+            }
+        }
+    }
+
+    public void testNestedEntries() throws SAXException {
+        AttributesImpl atts = new AttributesImpl();
+        atts.addAttribute("", "class", "class", "CDATA", "package-entry");
+        for (int i = 1; i < handler.getMaximumPackageEntryDepth(); i++) {
+            handler.startElement("", "div", "div", atts);
+        }
+        try {
+            handler.startElement("", "div", "div", atts);
+            fail("Nested XML element limit exceeded");
+        } catch (SAXException e) {
+            try {
+                handler.throwIfCauseOf(e);
+                throw e;
+            } catch (TikaException expected) {
+            }
+        }
+    }
+
 }
