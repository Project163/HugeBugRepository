diff --git a/tika-eval/tika-eval-app/src/main/java/org/apache/tika/eval/app/XMLErrorLogUpdater.java b/tika-eval/tika-eval-app/src/main/java/org/apache/tika/eval/app/XMLErrorLogUpdater.java
index c4637f999..1df0a070c 100644
--- a/tika-eval/tika-eval-app/src/main/java/org/apache/tika/eval/app/XMLErrorLogUpdater.java
+++ b/tika-eval/tika-eval-app/src/main/java/org/apache/tika/eval/app/XMLErrorLogUpdater.java
@@ -149,7 +149,6 @@ public class XMLErrorLogUpdater {
                         type.ordinal() + "," + Cols.FILE_PATH + "='" + filePath + "'" + " where " +
                         Cols.CONTAINER_ID + "=" + containerId + " or " + Cols.FILE_PATH + "='" +
                         filePath + "'";
-                ;
 
             } else {
                 //if not and container id > -1
diff --git a/tika-eval/tika-eval-app/src/main/java/org/apache/tika/eval/app/db/Cols.java b/tika-eval/tika-eval-app/src/main/java/org/apache/tika/eval/app/db/Cols.java
index f4f83028d..bb704b974 100644
--- a/tika-eval/tika-eval-app/src/main/java/org/apache/tika/eval/app/db/Cols.java
+++ b/tika-eval/tika-eval-app/src/main/java/org/apache/tika/eval/app/db/Cols.java
@@ -62,7 +62,6 @@ public enum Cols {
     TAGS_A, TAGS_B, TAGS_DIV, TAGS_I, TAGS_IMG, TAGS_LI, TAGS_P, TAGS_OL, TAGS_TABLE, TAGS_TD,
     TAGS_TITLE, TAGS_TR, TAGS_UL, TAGS_U,
     TAGS_PARSE_EXCEPTION, //if there was a SAX|IO|TikaException while parsing the html or xhtml
-    ;
 
 }
 
diff --git a/tika-eval/tika-eval-app/src/main/java/org/apache/tika/eval/app/io/ExtractReaderException.java b/tika-eval/tika-eval-app/src/main/java/org/apache/tika/eval/app/io/ExtractReaderException.java
index e1347b55f..5f48a363a 100644
--- a/tika-eval/tika-eval-app/src/main/java/org/apache/tika/eval/app/io/ExtractReaderException.java
+++ b/tika-eval/tika-eval-app/src/main/java/org/apache/tika/eval/app/io/ExtractReaderException.java
@@ -37,7 +37,7 @@ public class ExtractReaderException extends IOException {
         //what do you see when you look at the extract file
         NO_EXTRACT_FILE, ZERO_BYTE_EXTRACT_FILE, IO_EXCEPTION, EXTRACT_PARSE_EXCEPTION,
         EXTRACT_FILE_TOO_SHORT, EXTRACT_FILE_TOO_LONG,
-        INCORRECT_EXTRACT_FILE_SUFFIX;//extract file must have suffix of .json or .txt,
+        INCORRECT_EXTRACT_FILE_SUFFIX//extract file must have suffix of .json or .txt,
         // optionally followed by gzip, zip or bz2
     }
 
diff --git a/tika-eval/tika-eval-app/src/main/java/org/apache/tika/eval/app/io/XMLLogReader.java b/tika-eval/tika-eval-app/src/main/java/org/apache/tika/eval/app/io/XMLLogReader.java
index 8cbdb1eee..972e3f7f0 100644
--- a/tika-eval/tika-eval-app/src/main/java/org/apache/tika/eval/app/io/XMLLogReader.java
+++ b/tika-eval/tika-eval-app/src/main/java/org/apache/tika/eval/app/io/XMLLogReader.java
@@ -74,7 +74,6 @@ public class XMLLogReader {
                     }
                     break;
             }
-            ;
         }
     }
 
diff --git a/tika-eval/tika-eval-app/src/main/java/org/apache/tika/eval/app/tools/TopCommonTokenCounter.java b/tika-eval/tika-eval-app/src/main/java/org/apache/tika/eval/app/tools/TopCommonTokenCounter.java
index c15eb1b8c..e58074256 100644
--- a/tika-eval/tika-eval-app/src/main/java/org/apache/tika/eval/app/tools/TopCommonTokenCounter.java
+++ b/tika-eval/tika-eval-app/src/main/java/org/apache/tika/eval/app/tools/TopCommonTokenCounter.java
@@ -173,10 +173,7 @@ public class TopCommonTokenCounter {
                 List<Document> docs = new ArrayList<>();
                 for (Path inputFile : inputFiles) {
                     //total hack
-                    boolean isLeipzig = false;
-                    if (inputFile.getFileName().toString().contains("-sentences.txt")) {
-                        isLeipzig = true;
-                    }
+                    boolean isLeipzig = inputFile.getFileName().toString().contains("-sentences.txt");
                     int lines = 0;
                     try (BufferedReader reader = getReader(inputFile)) {
                         String line = reader.readLine();
@@ -336,7 +333,7 @@ public class TopCommonTokenCounter {
         }
     }
 
-    private class TokenDFPriorityQueue extends AbstractTokenTFDFPriorityQueue {
+    private static class TokenDFPriorityQueue extends AbstractTokenTFDFPriorityQueue {
 
         TokenDFPriorityQueue(int maxSize) {
             super(maxSize);
diff --git a/tika-langdetect/tika-langdetect-tika/src/main/java/org/apache/tika/langdetect/tika/LanguageIdentifier.java b/tika-langdetect/tika-langdetect-tika/src/main/java/org/apache/tika/langdetect/tika/LanguageIdentifier.java
index a6f7d10f4..8ff9f40c3 100644
--- a/tika-langdetect/tika-langdetect-tika/src/main/java/org/apache/tika/langdetect/tika/LanguageIdentifier.java
+++ b/tika-langdetect/tika-langdetect-tika/src/main/java/org/apache/tika/langdetect/tika/LanguageIdentifier.java
@@ -198,7 +198,7 @@ public class LanguageIdentifier {
      * @return true if there are errors. Use getErrors() to retrieve.
      */
     public static boolean hasErrors() {
-        return errors != "";
+        return !errors.equals("");
     }
 
     /**
diff --git a/tika-parsers/tika-parsers-extended/tika-parsers-extended-integration-tests/src/test/java/org/apache/tika/parser/sqlite3/SQLite3ParserTest.java b/tika-parsers/tika-parsers-extended/tika-parsers-extended-integration-tests/src/test/java/org/apache/tika/parser/sqlite3/SQLite3ParserTest.java
index b04e1f3df..37b7be851 100644
--- a/tika-parsers/tika-parsers-extended/tika-parsers-extended-integration-tests/src/test/java/org/apache/tika/parser/sqlite3/SQLite3ParserTest.java
+++ b/tika-parsers/tika-parsers-extended/tika-parsers-extended-integration-tests/src/test/java/org/apache/tika/parser/sqlite3/SQLite3ParserTest.java
@@ -60,7 +60,7 @@ public class SQLite3ParserTest extends TikaTest {
         }
 
         try (InputStream is = getResourceAsStream(TEST_FILE1);
-                ByteArrayOutputStream bos = new ByteArrayOutputStream();) {
+                ByteArrayOutputStream bos = new ByteArrayOutputStream()) {
             IOUtils.copy(is, bos);
             try (InputStream stream = new ByteArrayInputStream(bos.toByteArray())) {
                 _testBasic(stream);
diff --git a/tika-parsers/tika-parsers-ml/tika-age-recogniser/src/test/java/org/apache/tika/parser/recognition/AgeRecogniserTest.java b/tika-parsers/tika-parsers-ml/tika-age-recogniser/src/test/java/org/apache/tika/parser/recognition/AgeRecogniserTest.java
index 141cee2c3..d6657fe5c 100644
--- a/tika-parsers/tika-parsers-ml/tika-age-recogniser/src/test/java/org/apache/tika/parser/recognition/AgeRecogniserTest.java
+++ b/tika-parsers/tika-parsers-ml/tika-age-recogniser/src/test/java/org/apache/tika/parser/recognition/AgeRecogniserTest.java
@@ -64,7 +64,7 @@ public class AgeRecogniserTest extends TikaTest {
         //test config is added to resources directory
         try (InputStream is = getResourceAsStream(CONFIG_FILE);
                 InputStream bis = new ByteArrayInputStream(
-                        TEST_TEXT.getBytes(Charset.defaultCharset()));) {
+                        TEST_TEXT.getBytes(Charset.defaultCharset()))) {
             TikaConfig config = new TikaConfig(is);
             Tika tika = new Tika(config);
 
diff --git a/tika-parsers/tika-parsers-ml/tika-parser-advancedmedia-module/src/main/java/org/apache/tika/parser/pot/PooledTimeSeriesParser.java b/tika-parsers/tika-parsers-ml/tika-parser-advancedmedia-module/src/main/java/org/apache/tika/parser/pot/PooledTimeSeriesParser.java
index 5a31e59af..c48d9a123 100644
--- a/tika-parsers/tika-parsers-ml/tika-parser-advancedmedia-module/src/main/java/org/apache/tika/parser/pot/PooledTimeSeriesParser.java
+++ b/tika-parsers/tika-parsers-ml/tika-parser-advancedmedia-module/src/main/java/org/apache/tika/parser/pot/PooledTimeSeriesParser.java
@@ -73,7 +73,6 @@ public class PooledTimeSeriesParser extends AbstractParser {
             new HashSet<>(Arrays.asList(
                     new MediaType[]{MediaType.video("avi"), MediaType.video("mp4")}))) :
             Collections.<MediaType>emptySet();
-    ;
     // TODO: Add all supported video types
 
     private static final Logger LOG = LoggerFactory.getLogger(PooledTimeSeriesParser.class);
diff --git a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-apple-module/src/main/java/org/apache/tika/parser/iwork/PagesContentHandler.java b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-apple-module/src/main/java/org/apache/tika/parser/iwork/PagesContentHandler.java
index cc039910b..1ca168cc8 100644
--- a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-apple-module/src/main/java/org/apache/tika/parser/iwork/PagesContentHandler.java
+++ b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-apple-module/src/main/java/org/apache/tika/parser/iwork/PagesContentHandler.java
@@ -336,7 +336,7 @@ class PagesContentHandler extends DefaultHandler {
      */
     private enum DocumentPart {
         METADATA, PARSABLE_TEXT, HEADERS, HEADER_ODD, HEADER_EVEN, HEADER_FIRST, FOOTERS,
-        FOOTER_ODD, FOOTER_EVEN, FOOTER_FIRST, FOOTNOTES, ANNOTATIONS;
+        FOOTER_ODD, FOOTER_EVEN, FOOTER_FIRST, FOOTNOTES, ANNOTATIONS
     }
 
     /**
diff --git a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-html-commons/src/main/java/org/apache/tika/sax/boilerpipe/BoilerpipeContentHandler.java b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-html-commons/src/main/java/org/apache/tika/sax/boilerpipe/BoilerpipeContentHandler.java
index c506e2c68..7558afdd1 100644
--- a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-html-commons/src/main/java/org/apache/tika/sax/boilerpipe/BoilerpipeContentHandler.java
+++ b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-html-commons/src/main/java/org/apache/tika/sax/boilerpipe/BoilerpipeContentHandler.java
@@ -143,8 +143,6 @@ public class BoilerpipeContentHandler extends BoilerpipeHTMLContentHandler {
         delegate.startPrefixMapping(prefix, uri);
     }
 
-    ;
-
     @Override
     public void startElement(String uri, String localName, String qName, Attributes atts)
             throws SAXException {
@@ -162,8 +160,6 @@ public class BoilerpipeContentHandler extends BoilerpipeHTMLContentHandler {
         }
     }
 
-    ;
-
     @Override
     public void characters(char[] chars, int offset, int length) throws SAXException {
         super.characters(chars, offset, length);
@@ -182,8 +178,6 @@ public class BoilerpipeContentHandler extends BoilerpipeHTMLContentHandler {
         }
     }
 
-    ;
-
     @Override
     public void endElement(String uri, String localName, String qName) throws SAXException {
         super.endElement(uri, localName, qName);
@@ -202,8 +196,6 @@ public class BoilerpipeContentHandler extends BoilerpipeHTMLContentHandler {
         }
     }
 
-    ;
-
     @Override
     public void endDocument() throws SAXException {
         super.endDocument();
@@ -303,8 +295,6 @@ public class BoilerpipeContentHandler extends BoilerpipeHTMLContentHandler {
         delegate.endDocument();
     }
 
-    ;
-
     private static class RecordedElement {
         private String uri;
         private String localName;
diff --git a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module/src/main/java/org/apache/tika/parser/microsoft/onenote/FileNode.java b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module/src/main/java/org/apache/tika/parser/microsoft/onenote/FileNode.java
index 7a1bef93c..b2c2538db 100644
--- a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module/src/main/java/org/apache/tika/parser/microsoft/onenote/FileNode.java
+++ b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module/src/main/java/org/apache/tika/parser/microsoft/onenote/FileNode.java
@@ -257,11 +257,11 @@ class FileNode {
                     subType.revisionManifest.revisionRole);
 
         }
-        if ((gctxid != ExtendedGUID.nil() ||
+        if ((!gctxid.equals(ExtendedGUID.nil()) ||
                 id == FndStructureConstants.RevisionManifestStart7FND) && shouldPrintHeader) {
             LOG.debug("{}[gctxid {}]", IndentUtil.getIndent(indentLevel + 1), gctxid);
         }
-        if (gosid != ExtendedGUID.nil() && shouldPrintHeader) {
+        if (!gosid.equals(ExtendedGUID.nil()) && shouldPrintHeader) {
             LOG.debug("{}[end {}]:{}", IndentUtil.getIndent(indentLevel + 1),
                     FndStructureConstants.nameOf(id), gosid);
 
diff --git a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module/src/main/java/org/apache/tika/parser/microsoft/onenote/PropertyIDType.java b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module/src/main/java/org/apache/tika/parser/microsoft/onenote/PropertyIDType.java
index 28fd83bfd..6290d6e2e 100644
--- a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module/src/main/java/org/apache/tika/parser/microsoft/onenote/PropertyIDType.java
+++ b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-microsoft-module/src/main/java/org/apache/tika/parser/microsoft/onenote/PropertyIDType.java
@@ -17,5 +17,5 @@
 package org.apache.tika.parser.microsoft.onenote;
 
 enum PropertyIDType {
-    ObjectID, ArrayOfObjectIDs, ObjectSpaceID, ArrayOfObjectSpaceIDs, ContextID, ArrayofContextIDs;
+    ObjectID, ArrayOfObjectIDs, ObjectSpaceID, ArrayOfObjectSpaceIDs, ContextID, ArrayofContextIDs
 }
diff --git a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-text-module/src/main/java/org/apache/tika/parser/strings/StringsParser.java b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-text-module/src/main/java/org/apache/tika/parser/strings/StringsParser.java
index 615a981af..cb8f045ff 100644
--- a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-text-module/src/main/java/org/apache/tika/parser/strings/StringsParser.java
+++ b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-text-module/src/main/java/org/apache/tika/parser/strings/StringsParser.java
@@ -182,7 +182,6 @@ public class StringsParser extends AbstractParser implements Initializable {
         cmdList.add(stringsProg);
         cmdList.add("-n");
         cmdList.add("" + config.getMinLength());
-        ;
         // Currently, encoding option is not supported by Windows (and other) versions
         if (hasEncodingOption) {
             cmdList.add("-e");
diff --git a/tika-server/tika-server-core/src/test/java/org/apache/tika/server/core/TikaPipesTest.java b/tika-server/tika-server-core/src/test/java/org/apache/tika/server/core/TikaPipesTest.java
index f6d37de22..bc7e8245c 100644
--- a/tika-server/tika-server-core/src/test/java/org/apache/tika/server/core/TikaPipesTest.java
+++ b/tika-server/tika-server-core/src/test/java/org/apache/tika/server/core/TikaPipesTest.java
@@ -20,6 +20,7 @@ import static org.junit.Assert.assertArrayEquals;
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertFalse;
 import static org.junit.Assert.assertNotNull;
+import static org.junit.Assert.assertTrue;
 
 import java.io.ByteArrayInputStream;
 import java.io.IOException;
@@ -259,12 +260,11 @@ public class TikaPipesTest extends CXFTestBase {
                 StandardCharsets.UTF_8)) {
             jsonResponse = new ObjectMapper().readTree(reader);
         }
-        ;
         String parseException = jsonResponse.get("parse_exception").asText();
         assertNotNull(parseException);
         assertContains("NullPointerException", parseException);
-        assertEquals(true, jsonResponse.get("emitted").asBoolean());
-        List<Metadata> metadataList = null;
+        assertTrue(jsonResponse.get("emitted").asBoolean());
+        List<Metadata> metadataList;
         try (Reader reader = Files
                 .newBufferedReader(TMP_OUTPUT_DIR.resolve("null_pointer.xml.json"))) {
             metadataList = JsonMetadataList.fromJson(reader);
@@ -298,11 +298,10 @@ public class TikaPipesTest extends CXFTestBase {
                 StandardCharsets.UTF_8)) {
             jsonResponse = new ObjectMapper().readTree(reader);
         }
-        ;
         String parseException = jsonResponse.get("parse_exception").asText();
         assertNotNull(parseException);
         assertContains("NullPointerException", parseException);
-        assertEquals(false, jsonResponse.get("emitted").asBoolean());
+        assertFalse(jsonResponse.get("emitted").asBoolean());
         assertFalse(Files.isRegularFile(TMP_NPE_OUTPUT_FILE));
     }
 }
diff --git a/tika-translate/src/main/java/org/apache/tika/language/translate/JoshuaNetworkTranslator.java b/tika-translate/src/main/java/org/apache/tika/language/translate/JoshuaNetworkTranslator.java
index ede9b19d7..975802fbc 100644
--- a/tika-translate/src/main/java/org/apache/tika/language/translate/JoshuaNetworkTranslator.java
+++ b/tika-translate/src/main/java/org/apache/tika/language/translate/JoshuaNetworkTranslator.java
@@ -224,7 +224,7 @@ public class JoshuaNetworkTranslator extends AbstractTranslator {
       if (connection.getResponseCode() == 200)
         return true;
     } catch (IOException ioe) {
-      LOG.error("Error retreiving response code from Joshua Network Translator. {}", ioe);
+      LOG.error("Error retrieving response code from Joshua Network Translator.", ioe);
     }
     return false;
   }
