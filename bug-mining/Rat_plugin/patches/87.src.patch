diff --git a/apache-rat-plugin/src/it/it1/verify.groovy b/apache-rat-plugin/src/it/it1/verify.groovy
index ee843c59..3f0d20bc 100644
--- a/apache-rat-plugin/src/it/it1/verify.groovy
+++ b/apache-rat-plugin/src/it/it1/verify.groovy
@@ -21,24 +21,24 @@ import javax.xml.xpath.XPath
 import javax.xml.xpath.XPathFactory
 
 private static Map<String, String> mapOf(String... parts) {
-    Map<String, String> map = new HashMap<>();
+    Map<String, String> map = new HashMap<>()
     for (int i=0; i<parts.length; i+=2) {
-        map.put(parts[i], parts[i+1]);
+        map.put(parts[i], parts[i+1])
     }
-    return map;
+    return map
 }
 
 f = new File(basedir, 'out.xml')
 assert f.exists()
 
-Document document = XmlUtils.toDom(new FileInputStream(f));
-XPath xPath = XPathFactory.newInstance().newXPath();
+Document document = XmlUtils.toDom(new FileInputStream(f))
+XPath xPath = XPathFactory.newInstance().newXPath()
 
 XmlUtils.assertAttributes(document, xPath, "/rat-report/resource[@name='/src.apt']",
-        mapOf("encoding", "ISO-8859-1", "mediaType", "text/plain", "type", "STANDARD" ));
+        mapOf("encoding", "ISO-8859-1", "mediaType", "text/plain", "type", "STANDARD" ))
 
 XmlUtils.assertAttributes(document, xPath, "/rat-report/resource[@name='/src.apt']/license[@id='MyLicense']",
-        mapOf("approval", "true", "family", "YAL  ", "name", "Yet another license" ));
+        mapOf("approval", "true", "family", "YAL  ", "name", "Yet another license" ))
 
 XmlUtils.assertAttributes(document, xPath, "/rat-report/resource[@name='/src.apt']/license[@id='Not']",
-        mapOf("approval", "true", "family", "YAL  ", "name", "Not testing" ));
+        mapOf("approval", "true", "family", "YAL  ", "name", "Not testing" ))
diff --git a/apache-rat-plugin/src/test/java/org/apache/rat/mp/RatCheckMojoTest.java b/apache-rat-plugin/src/test/java/org/apache/rat/mp/RatCheckMojoTest.java
index 0a699639..c104bf7c 100644
--- a/apache-rat-plugin/src/test/java/org/apache/rat/mp/RatCheckMojoTest.java
+++ b/apache-rat-plugin/src/test/java/org/apache/rat/mp/RatCheckMojoTest.java
@@ -107,7 +107,6 @@ public class RatCheckMojoTest extends BetterAbstractMojoTestCase {
      * @throws Exception The test failed.
      */
     public void testIt1() throws Exception {
-
         final RatCheckMojo mojo = newRatCheckMojo("it1");
         final File ratTxtFile = mojo.getRatTxtFile();
 
@@ -128,7 +127,6 @@ public class RatCheckMojoTest extends BetterAbstractMojoTestCase {
         data.put(ClaimStatistic.Counter.UNAPPROVED, "0");
         data.put(ClaimStatistic.Counter.UNKNOWN, "0");
 
-
         org.w3c.dom.Document document = XmlUtils.toDom(new FileInputStream(ratTxtFile));
         XPath xPath = XPathFactory.newInstance().newXPath();
 
@@ -144,7 +142,6 @@ public class RatCheckMojoTest extends BetterAbstractMojoTestCase {
 
         XmlUtils.assertAttributes(document, xPath, "/rat-report/resource[@name='/pom.xml']",
                 mapOf("mediaType", "application/xml", "type", "STANDARD", "encoding", "ISO-8859-1"));
-
     }
 
     private static Map<String, String> mapOf(String... parts) {
@@ -161,7 +158,6 @@ public class RatCheckMojoTest extends BetterAbstractMojoTestCase {
      * @throws Exception The test failed.
      */
     public void testIt2() throws Exception {
-
         final RatCheckMojo mojo = newRatCheckMojo("it2");
         final File ratTxtFile = mojo.getRatTxtFile();
         final String[] expected = {
@@ -256,7 +252,6 @@ public class RatCheckMojoTest extends BetterAbstractMojoTestCase {
         data.put(ClaimStatistic.Counter.UNAPPROVED, "4");
         data.put(ClaimStatistic.Counter.UNKNOWN, "0");
 
-
         org.w3c.dom.Document document = XmlUtils.toDom(new FileInputStream(ratTxtFile));
         XPath xPath = XPathFactory.newInstance().newXPath();
 
@@ -372,7 +367,6 @@ public class RatCheckMojoTest extends BetterAbstractMojoTestCase {
             data.put(ClaimStatistic.Counter.UNAPPROVED, "4");
             data.put(ClaimStatistic.Counter.UNKNOWN, "4");
 
-
             org.w3c.dom.Document document = XmlUtils.toDom(new FileInputStream(ratTxtFile));
             XPath xPath = XPathFactory.newInstance().newXPath();
 
@@ -399,7 +393,6 @@ public class RatCheckMojoTest extends BetterAbstractMojoTestCase {
             XmlUtils.assertAttributes(document, xPath, "/rat-report/statistics/licenseName[@name='Unknown license']",
                     mapOf("count", "4" ));
 
-
             // Document types
             XmlUtils.assertAttributes(document, xPath, "/rat-report/statistics/documentType[@name='IGNORED']",
                     mapOf("count", "6" ));
