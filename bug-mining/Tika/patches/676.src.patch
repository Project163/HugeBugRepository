diff --git a/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.java b/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.java
index bb2f5d62e..5f0c24b16 100644
--- a/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.java
+++ b/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.java
@@ -190,7 +190,8 @@ public class RecursiveParserWrapper implements Parser {
      * @return
      */
     private boolean isWriteLimitReached(Throwable t) {
-        if (t.getMessage().indexOf("Your document contained more than") == 0) {
+        if (t.getMessage() != null && 
+                t.getMessage().indexOf("Your document contained more than") == 0) {
             return true;
         } else {
             return t.getCause() != null && isWriteLimitReached(t.getCause());
diff --git a/tika-core/src/test/java/org/apache/tika/io/FilenameUtilsTest.java b/tika-core/src/test/java/org/apache/tika/io/FilenameUtilsTest.java
index aff06fc99..3a4769ca6 100644
--- a/tika-core/src/test/java/org/apache/tika/io/FilenameUtilsTest.java
+++ b/tika-core/src/test/java/org/apache/tika/io/FilenameUtilsTest.java
@@ -49,8 +49,8 @@ public class FilenameUtilsTest {
             FilenameUtils.normalize(null);
             fail("missing check for null parameters");
         } catch (IllegalArgumentException x) {
-            assertTrue(x.getMessage().contains("name"));
-            assertTrue(x.getMessage().contains("not be null"));
+            assertTrue(x.getMessage() != null && x.getMessage().contains("name"));
+            assertTrue(x.getMessage() != null && x.getMessage().contains("not be null"));
         }
     }
 
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/image/ImageParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/image/ImageParser.java
index ad9c80715..c85c2704d 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/image/ImageParser.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/image/ImageParser.java
@@ -111,7 +111,9 @@ public class ImageParser extends AbstractParser {
             } catch (IIOException e) {
                 // TIKA-619: There is a known bug in the Sun API when dealing with GIF images
                 //  which Tika will just ignore.
-                if (!(e.getMessage().equals("Unexpected block type 0!") && type.equals("image/gif"))) {
+                if (!(e.getMessage() != null && 
+                        e.getMessage().equals("Unexpected block type 0!") && 
+                        type.equals("image/gif"))) {
                     throw new TikaException(type + " parse error", e);
                 }
             }
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java
index da0df288c..57e2281c2 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java
@@ -111,7 +111,8 @@ public class OOXMLExtractorFactory {
             // Extract the text, along with any in-document metadata
             extractor.getXHTML(baseHandler, metadata, context);
         } catch (IllegalArgumentException e) {
-            if (e.getMessage().startsWith("No supported documents found")) {
+            if (e.getMessage() != null &&
+                    e.getMessage().startsWith("No supported documents found")) {
                 throw new TikaException(
                         "TIKA-418: RuntimeException while getting content"
                         + " for thmx and xps file types", e);
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java b/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java
index 500f5af9b..dbf2f8d66 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java
@@ -155,7 +155,8 @@ public class PDFParser extends AbstractParser {
         } catch (IOException e) {
             //nonseq parser throws IOException for bad password
             //At the Tika level, we want the same exception to be thrown
-            if (e.getMessage().contains("Error (CryptographyException)")) {
+            if (e.getMessage() != null && 
+                    e.getMessage().contains("Error (CryptographyException)")) {
                 metadata.set("pdf:encrypted", Boolean.toString(true));
                 throw new EncryptedDocumentException(e);
             }
diff --git a/tika-server/src/main/java/org/apache/tika/server/TikaServerParseExceptionMapper.java b/tika-server/src/main/java/org/apache/tika/server/TikaServerParseExceptionMapper.java
index 9893307ae..fe1d12ca0 100644
--- a/tika-server/src/main/java/org/apache/tika/server/TikaServerParseExceptionMapper.java
+++ b/tika-server/src/main/java/org/apache/tika/server/TikaServerParseExceptionMapper.java
@@ -41,7 +41,8 @@ public class TikaServerParseExceptionMapper implements ExceptionMapper<TikaServe
     }
 
     public Response toResponse(TikaServerParseException e) {
-        if (e.getMessage().equals(Response.Status.UNSUPPORTED_MEDIA_TYPE.toString())) {
+        if (e.getMessage() != null &&
+                e.getMessage().equals(Response.Status.UNSUPPORTED_MEDIA_TYPE.toString())) {
             return buildResponse(e, 415);
         }
         Throwable cause = e.getCause();
