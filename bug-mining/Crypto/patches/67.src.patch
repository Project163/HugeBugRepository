diff --git a/pom.xml b/pom.xml
index 1d5c6afc..e0b7cb9b 100644
--- a/pom.xml
+++ b/pom.xml
@@ -180,6 +180,10 @@ The following provides more details on the included cryptographic software:
       <name>George Kankava </name>
       <email>george.kankava@devfactory.com</email>
     </contributor>
+    <contributor>
+      <name>Tian Jianguo</name>
+      <email>jianguo.tian@intel.com</email>
+    </contributor>
   </contributors>
 
   <properties>
diff --git a/src/main/java/org/apache/commons/crypto/stream/CryptoInputStream.java b/src/main/java/org/apache/commons/crypto/stream/CryptoInputStream.java
index c3441fd2..5c2bb142 100644
--- a/src/main/java/org/apache/commons/crypto/stream/CryptoInputStream.java
+++ b/src/main/java/org/apache/commons/crypto/stream/CryptoInputStream.java
@@ -58,16 +58,16 @@ public class CryptoInputStream extends InputStream implements
             + "stream.buffer.size";
 
     /** The CryptoCipher instance. */
-    final CryptoCipher cipher;
+    protected final CryptoCipher cipher;
 
     /** The buffer size. */
-    final int bufferSize;
+    private final int bufferSize;
 
     /** Crypto key for the cipher. */
-    final Key key;
+    protected final Key key;
 
     /** the algorithm parameters */
-    final AlgorithmParameterSpec params;
+    private final AlgorithmParameterSpec params;
 
     /** Flag to mark whether the input stream is closed. */
     private boolean closed;
@@ -78,19 +78,19 @@ public class CryptoInputStream extends InputStream implements
     private boolean finalDone = false;
 
     /** The input data. */
-    Input input;
+    protected Input input;
 
     /**
      * Input data buffer. The data starts at inBuffer.position() and ends at to
      * inBuffer.limit().
      */
-    ByteBuffer inBuffer;
+    protected ByteBuffer inBuffer;
 
     /**
      * The decrypted data buffer. The data starts at outBuffer.position() and
      * ends at outBuffer.limit().
      */
-    ByteBuffer outBuffer;
+    protected ByteBuffer outBuffer;
 
     // stream related configuration keys
     /**
diff --git a/src/main/java/org/apache/commons/crypto/stream/CryptoOutputStream.java b/src/main/java/org/apache/commons/crypto/stream/CryptoOutputStream.java
index bb59e2fc..7e868094 100644
--- a/src/main/java/org/apache/commons/crypto/stream/CryptoOutputStream.java
+++ b/src/main/java/org/apache/commons/crypto/stream/CryptoOutputStream.java
@@ -50,19 +50,19 @@ public class CryptoOutputStream extends OutputStream implements
     private final byte[] oneByteBuf = new byte[1];
 
     /** The output. */
-    Output output;
+    protected Output output;
 
     /** the CryptoCipher instance */
-    final CryptoCipher cipher;
+    protected final CryptoCipher cipher;
 
     /** The buffer size. */
-    final int bufferSize;
+    private final int bufferSize;
 
     /** Crypto key for the cipher. */
-    final Key key;
+    protected final Key key;
 
     /** the algorithm parameters */
-    final AlgorithmParameterSpec params;
+    private final AlgorithmParameterSpec params;
 
     /** Flag to mark whether the output stream is closed. */
     private boolean closed;
@@ -71,13 +71,13 @@ public class CryptoOutputStream extends OutputStream implements
      * Input data buffer. The data starts at inBuffer.position() and ends at
      * inBuffer.limit().
      */
-    ByteBuffer inBuffer;
+    protected ByteBuffer inBuffer;
 
     /**
      * Encrypted data buffer. The data starts at outBuffer.position() and ends
      * at outBuffer.limit().
      */
-    ByteBuffer outBuffer;
+    protected ByteBuffer outBuffer;
 
     /**
      * Constructs a {@link CryptoOutputStream}.
diff --git a/src/test/java/org/apache/commons/crypto/cipher/AbstractCipherTest.java b/src/test/java/org/apache/commons/crypto/cipher/AbstractCipherTest.java
index 0c422f2c..785fd157 100644
--- a/src/test/java/org/apache/commons/crypto/cipher/AbstractCipherTest.java
+++ b/src/test/java/org/apache/commons/crypto/cipher/AbstractCipherTest.java
@@ -46,16 +46,16 @@ public abstract class AbstractCipherTest {
     public static final int BYTEBUFFER_SIZE = 1000;
 
     public String[] cipherTests = null;
-    Properties props = null;
+    private Properties props = null;
     protected String cipherClass = null;
     protected String[] transformations = null;
 
     // cipher
-    static final byte[] KEY = { 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,
+    protected static final byte[] KEY = { 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,
             0x09, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16 };
-    static final byte[] IV = { 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,
+    protected static final byte[] IV = { 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,
             0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08 };
-    CryptoCipher enc, dec;
+    private CryptoCipher enc, dec;
 
     @Before
     public void setup() {
diff --git a/src/test/java/org/apache/commons/crypto/stream/PositionedCryptoInputStreamTest.java b/src/test/java/org/apache/commons/crypto/stream/PositionedCryptoInputStreamTest.java
index 0d6ce16e..7ac7e894 100644
--- a/src/test/java/org/apache/commons/crypto/stream/PositionedCryptoInputStreamTest.java
+++ b/src/test/java/org/apache/commons/crypto/stream/PositionedCryptoInputStreamTest.java
@@ -47,12 +47,12 @@ public class PositionedCryptoInputStreamTest {
     private Properties props = new Properties();
     private byte[] key = new byte[16];
     private byte[] iv = new byte[16];
-    int bufferSize = 2048;
-    int bufferSizeLess = bufferSize - 1;
-    int bufferSizeMore = bufferSize + 1;
-    int length = 1024;
-    int lengthLess = length - 1;
-    int lengthMore = length + 1;
+    private int bufferSize = 2048;
+    private int bufferSizeLess = bufferSize - 1;
+    private int bufferSizeMore = bufferSize + 1;
+    private int length = 1024;
+    private int lengthLess = length - 1;
+    private int lengthMore = length + 1;
 
     private String transformation = "AES/CTR/NoPadding";
 
