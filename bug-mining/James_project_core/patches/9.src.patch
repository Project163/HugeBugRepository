diff --git a/core/src/main/java/org/apache/james/core/Domain.java b/core/src/main/java/org/apache/james/core/Domain.java
index 1bcea5939e..3bf831a7e8 100644
--- a/core/src/main/java/org/apache/james/core/Domain.java
+++ b/core/src/main/java/org/apache/james/core/Domain.java
@@ -28,6 +28,7 @@ import com.google.common.base.Preconditions;
 public class Domain implements Serializable {
 
     public static final Domain LOCALHOST = Domain.of("localhost");
+    public static final int MAXIMUM_DOMAIN_LENGTH = 255;
 
     private static String removeBrackets(String domainName) {
         if (!(domainName.startsWith("[") && domainName.endsWith("]"))) {
@@ -40,6 +41,8 @@ public class Domain implements Serializable {
         Preconditions.checkNotNull(domain, "Domain can not be null");
         Preconditions.checkArgument(!domain.isEmpty() && !domain.contains("@"),
             "Domain can not be empty nor contain `@`");
+        Preconditions.checkArgument(domain.length() <= MAXIMUM_DOMAIN_LENGTH,
+            "Domain name length should not exceed " + MAXIMUM_DOMAIN_LENGTH + " characters");
         return new Domain(domain);
     }
 
diff --git a/core/src/test/java/org/apache/james/domainlist/api/DomainTest.java b/core/src/test/java/org/apache/james/domainlist/api/DomainTest.java
index 8230223e0e..1abffc600a 100644
--- a/core/src/test/java/org/apache/james/domainlist/api/DomainTest.java
+++ b/core/src/test/java/org/apache/james/domainlist/api/DomainTest.java
@@ -22,6 +22,7 @@ package org.apache.james.domainlist.api;
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.assertj.core.api.Assertions.assertThatThrownBy;
 
+import org.apache.commons.lang3.StringUtils;
 import org.apache.james.core.Domain;
 import org.junit.jupiter.api.Test;
 
@@ -101,4 +102,15 @@ class DomainTest {
         assertThatThrownBy(() -> Domain.of(null)).isInstanceOf(NullPointerException.class);
     }
 
+    @Test
+    void shouldAllow255LongDomain() {
+        assertThat(Domain.of(StringUtils.repeat('a', 255)).asString())
+            .hasSize(255);
+    }
+
+    @Test
+    void shouldThrowWhenTooLong() {
+        assertThatThrownBy(() -> Domain.of(StringUtils.repeat('a', 256)))
+            .isInstanceOf(IllegalArgumentException.class);
+    }
 }
\ No newline at end of file
