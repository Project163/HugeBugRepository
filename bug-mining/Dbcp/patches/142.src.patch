diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 521b971d..abde3786 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -67,6 +67,9 @@ The <action> type attribute can be add,update,fix,remove.
       <action dev="ggregory" type="fix" issue="DBCP-449" due-to="Grzegorz D.">
         Cannot use DBCP on Google App Engine.
       </action>
+      <action dev="ggregory" type="add" issue="DBCP-451">
+        Add constructor DriverManagerConnectionFactory(String).
+      </action>
     </release>
     <release version="2.1.1" date="6 Aug 2015" description=
 "This is a patch release, including bug fixes only.">
diff --git a/src/main/java/org/apache/commons/dbcp2/DriverManagerConnectionFactory.java b/src/main/java/org/apache/commons/dbcp2/DriverManagerConnectionFactory.java
index ddcdb92b..afed900a 100644
--- a/src/main/java/org/apache/commons/dbcp2/DriverManagerConnectionFactory.java
+++ b/src/main/java/org/apache/commons/dbcp2/DriverManagerConnectionFactory.java
@@ -42,6 +42,17 @@ public class DriverManagerConnectionFactory implements ConnectionFactory {
     }
 
 
+    /**
+     * Constructor for DriverManagerConnectionFactory.
+     * @param connectUri a database url of the form
+     * <code> jdbc:<em>subprotocol</em>:<em>subname</em></code>
+     * @since 2.1.2
+     */
+    public DriverManagerConnectionFactory(String connectUri) {
+        _connectUri = connectUri;
+        _props = new Properties();
+    }
+
     /**
      * Constructor for DriverManagerConnectionFactory.
      * @param connectUri a database url of the form
diff --git a/src/test/java/org/apache/commons/dbcp2/TestDriverManagerConnectionFactory.java b/src/test/java/org/apache/commons/dbcp2/TestDriverManagerConnectionFactory.java
index 56147ecc..355f62b3 100644
--- a/src/test/java/org/apache/commons/dbcp2/TestDriverManagerConnectionFactory.java
+++ b/src/test/java/org/apache/commons/dbcp2/TestDriverManagerConnectionFactory.java
@@ -26,6 +26,8 @@ import javax.sql.DataSource;
 
 import org.apache.commons.pool2.impl.GenericObjectPool;
 import org.apache.commons.pool2.impl.GenericObjectPoolConfig;
+import org.junit.AfterClass;
+import org.junit.BeforeClass;
 import org.junit.Test;
 
 /**
@@ -37,6 +39,25 @@ import org.junit.Test;
  */
 public class TestDriverManagerConnectionFactory {
 
+    private static final String KEY_JDBC_DRIVERS = "jdbc.drivers";
+
+    @BeforeClass 
+    public static void beforeClass() {
+        System.setProperty(KEY_JDBC_DRIVERS, "org.apache.commons.dbcp2.TesterDriver");
+    }
+    
+    @AfterClass
+    public static void afterClass() {
+        System.clearProperty(KEY_JDBC_DRIVERS);
+    }
+    
+    @Test
+    public void testDriverManagerInitWithEmptyProperties() throws Exception {
+        final ConnectionFactory connectionFactory = new DriverManagerConnectionFactory(
+                "jdbc:apache:commons:testdriver;user=foo;password=bar");
+        connectionFactory.createConnection();
+    }
+
     @Test
     public void testDriverManagerInitWithProperties() throws Exception {
         testDriverManagerInit(true);
@@ -48,8 +69,6 @@ public class TestDriverManagerConnectionFactory {
     }
 
     public void testDriverManagerInit(final boolean withProperties) throws Exception {
-        System.setProperty("jdbc.drivers",
-                "org.apache.commons.dbcp2.TesterDriver");
         GenericObjectPoolConfig config = new GenericObjectPoolConfig();
         config.setMaxTotal(10);
         config.setMaxIdle(0);
diff --git a/src/test/java/org/apache/commons/dbcp2/TesterDriver.java b/src/test/java/org/apache/commons/dbcp2/TesterDriver.java
index 21c0771a..57ca798e 100644
--- a/src/test/java/org/apache/commons/dbcp2/TesterDriver.java
+++ b/src/test/java/org/apache/commons/dbcp2/TesterDriver.java
@@ -67,7 +67,7 @@ public class TesterDriver implements Driver {
 
     @Override
     public boolean acceptsURL(String url) throws SQLException {
-        return CONNECT_STRING.startsWith(url);
+        return url != null && url.startsWith(CONNECT_STRING);
     }
 
     private void assertValidUserPassword(String user, String password) 
@@ -99,6 +99,13 @@ public class TesterDriver implements Driver {
             {
                 username = info.getProperty("user");
                 password = info.getProperty("password");
+                if (username == null) {
+                    String[] parts = url.split(";");
+                    username = parts[1];
+                    username = username.split("=")[1];
+                    password = parts[2];
+                    password = password.split("=")[1];
+                }
                 assertValidUserPassword(username, password);
             }
             conn = new TesterConnection(username, password);
