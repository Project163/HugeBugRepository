diff --git a/RELEASE-NOTES.txt b/RELEASE-NOTES.txt
index edbbf12a..d9d43a32 100644
--- a/RELEASE-NOTES.txt
+++ b/RELEASE-NOTES.txt
@@ -70,6 +70,7 @@ Bugs Fixed in 3.2:
 ==================
 
 * JEXL-290:      Safe navigation fails on chained method calls
+* JEXL-286:      For statement without a body should update its variable
 * JEXL-285:      For statement variable may seem unaffected by iteration
 * JEXL-282:      Pragmas with antish names are broken
 * JEXL-281:      MethodExecutor incorrectly tests for empty parameters list
diff --git a/src/main/java/org/apache/commons/jexl3/internal/Interpreter.java b/src/main/java/org/apache/commons/jexl3/internal/Interpreter.java
index 4937d5bc..00408ef1 100644
--- a/src/main/java/org/apache/commons/jexl3/internal/Interpreter.java
+++ b/src/main/java/org/apache/commons/jexl3/internal/Interpreter.java
@@ -684,10 +684,10 @@ public class Interpreter extends InterpreterBase {
         int symbol = loopVariable.getSymbol();
         /* second objectNode is the variable to iterate */
         Object iterableValue = node.jjtGetChild(1).jjtAccept(this, data);
-        // make sure there is a value to iterate on and a statement to execute
-        if (iterableValue != null && node.jjtGetNumChildren() >= 3) {
+        // make sure there is a value to iterate upon
+        if (iterableValue != null) {
             /* third objectNode is the statement to execute */
-            JexlNode statement = node.jjtGetChild(2);
+            JexlNode statement = node.jjtGetNumChildren() >= 3? node.jjtGetChild(2) : null;
             // get an iterator for the collection/array etc via the introspector.
             Object forEach = null;
             try {
@@ -705,13 +705,15 @@ public class Interpreter extends InterpreterBase {
                         } else {
                             frame.set(symbol, value);
                         }
-                        try {
-                            // execute statement
-                            result = statement.jjtAccept(this, data);
-                        } catch (JexlException.Break stmtBreak) {
-                            break;
-                        } catch (JexlException.Continue stmtContinue) {
-                            //continue;
+                        if (statement != null) {
+                            try {
+                                // execute statement
+                                result = statement.jjtAccept(this, data);
+                            } catch (JexlException.Break stmtBreak) {
+                                break;
+                            } catch (JexlException.Continue stmtContinue) {
+                                //continue;
+                            }
                         }
                     }
                 }
diff --git a/src/site/xdoc/changes.xml b/src/site/xdoc/changes.xml
index e38b4df5..280bbdea 100644
--- a/src/site/xdoc/changes.xml
+++ b/src/site/xdoc/changes.xml
@@ -29,6 +29,9 @@
             <action dev="henrib" type="fix" issue="JEXL-290"> 
                 Safe navigation fails on chained method calls
             </action>
+            <action dev="henrib" type="fix" issue="JEXL-286" due-to="Dmitri Blinov"> 
+                For statement without a body should update its variable
+            </action>
             <action dev="henrib" type="fix" issue="JEXL-285"> 
                 For statement variable may seem unaffected by iteration
             </action>
diff --git a/src/test/java/org/apache/commons/jexl3/Issues200Test.java b/src/test/java/org/apache/commons/jexl3/Issues200Test.java
index 1971d5a2..9c544868 100644
--- a/src/test/java/org/apache/commons/jexl3/Issues200Test.java
+++ b/src/test/java/org/apache/commons/jexl3/Issues200Test.java
@@ -794,6 +794,13 @@ public class Issues200Test extends JexlTestCase {
         List<String> ctl = Arrays.asList("g", "h", "i", "j", "k", "l");
         Assert.assertEquals(ctl, out);
     }
+    
+    @Test
+    public void test286() {
+        String s286 = "var x = 0; for(x : 1..2){}; return x";
+        JexlEngine jexl = new JexlBuilder().strict(true).create();
+        Assert.assertEquals(2, jexl.createScript(s286).execute(null));
+    }
         
     @Test
     public void test290a() throws Exception {
