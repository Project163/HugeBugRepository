diff --git a/johnzon-core/src/main/java/org/apache/johnzon/core/util/ClassUtil.java b/johnzon-core/src/main/java/org/apache/johnzon/core/util/ClassUtil.java
index 1eebe6f7..1dc189b1 100644
--- a/johnzon-core/src/main/java/org/apache/johnzon/core/util/ClassUtil.java
+++ b/johnzon-core/src/main/java/org/apache/johnzon/core/util/ClassUtil.java
@@ -58,36 +58,4 @@ public final class ClassUtil {
         }
     }
 
-    /**
-     * Calculate the name of a getter based on the name of it's field and the type
-     *
-     * @param fieldName
-     * @param type      of the field
-     * @return "get" or "is" method name for the field
-     */
-    public static String getterName(String fieldName, Class<?> type) {
-        StringBuilder sb = new StringBuilder(50);
-        sb.append(type == Boolean.class || type == boolean.class ? "is" : "get");
-        sb.append(Character.toUpperCase(fieldName.charAt(0))).append(fieldName.substring(1));
-        return sb.toString();
-    }
-
-    /**
-     * Calculate the name of a setter based on the name of it's field
-     *
-     * @param fieldName
-     * @return "set" method name for the field
-     */
-    public static String setterName(String fieldName) {
-        StringBuilder sb = new StringBuilder(50);
-        sb.append("set");
-        sb.append(Character.toUpperCase(fieldName.charAt(0))).append(fieldName.substring(1));
-        return sb.toString();
-    }
-
-    public static String capitalizeName(String fieldName) {
-        StringBuilder sb = new StringBuilder(50);
-        sb.append(Character.toUpperCase(fieldName.charAt(0))).append(fieldName.substring(1));
-        return sb.toString();
-    }
 }
\ No newline at end of file
diff --git a/johnzon-core/src/test/java/org/apache/johnzon/core/ClassUtilTest.java b/johnzon-core/src/test/java/org/apache/johnzon/core/ClassUtilTest.java
deleted file mode 100644
index 299d146d..00000000
--- a/johnzon-core/src/test/java/org/apache/johnzon/core/ClassUtilTest.java
+++ /dev/null
@@ -1,38 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *   http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.johnzon.core;
-
-import org.apache.johnzon.core.util.ClassUtil;
-import org.junit.Test;
-
-import static org.junit.Assert.assertEquals;
-
-public class ClassUtilTest {
-
-    @Test
-    public void testGetterNames() {
-        assertEquals("getMyName", ClassUtil.getterName("myName", Integer.class));
-        assertEquals("isEnabled", ClassUtil.getterName("enabled", Boolean.class));
-        assertEquals("isEnabled", ClassUtil.getterName("enabled", boolean.class));
-    }
-
-    @Test
-    public void testSetterNames() {
-        assertEquals("setMyName", ClassUtil.setterName("myName"));
-        assertEquals("setEnabled", ClassUtil.setterName("enabled"));
-    }
-}
