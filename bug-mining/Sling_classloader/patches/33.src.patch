diff --git a/src/main/java/org/apache/sling/commons/classloader/impl/Activator.java b/src/main/java/org/apache/sling/commons/classloader/impl/Activator.java
index 7e4f3bb..266845b 100644
--- a/src/main/java/org/apache/sling/commons/classloader/impl/Activator.java
+++ b/src/main/java/org/apache/sling/commons/classloader/impl/Activator.java
@@ -122,9 +122,6 @@ public class Activator implements SynchronousBundleListener, BundleActivator {
                 if ( this.service.hasUnresolvedPackages(event.getBundle()) ) {
                     reload = true;
                     logger.debug("Dynamic Class Loader is reloaded because the new bundle '{}' provides previously unresolved packages", event.getBundle());
-                } else if ( this.service.isBundleUsed(event.getBundle().getBundleId()) ) {
-                    reload = true;
-                    logger.debug("Dynamic Class Loader is reloaded because the bundle '{}' has been updated", event.getBundle());
                 } else {
                     reload = false;
                 }
diff --git a/src/test/java/org/apache/sling/commons/classloader/impl/BundeChangesTest.java b/src/test/java/org/apache/sling/commons/classloader/impl/BundeChangesTest.java
index 656aa2a..18d616e 100644
--- a/src/test/java/org/apache/sling/commons/classloader/impl/BundeChangesTest.java
+++ b/src/test/java/org/apache/sling/commons/classloader/impl/BundeChangesTest.java
@@ -127,7 +127,7 @@ public class BundeChangesTest {
         assertFalse(registerCalled.get());
         assertFalse(unregisterCalled.get());
         listener.bundleChanged(new BundleEvent(BundleEvent.STARTED, bundle));
-        assertTrue(registerCalled.get());
-        assertTrue(unregisterCalled.get());
+        assertFalse(registerCalled.get());
+        assertFalse(unregisterCalled.get());
     }
 }
