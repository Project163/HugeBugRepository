diff --git a/src/main/java/org/apache/commons/configuration2/PropertiesConfiguration.java b/src/main/java/org/apache/commons/configuration2/PropertiesConfiguration.java
index e4875f62..2052cf60 100644
--- a/src/main/java/org/apache/commons/configuration2/PropertiesConfiguration.java
+++ b/src/main/java/org/apache/commons/configuration2/PropertiesConfiguration.java
@@ -628,7 +628,7 @@ public class PropertiesConfiguration extends BaseConfiguration
         private static final Pattern PROPERTY_PATTERN = Pattern
                 .compile("(([\\S&&[^\\\\" + new String(SEPARATORS)
                         + "]]|\\\\.)*)(\\s*(\\s+|[" + new String(SEPARATORS)
-                        + "])\\s*)(.*)");
+                        + "])\\s*)?(.*)");
 
         /** Constant for the index of the group for the key. */
         private static final int IDX_KEY = 1;
@@ -1185,7 +1185,7 @@ public class PropertiesConfiguration extends BaseConfiguration
         protected String fetchSeparator(String key, Object value)
         {
             return (getGlobalSeparator() != null) ? getGlobalSeparator()
-                    : getCurrentSeparator();
+                    : StringUtils.defaultString(getCurrentSeparator());
         }
     } // class PropertiesWriter
 
diff --git a/src/test/java/org/apache/commons/configuration2/TestPropertiesConfiguration.java b/src/test/java/org/apache/commons/configuration2/TestPropertiesConfiguration.java
index 3e7af5bd..f68a5aa9 100644
--- a/src/test/java/org/apache/commons/configuration2/TestPropertiesConfiguration.java
+++ b/src/test/java/org/apache/commons/configuration2/TestPropertiesConfiguration.java
@@ -142,15 +142,35 @@ public class TestPropertiesConfiguration
     }
 
     /**
-     * Tests that empty properties are treated as the empty string
-     * (rather than as null).
+     * Checks for a property without a value.
+     * 
+     * @param key the key to be checked
+     */
+    private void checkEmpty(String key)
+    {
+        String empty = conf.getString(key);
+        assertNotNull("Property not found: " + key, empty);
+        assertEquals("Wrong value for property " + key, "", empty);
+    }
+
+    /**
+     * Tests that empty properties are treated as the empty string (rather than
+     * as null).
+     */
+    @Test
+    public void testEmpty()
+    {
+        checkEmpty("test.empty");
+    }
+
+    /**
+     * Tests that properties are detected that do not have a separator and a
+     * value.
      */
     @Test
-    public void testEmpty() throws Exception
+    public void testEmptyNoSeparator()
     {
-        String empty = conf.getString("test.empty");
-        assertNotNull(empty);
-        assertEquals("", empty);
+        checkEmpty("test.empty2");
     }
 
     /**
diff --git a/src/test/resources/test.properties b/src/test/resources/test.properties
index 704d4ba0..74c80c5d 100644
--- a/src/test/resources/test.properties
+++ b/src/test/resources/test.properties
@@ -32,6 +32,7 @@ test.unescape.list-separator = This string contains \, an escaped list separator
 test.equals = value=one
 
 test.empty =
+test.empty2
 
 test.mixed.array = a
 test.mixed.array = b, c, d
