diff --git a/src/test/java/org/apache/commons/configuration2/TestJSONConfiguration.java b/src/test/java/org/apache/commons/configuration2/TestJSONConfiguration.java
index 6401dac5..c303b349 100644
--- a/src/test/java/org/apache/commons/configuration2/TestJSONConfiguration.java
+++ b/src/test/java/org/apache/commons/configuration2/TestJSONConfiguration.java
@@ -18,6 +18,7 @@
 package org.apache.commons.configuration2;
 
 import static org.junit.jupiter.api.Assertions.assertEquals;
+import static org.junit.jupiter.api.Assertions.assertNotNull;
 import static org.junit.jupiter.api.Assertions.assertInstanceOf;
 
 import java.io.FileReader;
@@ -29,6 +30,7 @@ import java.util.Map;
 
 import org.apache.commons.configuration2.ex.ConfigurationException;
 import org.junit.jupiter.api.BeforeEach;
+import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 import com.fasterxml.jackson.databind.ObjectMapper;
 import com.fasterxml.jackson.databind.type.MapType;
@@ -58,6 +60,13 @@ public class TestJSONConfiguration {
         assertEquals("bar", jsonConfiguration.getString("foo"));
     }
 
+    /**
+     * Tests CONFIGURATION-793.
+     */
+    public void testGetList_nested_with_list() {
+        assertEquals(Arrays.asList("col1", "col2"), jsonConfiguration.getList(String.class, "key4.key5"));
+    }
+
     @Test
     public void testGetProperty_dictionary() {
         assertEquals("Martin D'vloper", jsonConfiguration.getProperty("martin.name"));
@@ -105,6 +114,26 @@ public class TestJSONConfiguration {
         assertEquals(Arrays.asList("nested1", "nested2", "nested3"), property);
     }
 
+    /**
+     * Tests CONFIGURATION-793.
+     */
+    @Disabled
+    @Test
+    public void testListOfObjects() {
+        final Configuration subset = jsonConfiguration.subset("capitals");
+        assertNotNull(subset);
+        assertEquals(2, subset.size());
+
+        final List<Object> list = jsonConfiguration.getList("capitals");
+        assertNotNull(list);
+        assertEquals(2, list.size());
+
+//        assertEquals(list.get(0).get("country"), "USA");
+//        assertEquals(list.get(0).get("capital"), "Washington");
+//        assertEquals(list.get(1).get("country"), "UK");
+//        assertEquals(list.get(1).get("capital"), "London");
+    }
+
     @Test
     public void testSave() throws IOException, ConfigurationException {
         // save the Configuration as a String...
