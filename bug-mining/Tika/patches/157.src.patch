diff --git a/tika-core/src/main/java/org/apache/tika/detect/TextDetector.java b/tika-core/src/main/java/org/apache/tika/detect/TextDetector.java
index 6148668c5..481f5959f 100644
--- a/tika-core/src/main/java/org/apache/tika/detect/TextDetector.java
+++ b/tika-core/src/main/java/org/apache/tika/detect/TextDetector.java
@@ -96,7 +96,12 @@ public class TextDetector implements Detector {
             for (int i = 0; i < NUMBER_OF_BYTES_TO_TEST; i++) {
                 int ch = input.read();
                 if (ch == -1) {
-                    return MediaType.TEXT_PLAIN;
+                    if (i > 0) {
+                        return MediaType.TEXT_PLAIN;
+                    } else {
+                        // See https://issues.apache.org/jira/browse/TIKA-483
+                        return MediaType.OCTET_STREAM;
+                    }
                 } else if (ch < IS_CONTROL_BYTE.length && IS_CONTROL_BYTE[ch]) {
                     return MediaType.OCTET_STREAM;
                 }
diff --git a/tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java b/tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java
index a30cc8d1b..1e0e8bdd5 100644
--- a/tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java
+++ b/tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java
@@ -214,6 +214,9 @@ public final class MimeTypes implements Detector, Serializable {
     public MimeType getMimeType(byte[] data) {
         if (data == null) {
             throw new IllegalArgumentException("Data is missing");
+        } else if (data.length == 0) {
+            // See https://issues.apache.org/jira/browse/TIKA-483
+            return rootMimeType;
         }
 
         // Then, check for magic bytes
diff --git a/tika-core/src/test/java/org/apache/tika/detect/TextDetectorTest.java b/tika-core/src/test/java/org/apache/tika/detect/TextDetectorTest.java
index 0295f42e2..eecdea0ea 100644
--- a/tika-core/src/test/java/org/apache/tika/detect/TextDetectorTest.java
+++ b/tika-core/src/test/java/org/apache/tika/detect/TextDetectorTest.java
@@ -39,9 +39,16 @@ public class TextDetectorTest extends TestCase {
                 detector.detect(null, new Metadata()));
     }
 
-    public void testDetectText() throws Exception {
-        assertText(new byte[0]);
+    /**
+     * Test for type detection of empty documents.
+     *
+     * @see <a href="https://issues.apache.org/jira/browse/TIKA-483">TIKA-483</a>
+     */
+    public void testDetectEmpty() throws Exception {
+        assertNotText(new byte[0]);
+    }
 
+    public void testDetectText() throws Exception {
         assertText("Hello, World!".getBytes("UTF-8"));
         assertText(" \t\r\n".getBytes("UTF-8"));
         assertText(new byte[] { -1, -2, -3, 0x09, 0x0A, 0x0C, 0x0D, 0x1B });
diff --git a/tika-core/src/test/java/org/apache/tika/mime/MimeDetectionTest.java b/tika-core/src/test/java/org/apache/tika/mime/MimeDetectionTest.java
index dd5093ce2..a03961d1a 100644
--- a/tika-core/src/test/java/org/apache/tika/mime/MimeDetectionTest.java
+++ b/tika-core/src/test/java/org/apache/tika/mime/MimeDetectionTest.java
@@ -138,7 +138,28 @@ public class MimeDetectionTest extends TestCase {
             in.close();
         }        
     }
-    
+
+    /**
+     * Test for type detection of empty documents.
+     *
+     * @see <a href="https://issues.apache.org/jira/browse/TIKA-483">TIKA-483</a>
+     */
+    public void testEmptyDocument() throws IOException {
+        assertEquals(MediaType.OCTET_STREAM, mimeTypes.detect(
+                new ByteArrayInputStream(new byte[0]), new Metadata()));
+
+        Metadata namehint = new Metadata();
+        namehint.set(Metadata.RESOURCE_NAME_KEY, "test.txt");
+        assertEquals(MediaType.TEXT_PLAIN, mimeTypes.detect(
+                new ByteArrayInputStream(new byte[0]), namehint));
+
+        Metadata typehint = new Metadata();
+        typehint.set(Metadata.CONTENT_TYPE, "text/plain");
+        assertEquals(MediaType.TEXT_PLAIN, mimeTypes.detect(
+                new ByteArrayInputStream(new byte[0]), typehint));
+
+    }
+
     /**
      * Tests that when we repeatedly test the detection of a document
      *  that can be detected with Mime Magic, that we consistently
