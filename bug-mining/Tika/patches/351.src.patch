diff --git a/tika-core/src/main/java/org/apache/tika/fork/ForkClient.java b/tika-core/src/main/java/org/apache/tika/fork/ForkClient.java
index 9aabd5766..0980ed5f8 100644
--- a/tika-core/src/main/java/org/apache/tika/fork/ForkClient.java
+++ b/tika-core/src/main/java/org/apache/tika/fork/ForkClient.java
@@ -246,8 +246,10 @@ class ForkClient {
             Class<?>[] bootstrap = {
                     ForkServer.class, ForkObjectInputStream.class,
                     ForkProxy.class, ClassLoaderProxy.class,
-                    MemoryURLConnection.class, MemoryURLStreamHandler.class,
-                    MemoryURLStreamHandlerFactory.class
+                    MemoryURLConnection.class,
+                    MemoryURLStreamHandler.class,
+                    MemoryURLStreamHandlerFactory.class,
+                    MemoryURLStreamRecord.class
             };
             ClassLoader loader = ForkServer.class.getClassLoader();
             for (Class<?> klass : bootstrap) {
diff --git a/tika-core/src/main/java/org/apache/tika/fork/MemoryURLStreamHandler.java b/tika-core/src/main/java/org/apache/tika/fork/MemoryURLStreamHandler.java
index 27366a9c6..8c1572707 100644
--- a/tika-core/src/main/java/org/apache/tika/fork/MemoryURLStreamHandler.java
+++ b/tika-core/src/main/java/org/apache/tika/fork/MemoryURLStreamHandler.java
@@ -31,19 +31,15 @@ class MemoryURLStreamHandler extends URLStreamHandler {
 
     private static final AtomicInteger counter = new AtomicInteger();
 
-    private static class Record {
-        public WeakReference<URL> url;
-        public byte[] data;
-    }
-
-    private static final List<Record> records = new LinkedList<Record>();
+    private static final List<MemoryURLStreamRecord> records =
+        new LinkedList<MemoryURLStreamRecord>();
 
     public static URL createURL(byte[] data) {
         try {
             int i = counter.incrementAndGet();
             URL url =  new URL("tika-in-memory", "localhost", "/" + i);
 
-            Record record = new Record();
+            MemoryURLStreamRecord record = new MemoryURLStreamRecord();
             record.url = new WeakReference<URL>(url);
             record.data = data;
             records.add(record);
@@ -56,9 +52,9 @@ class MemoryURLStreamHandler extends URLStreamHandler {
 
     @Override
     protected URLConnection openConnection(URL u) throws IOException {
-        Iterator<Record> iterator = records.iterator();
+        Iterator<MemoryURLStreamRecord> iterator = records.iterator();
         while (iterator.hasNext()) {
-            Record record = iterator.next();
+            MemoryURLStreamRecord record = iterator.next();
             URL url = record.url.get();
             if (url == null) {
                 iterator.remove();
diff --git a/tika-core/src/main/java/org/apache/tika/fork/MemoryURLStreamRecord.java b/tika-core/src/main/java/org/apache/tika/fork/MemoryURLStreamRecord.java
new file mode 100644
index 000000000..8d1a50954
--- /dev/null
+++ b/tika-core/src/main/java/org/apache/tika/fork/MemoryURLStreamRecord.java
@@ -0,0 +1,27 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.tika.fork;
+
+import java.lang.ref.WeakReference;
+import java.net.URL;
+
+class MemoryURLStreamRecord {
+
+    public WeakReference<URL> url;
+    public byte[] data;
+
+}
\ No newline at end of file
