diff --git a/xbean-naming/src/main/java/org/apache/xbean/naming/context/AbstractContext.java b/xbean-naming/src/main/java/org/apache/xbean/naming/context/AbstractContext.java
index 9d063ad3..4e81046e 100644
--- a/xbean-naming/src/main/java/org/apache/xbean/naming/context/AbstractContext.java
+++ b/xbean-naming/src/main/java/org/apache/xbean/naming/context/AbstractContext.java
@@ -351,11 +351,11 @@ public abstract class AbstractContext implements Context, NestedContextFactory,
         if (name == null) throw new NullPointerException("name is null");
         if (name.size() < 2) throw new InvalidNameException("name must have at least 2 parts " + name);
 
-        if (!path.endsWith("/")) path += "/";
+        if (path.length() > 0 && !path.endsWith("/")) path += "/";
 
-        for (int i = name.size() - 2; i >= 0; i--) {
-            String fullPath = path + name.getSuffix(i);
-            String key = name.get(i + 1);
+        for (int i = name.size() - 1; i > 0; i--) {
+            String fullPath = path + name.getPrefix(i);
+            String key = name.get(i);
             value = createNestedSubcontext(fullPath, Collections.singletonMap(key, value));
         }
         return (Context) value;
diff --git a/xbean-naming/src/main/java/org/apache/xbean/naming/context/WritableContext.java b/xbean-naming/src/main/java/org/apache/xbean/naming/context/WritableContext.java
index 01839cdb..9c65ceb8 100644
--- a/xbean-naming/src/main/java/org/apache/xbean/naming/context/WritableContext.java
+++ b/xbean-naming/src/main/java/org/apache/xbean/naming/context/WritableContext.java
@@ -203,7 +203,8 @@ public class WritableContext extends AbstractFederatedContext {
 
         public NestedWritableContext(String path, Map<String, Object> bindings) throws NamingException {
             super(WritableContext.this, path);
-
+            
+            path = getNameInNamespace();
             if (!path.endsWith("/")) path += "/";
             this.pathWithSlash = path;
 
diff --git a/xbean-naming/src/test/java/org/apache/xbean/naming/context/WritableContextTest.java b/xbean-naming/src/test/java/org/apache/xbean/naming/context/WritableContextTest.java
index ff7841f7..312bdc9e 100644
--- a/xbean-naming/src/test/java/org/apache/xbean/naming/context/WritableContextTest.java
+++ b/xbean-naming/src/test/java/org/apache/xbean/naming/context/WritableContextTest.java
@@ -894,4 +894,19 @@ public class WritableContextTest extends AbstractContextTest {
         }
         assertEq(bindings, context);
     }
+
+    public void testLookupSubContext() throws Exception {
+        Context ctx = (Context) context.lookup("a/b/c");
+        String s = (String) ctx.lookup("d/e/string");
+        assertEquals(s, WritableContextTest.STRING_VAL);
+    }
+
+    public void testDeepBinding() throws Exception {
+        WritableContext w = new WritableContext("jca:");
+        w.addDeepBinding(w.getNameParser("").parse("test/test/GBean/resourceSource"), WritableContextTest.STRING_VAL, false, true);
+        assertEquals(WritableContextTest.STRING_VAL, w.lookup("test/test/GBean/resourceSource"));
+        w.rebind("test/test/GBean/resourceSource", 1);
+        assertEquals(new Integer(1), w.lookup("test/test/GBean/resourceSource"));
+    }
+
 }
