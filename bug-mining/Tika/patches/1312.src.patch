diff --git a/tika-integration-tests/tika-resource-loading-tests/src/test/java/org/apache/custom/parser/CustomParserTest.java b/tika-integration-tests/tika-resource-loading-tests/src/test/java/org/apache/custom/parser/CustomParserTest.java
index f42096a16..e48154929 100644
--- a/tika-integration-tests/tika-resource-loading-tests/src/test/java/org/apache/custom/parser/CustomParserTest.java
+++ b/tika-integration-tests/tika-resource-loading-tests/src/test/java/org/apache/custom/parser/CustomParserTest.java
@@ -32,7 +32,6 @@ import org.apache.tika.parser.Parser;
 public class CustomParserTest extends TikaTest {
 
     @Test
-    @Disabled("test fails because of sorting")
     public void testBasic() throws Exception {
         DefaultParser p = new DefaultParser();
         assertEquals(2, p.getAllComponentParsers().size());
diff --git a/tika-parsers/tika-parsers-extended/tika-parsers-extended-integration-tests/pom.xml b/tika-parsers/tika-parsers-extended/tika-parsers-extended-integration-tests/pom.xml
index 7126b376c..ede345235 100644
--- a/tika-parsers/tika-parsers-extended/tika-parsers-extended-integration-tests/pom.xml
+++ b/tika-parsers/tika-parsers-extended/tika-parsers-extended-integration-tests/pom.xml
@@ -31,13 +31,7 @@
   <dependencies>
     <dependency>
       <groupId>${project.groupId}</groupId>
-      <artifactId>tika-parser-image-module</artifactId>
-      <version>${project.version}</version>
-      <scope>test</scope>
-    </dependency>
-    <dependency>
-      <groupId>${project.groupId}</groupId>
-      <artifactId>tika-parser-microsoft-module</artifactId>
+      <artifactId>tika-parsers-standard-package</artifactId>
       <version>${project.version}</version>
       <scope>test</scope>
     </dependency>
@@ -61,6 +55,16 @@
       <scope>test</scope>
       <type>test-jar</type>
     </dependency>
+    <dependency>
+      <groupId>org.apache.logging.log4j</groupId>
+      <artifactId>log4j-core</artifactId>
+      <scope>test</scope>
+    </dependency>
+    <dependency>
+      <groupId>org.apache.logging.log4j</groupId>
+      <artifactId>log4j-slf4j2-impl</artifactId>
+      <scope>test</scope>
+    </dependency>
   </dependencies>
 
   <scm>
diff --git a/tika-parsers/tika-parsers-extended/tika-parsers-extended-integration-tests/src/test/java/org/apache/tika/parser/ocr/TestOCR.java b/tika-parsers/tika-parsers-extended/tika-parsers-extended-integration-tests/src/test/java/org/apache/tika/parser/ocr/TestOCR.java
new file mode 100644
index 000000000..e466a34ca
--- /dev/null
+++ b/tika-parsers/tika-parsers-extended/tika-parsers-extended-integration-tests/src/test/java/org/apache/tika/parser/ocr/TestOCR.java
@@ -0,0 +1,49 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.tika.parser.ocr;
+
+import static org.junit.jupiter.api.Assumptions.assumeTrue;
+
+import java.util.List;
+
+import org.junit.jupiter.api.BeforeAll;
+import org.junit.jupiter.api.Test;
+
+import org.apache.tika.TikaTest;
+import org.apache.tika.metadata.Metadata;
+import org.apache.tika.metadata.TikaCoreProperties;
+
+public class TestOCR extends TikaTest {
+
+    @BeforeAll
+    public static void checkTesseract() throws Exception {
+        TesseractOCRParser p = new TesseractOCRParser();
+        assumeTrue(p.hasTesseract());
+    }
+
+    @Test
+    public void testJPEG() throws Exception {
+        List<Metadata> metadataList = getRecursiveMetadata("testOCR.jpg");
+        assertContains("OCR Testing", metadataList.get(0).get(TikaCoreProperties.TIKA_CONTENT));
+    }
+
+    @Test
+    public void testPNG() throws Exception {
+        List<Metadata> metadataList = getRecursiveMetadata("testOCR.png");
+        assertContains("file contains", metadataList.get(0).get(TikaCoreProperties.TIKA_CONTENT));
+    }
+}
diff --git a/tika-parsers/tika-parsers-extended/tika-parsers-extended-integration-tests/src/test/resources/test-documents/testOCR.jpg b/tika-parsers/tika-parsers-extended/tika-parsers-extended-integration-tests/src/test/resources/test-documents/testOCR.jpg
new file mode 100644
index 000000000..b3f1df363
Binary files /dev/null and b/tika-parsers/tika-parsers-extended/tika-parsers-extended-integration-tests/src/test/resources/test-documents/testOCR.jpg differ
diff --git a/tika-parsers/tika-parsers-extended/tika-parsers-extended-integration-tests/src/test/resources/test-documents/testOCR.png b/tika-parsers/tika-parsers-extended/tika-parsers-extended-integration-tests/src/test/resources/test-documents/testOCR.png
new file mode 100644
index 000000000..227e76c34
Binary files /dev/null and b/tika-parsers/tika-parsers-extended/tika-parsers-extended-integration-tests/src/test/resources/test-documents/testOCR.png differ
