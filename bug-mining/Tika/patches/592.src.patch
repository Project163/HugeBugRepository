diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java b/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java
index e389776b3..649ecaf9c 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java
@@ -324,28 +324,42 @@ class PDF2XHTML extends PDFTextStripper {
             if (object instanceof PDXObjectForm) {
                 extractImages(((PDXObjectForm) object).getResources());
             } else if (object instanceof PDXObjectImage) {
-                
-                //Do we only want to process unique COSObject ids?
-                //If so, have we already processed this one?
-                if (config.getExtractUniqueInlineImagesOnly() == true) {
-                    String cosObjectId = entry.getKey();
-                    if (processedInlineImages.contains(cosObjectId)){
-                        continue;
-                    }
-                    processedInlineImages.add(cosObjectId);
-                }
 
                 PDXObjectImage image = (PDXObjectImage) object;
 
                 Metadata metadata = new Metadata();
+                String extension = "";
                 if (image instanceof PDJpeg) {
                     metadata.set(Metadata.CONTENT_TYPE, "image/jpeg");
+                    extension = ".jpg";
                 } else if (image instanceof PDCcitt) {
                     metadata.set(Metadata.CONTENT_TYPE, "image/tiff");
+                    extension = ".tif";
                 } else if (image instanceof PDPixelMap) {
                     metadata.set(Metadata.CONTENT_TYPE, "image/png");
+                    extension = ".png";
                 }
-                metadata.set(TikaCoreProperties.EMBEDDED_RESOURCE_TYPE, 
+                String fileName = "image"+inlineImageCounter+++extension;
+                metadata.set(Metadata.RESOURCE_NAME_KEY, fileName);
+
+                // Output the img tag
+                AttributesImpl attr = new AttributesImpl();
+                attr.addAttribute("", "src", "src", "CDATA", "embedded:" + fileName);
+                attr.addAttribute("", "alt", "alt", "CDATA", fileName);
+                handler.startElement("img", attr);
+                handler.endElement("img");
+
+                //Do we only want to process unique COSObject ids?
+                //If so, have we already processed this one?
+                if (config.getExtractUniqueInlineImagesOnly() == true) {
+                    String cosObjectId = entry.getKey();
+                    if (processedInlineImages.contains(cosObjectId)){
+                        continue;
+                    }
+                    processedInlineImages.add(cosObjectId);
+                }
+
+                metadata.set(TikaCoreProperties.EMBEDDED_RESOURCE_TYPE,
                         TikaCoreProperties.EmbeddedResourceType.INLINE.toString());
 
                 EmbeddedDocumentExtractor extractor =
@@ -359,14 +373,6 @@ class PDF2XHTML extends PDFTextStripper {
                                 new ByteArrayInputStream(buffer.toByteArray()),
                                 new EmbeddedContentHandler(handler),
                                 metadata, false);
-                        
-                        AttributesImpl attributes = new AttributesImpl();
-                        attributes.addAttribute("", "class", "class", "CDATA", "embedded");
-                        attributes.addAttribute("", "id", "id", "CDATA", Integer.toString(inlineImageCounter++));
-                        attributes.addAttribute("", "inline_image", "inline_image", "CDATA", "true");
-                        handler.startElement("div", attributes);
-                        handler.endElement("div");
-
                     } catch (IOException e) {
                         // could not extract this image, so just skip it...
                     }
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/pdf/PDFParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/pdf/PDFParserTest.java
index 201032a8e..51169efb5 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/pdf/PDFParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/pdf/PDFParserTest.java
@@ -695,7 +695,7 @@ public class PDFParserTest extends TikaTest {
 
         assertEquals(5, metadatas.size());
         assertNull(metadatas.get(0).get(Metadata.RESOURCE_NAME_KEY));
-        assertNull(metadatas.get(1).get(Metadata.RESOURCE_NAME_KEY));
+        assertEquals("image0.jpg", metadatas.get(1).get(Metadata.RESOURCE_NAME_KEY));
         assertEquals("Press Quality(1).joboptions", metadatas.get(3).get(Metadata.RESOURCE_NAME_KEY));
         assertEquals("Unit10.doc", metadatas.get(4).get(Metadata.RESOURCE_NAME_KEY));
         assertEquals(MediaType.image("jpeg").toString(), metadatas.get(1).get(Metadata.CONTENT_TYPE));
@@ -1055,7 +1055,7 @@ public class PDFParserTest extends TikaTest {
         //regular attachment
         assertContains("<div class=\"embedded\" id=\"Unit10.doc\" />", xml);
         //inline image
-        assertContains("<div class=\"embedded\" id=\"0\" inline_image=\"true\" />", xml);
+        assertContains("<img src=\"embedded:image1.tif\" alt=\"image1.tif\" />", xml);
 
         //doc embedded inside an annotation
         xml = getXML("testPDFFileEmbInAnnotation.pdf").xml;
