diff --git a/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/Mapper.java b/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/Mapper.java
index 0a7b76d5..aae3c345 100644
--- a/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/Mapper.java
+++ b/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/Mapper.java
@@ -311,13 +311,25 @@ public class Mapper implements Closeable {
             }
             return;
         }
+
         final JsonGenerator generator = generatorFactory.createGenerator(stream);
-        doWriteHandlingNullObject(object, generator);
+        writeObject(object, generator);
     }
 
     public void writeObject(final Object object, final OutputStream stream) {
         final JsonGenerator generator = generatorFactory.createGenerator(stream, config.getEncoding());
-        doWriteHandlingNullObject(object, generator);
+        writeObject(object, generator);
+    }
+
+    private void writeObject(Object object, JsonGenerator generator) {
+        try {
+            MappingGenerator mappingGenerator = new MappingGeneratorImpl(config, generator, mappings);
+            generator.writeStartObject();
+            mappingGenerator.writeObject(object);
+            generator.writeEnd();
+        } finally {
+            doCloseOrFlush(generator);
+        }
     }
 
     public String writeArrayAsString(final Collection<?> instance) {
diff --git a/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MappingGeneratorImpl.java b/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MappingGeneratorImpl.java
index 31295728..d823be60 100644
--- a/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MappingGeneratorImpl.java
+++ b/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MappingGeneratorImpl.java
@@ -34,7 +34,7 @@ import org.apache.johnzon.mapper.internal.AdapterKey;
 public class MappingGeneratorImpl implements MappingGenerator {
     private final MapperConfig config;
     private final JsonGenerator generator;
-    protected final Mappings mappings;
+    private final Mappings mappings;
 
 
     MappingGeneratorImpl(MapperConfig config, JsonGenerator jsonGenerator, final Mappings mappings) {
@@ -55,17 +55,22 @@ public class MappingGeneratorImpl implements MappingGenerator {
         } else if (object instanceof JsonValue) {
             generator.write((JsonValue) object);
         } else {
-            doWriteObject(object);
+            doWriteObject(object, false);
         }
         return this;
     }
 
-    private void doWriteObject(Object object) {
+    private void doWriteObject(Object object, boolean writeBody) {
         try {
             if (object instanceof Map) {
-                generator.writeStartObject();
+                if (writeBody) {
+                    generator.writeStartObject();
+                }
                 writeMapBody((Map<?, ?>) object, null);
-                generator.writeEnd();
+                if (writeBody) {
+                    generator.writeEnd();
+                }
+                return;
             }
 
             if(writePrimitives(object)) {
@@ -80,9 +85,13 @@ public class MappingGeneratorImpl implements MappingGenerator {
                 return;
             }
 
-            generator.writeStartObject();
+            if (writeBody) {
+                generator.writeStartObject();
+            }
             doWriteObjectBody(object);
-            generator.writeEnd();
+            if (writeBody) {
+                generator.writeEnd();
+            }
         } catch (final InvocationTargetException e) {
             throw new MapperException(e);
         } catch (final IllegalAccessException e) {
@@ -319,7 +328,7 @@ public class MappingGeneratorImpl implements MappingGenerator {
             } else if (o == null) {
                 generator.writeNull();
             } else {
-                doWriteObject(o);
+                doWriteObject(o, true);
             }
         }
     }
