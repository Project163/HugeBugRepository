diff --git a/src/java/org/apache/commons/dbcp/datasources/CPDSConnectionFactory.java b/src/java/org/apache/commons/dbcp/datasources/CPDSConnectionFactory.java
index 4a2eb592..3c6449b1 100644
--- a/src/java/org/apache/commons/dbcp/datasources/CPDSConnectionFactory.java
+++ b/src/java/org/apache/commons/dbcp/datasources/CPDSConnectionFactory.java
@@ -201,11 +201,7 @@ class CPDSConnectionFactory
     public void destroyObject(Object obj) throws Exception {
         if (obj instanceof PooledConnectionAndInfo) {
             PooledConnection pc = ((PooledConnectionAndInfo)obj).getPooledConnection();
-            try {
-                pc.removeConnectionEventListener(this);
-            } catch (Exception e) {
-                //ignore
-            }
+            pc.removeConnectionEventListener(this);
             pcMap.remove(pc);
             pc.close(); 
         }
@@ -304,11 +300,7 @@ class CPDSConnectionFactory
             } catch (Exception e) {
                 System.err.println("CLOSING DOWN CONNECTION AS IT COULD "
                         + "NOT BE RETURNED TO THE POOL");
-                try {
-                    pc.removeConnectionEventListener(this);
-                } catch (Exception e2) {
-                    //ignore
-                }
+                pc.removeConnectionEventListener(this);
                 try {
                     destroyObject(info);
                 } catch (Exception e2) {
@@ -326,16 +318,12 @@ class CPDSConnectionFactory
      */
     public void connectionErrorOccurred(ConnectionEvent event) {
         PooledConnection pc = (PooledConnection)event.getSource();
-        try {
-            if (null != event.getSQLException()) {
-                System.err.println(
-                        "CLOSING DOWN CONNECTION DUE TO INTERNAL ERROR ("
-                        + event.getSQLException() + ")");
-            }
-            pc.removeConnectionEventListener(this);
-        } catch (Exception ignore) {
-            // ignore
+        if (null != event.getSQLException()) {
+            System.err.println(
+                    "CLOSING DOWN CONNECTION DUE TO INTERNAL ERROR ("
+                    + event.getSQLException() + ")");
         }
+        pc.removeConnectionEventListener(this);
 
         Object info = pcMap.get(pc);
         if (info == null) {
diff --git a/src/java/org/apache/commons/dbcp/datasources/KeyedCPDSConnectionFactory.java b/src/java/org/apache/commons/dbcp/datasources/KeyedCPDSConnectionFactory.java
index feda876e..63becf6b 100644
--- a/src/java/org/apache/commons/dbcp/datasources/KeyedCPDSConnectionFactory.java
+++ b/src/java/org/apache/commons/dbcp/datasources/KeyedCPDSConnectionFactory.java
@@ -191,11 +191,7 @@ class KeyedCPDSConnectionFactory
     public void destroyObject(Object key, Object obj) throws Exception {
         if (obj instanceof PooledConnectionAndInfo) {
             PooledConnection pc = ((PooledConnectionAndInfo)obj).getPooledConnection();
-            try {
-                pc.removeConnectionEventListener(this);
-            } catch (Exception e) {
-                //ignore
-            }
+            pc.removeConnectionEventListener(this);
             pcMap.remove(pc);
             pc.close(); 
         }
@@ -302,11 +298,7 @@ class KeyedCPDSConnectionFactory
             } catch (Exception e) {
                 System.err.println("CLOSING DOWN CONNECTION AS IT COULD " +
                 "NOT BE RETURNED TO THE POOL");
-                try {
-                    pc.removeConnectionEventListener(this);
-                } catch (Exception e2) {
-                    //ignore
-                }
+                pc.removeConnectionEventListener(this);
                 try {
                     _pool.invalidateObject(info.getUserPassKey(), info);
                 } catch (Exception e3) {
@@ -324,16 +316,12 @@ class KeyedCPDSConnectionFactory
      */
     public void connectionErrorOccurred(ConnectionEvent event) {
         PooledConnection pc = (PooledConnection)event.getSource();
-        try {
-            if (null != event.getSQLException()) {
-                System.err
-                    .println("CLOSING DOWN CONNECTION DUE TO INTERNAL ERROR (" +
-                             event.getSQLException() + ")");
-            }
-            pc.removeConnectionEventListener(this);
-        } catch (Exception ignore) {
-            // ignore
+        if (null != event.getSQLException()) {
+            System.err
+                .println("CLOSING DOWN CONNECTION DUE TO INTERNAL ERROR (" +
+                         event.getSQLException() + ")");
         }
+        pc.removeConnectionEventListener(this);
 
         PooledConnectionAndInfo info = (PooledConnectionAndInfo) pcMap.get(pc);
         if (info == null) {
diff --git a/xdocs/changes.xml b/xdocs/changes.xml
index 1f95f790..187e85dd 100644
--- a/xdocs/changes.xml
+++ b/xdocs/changes.xml
@@ -49,6 +49,11 @@ The <action> type attribute can be add,update,fix,remove.
      changes below since 1.2.2 applies to both the 1.3 and 1.4 release.  Other than
      the one issue related to adding JDBC 4 support (DBCP-191), all bug fixes
      or new features are included in both DBCP 1.3 and 1.4 ">
+      <action dev="sebb" type="fix" issue="DBCP-313" due-to="Sebastian Bazley">
+        Remove code that catches and ignores Exceptions when calling
+        PooledConnection.removeConnectionEventListener(ConnectionEventListener)
+        as the method does not throw any Exceptions.
+      </action>
       <action dev="sebb" type="update" issue="DBCP-314" due-to="Sebastian Bazley">
         Renamed variables with duplicate names in different scopes.
       </action>
