diff --git a/tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java b/tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java
index dc0d15f21..a0abe4339 100644
--- a/tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java
+++ b/tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java
@@ -84,6 +84,7 @@ import org.apache.tika.parser.ParserDecorator;
 import org.apache.tika.parser.PasswordProvider;
 import org.apache.tika.parser.html.BoilerpipeContentHandler;
 import org.apache.tika.sax.BodyContentHandler;
+import org.apache.tika.sax.ExpandedTitleContentHandler;
 import org.apache.tika.xmp.XMPMetadata;
 import org.xml.sax.ContentHandler;
 import org.xml.sax.SAXException;
@@ -166,7 +167,7 @@ public class TikaCLI {
         @Override
         protected ContentHandler getContentHandler(
                 OutputStream output, Metadata metadata) throws Exception {
-            return getTransformerHandler(output, "html", encoding, prettyPrint);
+            return new ExpandedTitleContentHandler(getTransformerHandler(output, "html", encoding, prettyPrint));
         }
     };
 
diff --git a/tika-app/src/test/java/org/apache/tika/cli/TikaCLITest.java b/tika-app/src/test/java/org/apache/tika/cli/TikaCLITest.java
index f1ee10370..8e4d4c896 100644
--- a/tika-app/src/test/java/org/apache/tika/cli/TikaCLITest.java
+++ b/tika-app/src/test/java/org/apache/tika/cli/TikaCLITest.java
@@ -98,6 +98,8 @@ public class TikaCLITest extends TestCase{
         String[] params = {"-h", resourcePrefix + "alice.cli.test"};
         TikaCLI.main(params);
         Assert.assertTrue(outContent.toString().contains("html xmlns=\"http://www.w3.org/1999/xhtml"));
+        Assert.assertTrue("Expanded <title></title> element should be present",
+                outContent.toString().contains("<title></title>"));
     }
 
     /**
diff --git a/tika-core/src/main/java/org/apache/tika/sax/ExpandedTitleContentHandler.java b/tika-core/src/main/java/org/apache/tika/sax/ExpandedTitleContentHandler.java
new file mode 100644
index 000000000..e86d9a1dc
--- /dev/null
+++ b/tika-core/src/main/java/org/apache/tika/sax/ExpandedTitleContentHandler.java
@@ -0,0 +1,75 @@
+package org.apache.tika.sax;
+
+import javax.xml.transform.sax.TransformerHandler;
+
+import org.xml.sax.Attributes;
+import org.xml.sax.ContentHandler;
+import org.xml.sax.SAXException;
+
+/**
+ * Content handler decorator which wraps a {@link TransformerHandler} in order to 
+ * allow the <code>TITLE</code> tag to render as <code>&lt;title&gt;&lt;/title&gt;</code>
+ * rather than <code>&lt;title/&gt;</code> which is accomplished
+ * by calling the {@link TransformerHandler#characters(char[], int, int)} method
+ * with a <code>length</code> of 1 but a zero length char array.
+ * <p>
+ * This workaround is an unfortunate circumstance of the limitations imposed by the
+ * implementation of the XML serialization code in the JDK brought over from
+ * the xalan project which no longer allows for the specification of an 
+ * alternate <code>content-handler</code> via xslt templates or other means.
+ * 
+ * @see <a href="https://issues.apache.org/jira/browse/TIKA-725">TIKA-725</a>
+ */
+public class ExpandedTitleContentHandler extends ContentHandlerDecorator {
+    
+    private boolean isTitleTagOpen;
+    private static final String TITLE_TAG = "TITLE";
+    
+    public ExpandedTitleContentHandler() {
+        super();
+    }
+
+    public ExpandedTitleContentHandler(ContentHandler handler) {
+        super(handler);
+    }
+
+    @Override
+    public void startDocument() throws SAXException {
+        super.startDocument();
+        isTitleTagOpen = false;
+    }
+
+    @Override
+    public void startElement(String uri, String localName, String qName,
+            Attributes atts) throws SAXException {
+        super.startElement(uri, localName, qName, atts);
+        if (TITLE_TAG.equalsIgnoreCase(localName) && XHTMLContentHandler.XHTML.equals(uri)) {
+            isTitleTagOpen = true;
+        }
+    }
+
+    @Override
+    public void endElement(String uri, String localName, String qName)
+            throws SAXException {
+        super.endElement(uri, localName, qName);
+        if (TITLE_TAG.equalsIgnoreCase(localName) && XHTMLContentHandler.XHTML.equals(uri)) {
+            isTitleTagOpen = false;
+        }
+    }
+
+    @Override
+    public void characters(char[] ch, int start, int length)
+            throws SAXException {
+        if (isTitleTagOpen && length == 0) {
+            // Hack to close the title tag
+            try {
+                super.characters(new char[0], 0, 1);
+            } catch (ArrayIndexOutOfBoundsException e) {
+                // Expected, just wanted to close the title tag
+            }
+        } else {
+            super.characters(ch, start, length);
+        }
+    }
+
+}
