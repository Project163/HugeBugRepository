diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index e426c788..f47b0133 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -65,6 +65,7 @@
   <body>
     <release version="1.2.1" date="202X-MM-DD" description="Minor release (Java 8, OpenSSL 1.1.1)">
       <!-- FIX -->
+      <action issue="CRYPTO-158" type="fix" due-to=" Juan F Arjona" dev="sebb">Illegal reflective access</action>
       <action issue="CRYPTO-179" type="fix" dev="sebb">Crash on macOS with default crypto library</action>
       <action issue="CRYPTO-166" type="fix" dev="sebb">Library is reloaded multiple times</action>
       <action issue="CRYPTO-175" type="fix" dev="sebb">JNA tests rely on JNI code</action>
diff --git a/src/main/java/org/apache/commons/crypto/stream/CryptoInputStream.java b/src/main/java/org/apache/commons/crypto/stream/CryptoInputStream.java
index 520ca8df..e04a855e 100644
--- a/src/main/java/org/apache/commons/crypto/stream/CryptoInputStream.java
+++ b/src/main/java/org/apache/commons/crypto/stream/CryptoInputStream.java
@@ -19,7 +19,6 @@
 
 import java.io.IOException;
 import java.io.InputStream;
-import java.lang.reflect.Method;
 import java.nio.ByteBuffer;
 import java.nio.channels.ReadableByteChannel;
 import java.security.GeneralSecurityException;
@@ -96,38 +95,6 @@ static void checkStreamCipher(final CryptoCipher cipher) throws IOException {
         }
     }
 
-    /**
-     * Forcibly free the direct buffer.
-     *
-     * @param buffer the bytebuffer to be freed.
-     */
-    static void freeDirectBuffer(final ByteBuffer buffer) {
-        if (buffer != null) {
-            try {
-                /*
-                 * Using reflection to implement sun.nio.ch.DirectBuffer.cleaner() .clean();
-                 */
-                final String SUN_CLASS = "sun.nio.ch.DirectBuffer";
-                final Class<?>[] interfaces = buffer.getClass().getInterfaces();
-                final Object[] EMPTY_OBJECT_ARRAY = {};
-
-                for (final Class<?> clazz : interfaces) {
-                    if (clazz.getName().equals(SUN_CLASS)) {
-                        /* DirectBuffer#cleaner() */
-                        final Method getCleaner = Class.forName(SUN_CLASS).getMethod("cleaner");
-                        final Object cleaner = getCleaner.invoke(buffer, EMPTY_OBJECT_ARRAY);
-                        /* Cleaner#clean() */
-                        final Method cleanMethod = Class.forName("sun.misc.Cleaner").getMethod("clean");
-                        cleanMethod.invoke(cleaner, EMPTY_OBJECT_ARRAY);
-                        return;
-                    }
-                }
-            } catch (final ReflectiveOperationException e) { // NOPMD
-                // Ignore the Reflection exception.
-            }
-        }
-    }
-
     /**
      * Reads crypto buffer size.
      *
@@ -418,8 +385,8 @@ protected int decryptMore() throws IOException {
 
     /** Forcibly free the direct buffers. */
     protected void freeBuffers() {
-        CryptoInputStream.freeDirectBuffer(inBuffer);
-        CryptoInputStream.freeDirectBuffer(outBuffer);
+        inBuffer.clear();
+        outBuffer.clear();
     }
 
     /**
diff --git a/src/main/java/org/apache/commons/crypto/stream/CryptoOutputStream.java b/src/main/java/org/apache/commons/crypto/stream/CryptoOutputStream.java
index 668436b9..ecc9da99 100644
--- a/src/main/java/org/apache/commons/crypto/stream/CryptoOutputStream.java
+++ b/src/main/java/org/apache/commons/crypto/stream/CryptoOutputStream.java
@@ -297,8 +297,8 @@ public void flush() throws IOException {
 
     /** Forcibly free the direct buffers. */
     protected void freeBuffers() {
-        CryptoInputStream.freeDirectBuffer(inBuffer);
-        CryptoInputStream.freeDirectBuffer(outBuffer);
+        inBuffer.clear();
+        outBuffer.clear();
     }
 
     /**
diff --git a/src/main/java/org/apache/commons/crypto/stream/PositionedCryptoInputStream.java b/src/main/java/org/apache/commons/crypto/stream/PositionedCryptoInputStream.java
index 748f60f1..c11553ae 100644
--- a/src/main/java/org/apache/commons/crypto/stream/PositionedCryptoInputStream.java
+++ b/src/main/java/org/apache/commons/crypto/stream/PositionedCryptoInputStream.java
@@ -139,7 +139,7 @@ protected PositionedCryptoInputStream(final Properties properties, final Input i
     private void cleanByteBufferPool() {
         ByteBuffer buf;
         while ((buf = byteBufferPool.poll()) != null) {
-            CryptoInputStream.freeDirectBuffer(buf);
+            buf.clear();
         }
     }
 
