diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java
index 58ec03d6c..03cf9c138 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java
@@ -116,8 +116,8 @@ public class ExcelExtractor {
     protected void parse(
             POIFSFileSystem filesystem, XHTMLContentHandler xhtml,
             Locale locale) throws IOException, SAXException {
-    	TikaHSSFListener listener = new TikaHSSFListener(xhtml, locale);
-    	listener.processFile(filesystem, isListenForAllRecords());
+        TikaHSSFListener listener = new TikaHSSFListener(xhtml, locale);
+        listener.processFile(filesystem, isListenForAllRecords());
         listener.throwStoredException();
     }
 
@@ -183,6 +183,7 @@ public class ExcelExtractor {
         private TikaHSSFListener(XHTMLContentHandler handler, Locale locale) {
             this.handler = handler;
             this.format = NumberFormat.getInstance(locale);
+            this.formatListener = new FormatTrackingHSSFListener(this, locale);
         }
 
         /**
@@ -198,7 +199,6 @@ public class ExcelExtractor {
     		throws IOException,	SAXException {
 
     		// Set up listener and register the records we want to process
-    		formatListener = new FormatTrackingHSSFListener(this);
             HSSFRequest hssfRequest = new HSSFRequest();
             if (listenForAllRecords) {
                 hssfRequest.addListenerForAllRecords(formatListener);
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java
index 1034a441f..f600c89d1 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java
@@ -43,7 +43,7 @@ public class XSSFExcelExtractorDecorator extends AbstractOOXMLExtractor {
     /**
      * Internal <code>DataFormatter</code> for formatting Numbers.
      */
-	private final DataFormatter formatter = new DataFormatter();
+    private final DataFormatter formatter;
 
     private final XSSFExcelExtractor extractor;
     private static final String TYPE = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";
@@ -53,6 +53,7 @@ public class XSSFExcelExtractorDecorator extends AbstractOOXMLExtractor {
         super(extractor, TYPE);
 
         this.extractor = extractor;
+        formatter = new DataFormatter(locale);
     }
 
     /**
@@ -92,11 +93,11 @@ public class XSSFExcelExtractorDecorator extends AbstractOOXMLExtractor {
                         xhtml.characters(cell.getRichStringCellValue()
                                 .getString());
                     } else if (type == Cell.CELL_TYPE_NUMERIC) {
-                    	CellStyle style = cell.getCellStyle();
-                	    xhtml.characters(
-                	    	formatter.formatRawCellContents(cell.getNumericCellValue(),
-															style.getDataFormat(),
-															style.getDataFormatString()));
+                        CellStyle style = cell.getCellStyle();
+                        xhtml.characters(
+                            formatter.formatRawCellContents(cell.getNumericCellValue(),
+                                                            style.getDataFormat(),
+                                                            style.getDataFormatString()));
                     } else {
                         XSSFCell xc = (XSSFCell) cell;
                         String rawValue = xc.getRawValue();
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ExcelParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ExcelParserTest.java
index 7459c21f8..b1f17ba8e 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ExcelParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ExcelParserTest.java
@@ -22,30 +22,20 @@ import java.util.Locale;
 import junit.framework.TestCase;
 
 import org.apache.tika.metadata.Metadata;
+import org.apache.tika.parser.ParseContext;
 import org.apache.tika.sax.BodyContentHandler;
 import org.xml.sax.ContentHandler;
 
 public class ExcelParserTest extends TestCase {
-
-    // TODO: This is a workaround until TIKA-371 is fixed
-    private Locale defaultLocale;
-
-    protected void setUp() {
-        defaultLocale = Locale.getDefault();
-        Locale.setDefault(Locale.US);
-    }
-
-    protected void tearDown() {
-        Locale.setDefault(defaultLocale);
-    }
-
     public void testExcelParser() throws Exception {
         InputStream input = ExcelParserTest.class.getResourceAsStream(
                 "/test-documents/testEXCEL.xls");
         try {
             Metadata metadata = new Metadata();
             ContentHandler handler = new BodyContentHandler();
-            new OfficeParser().parse(input, handler, metadata);
+            ParseContext context = new ParseContext();
+            context.set(Locale.class, Locale.US);
+            new OfficeParser().parse(input, handler, metadata, context);
 
             assertEquals(
                     "application/vnd.ms-excel",
@@ -91,9 +81,14 @@ public class ExcelParserTest extends TestCase {
             assertTrue(content.contains("1.98E08"));
             assertTrue(content.contains("-1.98E08"));
 
-            // Percentage
-            assertTrue(content.contains("3%"));
+            // Percentage.
             assertTrue(content.contains("2.50%"));
+            // Excel rounds up to 3%, but that requires Java 1.6 or later
+            if(System.getProperty("java.version").startsWith("1.5")) {
+                assertTrue(content.contains("2%"));
+            } else {
+                assertTrue(content.contains("3%"));
+            }
 
             // Time Format: h:mm
             assertTrue(content.contains("6:15"));
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParserTest.java
index 842e85890..51df97fb2 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParserTest.java
@@ -23,6 +23,7 @@ import junit.framework.TestCase;
 
 import org.apache.tika.metadata.Metadata;
 import org.apache.tika.metadata.TikaMetadataKeys;
+import org.apache.tika.parser.ParseContext;
 import org.apache.tika.parser.Parser;
 import org.apache.tika.sax.BodyContentHandler;
 import org.xml.sax.ContentHandler;
@@ -30,19 +31,6 @@ import org.xml.sax.ContentHandler;
 import org.apache.tika.parser.AutoDetectParser;
 
 public class OOXMLParserTest extends TestCase {
-
-    // TODO: This is a workaround until TIKA-371 is fixed
-    private Locale defaultLocale;
-
-    protected void setUp() {
-        defaultLocale = Locale.getDefault();
-        Locale.setDefault(Locale.US);
-    }
-
-    protected void tearDown() {
-        Locale.setDefault(defaultLocale);
-    }
-
     public void testExcel() throws Exception {
         InputStream input = OOXMLParserTest.class
                 .getResourceAsStream("/test-documents/testEXCEL.xlsx");
@@ -53,9 +41,12 @@ public class OOXMLParserTest extends TestCase {
         // TODO: should auto-detect without the resource name
         metadata.set(Metadata.RESOURCE_NAME_KEY, "testEXCEL.xlsx");
         ContentHandler handler = new BodyContentHandler();
+        ParseContext context = new ParseContext();
+        context.set(Locale.class, Locale.US);
+
 
         try {
-            parser.parse(input, handler, metadata);
+            parser.parse(input, handler, metadata, context);
 
             assertEquals(
                     "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
@@ -107,8 +98,13 @@ public class OOXMLParserTest extends TestCase {
             assertTrue(content.contains("-1.98E08"));
 
             // Percentage
-            assertTrue(content.contains("3%"));
             assertTrue(content.contains("2.50%"));
+            // Excel rounds up to 3%, but that requires Java 1.6 or later
+            if(System.getProperty("java.version").startsWith("1.5")) {
+                assertTrue(content.contains("2%"));
+            } else {
+                assertTrue(content.contains("3%"));
+            }
 
             // Time Format: h:mm
             assertTrue(content.contains("6:15"));
