diff --git a/mailet/standard/src/main/java/org/apache/james/transport/mailets/ContentReplacer.java b/mailet/standard/src/main/java/org/apache/james/transport/mailets/ContentReplacer.java
index 92fb945ac1..d2ab11baf7 100644
--- a/mailet/standard/src/main/java/org/apache/james/transport/mailets/ContentReplacer.java
+++ b/mailet/standard/src/main/java/org/apache/james/transport/mailets/ContentReplacer.java
@@ -87,10 +87,7 @@ public class ContentReplacer {
             if (subjectChanged || contentChanged) {
                 mail.getMessage().saveChanges();
             }
-        } catch (MessagingException e) {
-            throw new MailetException("Error in replace", e);
-            
-        } catch (IOException e) {
+        } catch (MessagingException | IOException e) {
             throw new MailetException("Error in replace", e);
         }
     }
diff --git a/mailet/standard/src/main/java/org/apache/james/transport/mailets/HeadersToHTTP.java b/mailet/standard/src/main/java/org/apache/james/transport/mailets/HeadersToHTTP.java
index 0057ea091e..25434efb68 100644
--- a/mailet/standard/src/main/java/org/apache/james/transport/mailets/HeadersToHTTP.java
+++ b/mailet/standard/src/main/java/org/apache/james/transport/mailets/HeadersToHTTP.java
@@ -116,12 +116,9 @@ public class HeadersToHTTP extends GenericMailet {
             } else {
                 mail.setState(Mail.GHOST);
             }
-        } catch (javax.mail.MessagingException me) {
+        } catch (MessagingException | IOException me) {
             log(me.getMessage());
             addHeader(mail, false, me.getMessage());
-        } catch (IOException e) {
-            log(e.getMessage());
-            addHeader(mail, false, e.getMessage());
         }
     }
 
diff --git a/mailet/standard/src/main/java/org/apache/james/transport/mailets/LogMessage.java b/mailet/standard/src/main/java/org/apache/james/transport/mailets/LogMessage.java
index ce719160b2..cfe5517922 100644
--- a/mailet/standard/src/main/java/org/apache/james/transport/mailets/LogMessage.java
+++ b/mailet/standard/src/main/java/org/apache/james/transport/mailets/LogMessage.java
@@ -80,9 +80,7 @@ public class LogMessage extends GenericMailet {
             MimeMessage message = mail.getMessage();
             logHeaders(message);
             logBody(message);
-        } catch (MessagingException e) {
-            log("Error logging message.", e);
-        } catch (java.io.IOException e) {
+        } catch (MessagingException | IOException e) {
             log("Error logging message.", e);
         }
         if (!passThrough) {
diff --git a/mailet/standard/src/main/java/org/apache/james/transport/mailets/OnlyText.java b/mailet/standard/src/main/java/org/apache/james/transport/mailets/OnlyText.java
index 3fc4f539bb..e26827c37a 100644
--- a/mailet/standard/src/main/java/org/apache/james/transport/mailets/OnlyText.java
+++ b/mailet/standard/src/main/java/org/apache/james/transport/mailets/OnlyText.java
@@ -127,10 +127,7 @@ public class OnlyText extends GenericMailet {
                 setContentFromPart(mail.getMessage(), mail.getMessage(), html2Text((String) mail.getMessage().getContent()), true);
             }
 
-        } catch (IOException e) {
-            throw new MailetException("Failed fetching text part", e);
-
-        } catch (MessagingException e) {
+        } catch (IOException | MessagingException e) {
             throw new MailetException("Failed fetching text part", e);
         }
     }
diff --git a/mailet/standard/src/main/java/org/apache/james/transport/mailets/ReplaceContent.java b/mailet/standard/src/main/java/org/apache/james/transport/mailets/ReplaceContent.java
index 3656522a3d..6da5c79e88 100644
--- a/mailet/standard/src/main/java/org/apache/james/transport/mailets/ReplaceContent.java
+++ b/mailet/standard/src/main/java/org/apache/james/transport/mailets/ReplaceContent.java
@@ -19,7 +19,6 @@
 
 package org.apache.james.transport.mailets;
 
-import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.nio.charset.Charset;
 import java.util.List;
@@ -126,15 +125,8 @@ public class ReplaceContent extends GenericMailet {
                     .addAllSubjectReplacingUnits(subjectPatternFile())
                     .addAllBodyReplacingUnits(bodyPatternFile())
                     .build();
-        } catch (FileNotFoundException e) {
+        } catch (MailetException | IOException e) {
             throw new MailetException("Failed initialization", e);
-            
-        } catch (MailetException e) {
-            throw new MailetException("Failed initialization", e);
-            
-        } catch (IOException e) {
-            throw new MailetException("Failed initialization", e);
-            
         }
     }
 
diff --git a/mailet/standard/src/main/java/org/apache/james/transport/mailets/SerialiseToHTTP.java b/mailet/standard/src/main/java/org/apache/james/transport/mailets/SerialiseToHTTP.java
index bc41065fba..337f490b02 100644
--- a/mailet/standard/src/main/java/org/apache/james/transport/mailets/SerialiseToHTTP.java
+++ b/mailet/standard/src/main/java/org/apache/james/transport/mailets/SerialiseToHTTP.java
@@ -124,12 +124,9 @@ public class SerialiseToHTTP extends GenericMailet {
             } else {
                 mail.setState(Mail.GHOST);
             }
-        } catch (javax.mail.MessagingException me) {
+        } catch (MessagingException | IOException me) {
             log(me.getMessage());
             addHeader(mail, false, me.getMessage());
-        } catch (IOException e) {
-            log(e.getMessage());
-            addHeader(mail, false, e.getMessage());
         }
     }
 
diff --git a/mailet/standard/src/main/java/org/apache/james/transport/mailets/UnwrapText.java b/mailet/standard/src/main/java/org/apache/james/transport/mailets/UnwrapText.java
index 09e84b1668..c5d38f662c 100644
--- a/mailet/standard/src/main/java/org/apache/james/transport/mailets/UnwrapText.java
+++ b/mailet/standard/src/main/java/org/apache/james/transport/mailets/UnwrapText.java
@@ -19,18 +19,18 @@
 
 package org.apache.james.transport.mailets;
 
-import org.apache.mailet.Experimental;
-import org.apache.mailet.base.FlowedMessageUtils;
-import org.apache.mailet.base.GenericMailet;
-import org.apache.mailet.Mail;
-import org.apache.mailet.MailetException;
-
-import javax.mail.MessagingException;
-
 import java.io.IOException;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
+import javax.mail.MessagingException;
+
+import org.apache.mailet.Experimental;
+import org.apache.mailet.Mail;
+import org.apache.mailet.MailetException;
+import org.apache.mailet.base.FlowedMessageUtils;
+import org.apache.mailet.base.GenericMailet;
+
 /**
  * <p>Remove (best effort to) the hardcoded wrapping from a message.<br>
  * If the text is  "format=flowed" then deflows the text. Otherwise it forces a dewrap of the text.
@@ -87,14 +87,9 @@ public class UnwrapText extends GenericMailet {
                     mail.getMessage().saveChanges();
                 }
             }
-            
-        } catch (MessagingException e) {
-            throw new MailetException("Could not unwrap message", e);
-            
-        } catch (IOException e) {
+        } catch (MessagingException | IOException e) {
             throw new MailetException("Could not unwrap message", e);
         }
-        
     }
     
     public static String unwrap(String text) {
diff --git a/mailet/standard/src/main/java/org/apache/james/transport/mailets/WrapText.java b/mailet/standard/src/main/java/org/apache/james/transport/mailets/WrapText.java
index 959440e868..d67f02c60e 100644
--- a/mailet/standard/src/main/java/org/apache/james/transport/mailets/WrapText.java
+++ b/mailet/standard/src/main/java/org/apache/james/transport/mailets/WrapText.java
@@ -19,15 +19,15 @@
 
 package org.apache.james.transport.mailets;
 
-import org.apache.mailet.Experimental;
-import org.apache.mailet.base.FlowedMessageUtils;
-import org.apache.mailet.base.GenericMailet;
-import org.apache.mailet.Mail;
-import org.apache.mailet.MailetException;
+import java.io.IOException;
 
 import javax.mail.MessagingException;
 
-import java.io.IOException;
+import org.apache.mailet.Experimental;
+import org.apache.mailet.Mail;
+import org.apache.mailet.MailetException;
+import org.apache.mailet.base.FlowedMessageUtils;
+import org.apache.mailet.base.GenericMailet;
 
 /**
  * Convert a message to format=flowed
@@ -56,16 +56,10 @@ public class WrapText extends GenericMailet {
 
     public void service(Mail mail) throws MailetException {
         // TODO We could even manage the flow when the message is quoted-printable
-        
         try {
             FlowedMessageUtils.flowMessage(mail.getMessage(), optionFlowedDelsp, optionWidth);
-            
-        } catch (MessagingException e) {
-            throw new MailetException("Could not wrap message", e);
-            
-        } catch (IOException e) {
+        } catch (MessagingException | IOException e) {
             throw new MailetException("Could not wrap message", e);
         }
-        
     }
 }
