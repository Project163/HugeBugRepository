diff --git a/CHANGES.txt b/CHANGES.txt
index 4f4b8ca96..7c1c42005 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -1,7 +1,7 @@
 Release 1.6 - ??/??/2014
 
   * Tika now supports detection of the Persian/Farsi language.
-    (TIkA-1337)
+    (TIKA-1337)
   
   * The Tika Detector interface is now exposed through the JAX-RS
     server (TIKA-1336, TIKA-1336).
@@ -56,6 +56,8 @@ Release 1.6 - ??/??/2014
   * PDF: Images in PDF documents can now be extracted as embedded resources.
     (TIKA-1268)
 
+  * Fixed RuntimeException thrown for certain Word Documents (TIKA-1251).
+
 Release 1.5 - 02/04/2014
 
   * Fixed bug in handling of embedded file processing in PDFs (TIKA-1228).
diff --git a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java
index 8faea613b..b964502cd 100644
--- a/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java
+++ b/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java
@@ -165,13 +165,8 @@ public class WordExtractor extends AbstractPOIFSExtractor {
                     for(int i=0; i<r.numParagraphs(); i++) {
                         Paragraph p = r.getParagraph(i);
 
-                        String text = p.text();
-                        if (text.replaceAll("[\\r\\n\\s]+", "").isEmpty()) {
-                            // Skip empty header or footer paragraphs
-                        } else {
-                            i += handleParagraph(p, 0, r, document,
-                                    FieldsDocumentPart.HEADER, pictures, pictureTable, xhtml);
-                        }
+                        i += handleParagraph(p, 0, r, document,
+                                FieldsDocumentPart.HEADER, pictures, pictureTable, xhtml);
                      }
                 }
             }
@@ -208,6 +203,12 @@ public class WordExtractor extends AbstractPOIFSExtractor {
           return (t.numParagraphs()-1);
        }
 
+       String text = p.text();
+       if (text.replaceAll("[\\r\\n\\s]+", "").isEmpty()) {
+            // Skip empty paragraphs
+            return 0;
+       }
+
        TagAndStyle tas;
 
        if (document.getStyleSheet().numStyles()>p.getStyleIndex()) {
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/WordParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/WordParserTest.java
index 0942b0735..12c3b75dd 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/WordParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/microsoft/WordParserTest.java
@@ -382,4 +382,19 @@ public class WordParserTest extends TikaTest {
     public void testControlCharacter() throws Exception {
       assertContains("1. Introduzione<b> </a></b> </p>", getXML("testControlCharacters.doc").xml.replaceAll("\\s+", " "));
     }
+
+    @Test
+    public void testParagraphsAfterTables() throws Exception {
+        XMLResult result = getXML("test_TIKA-1251.doc");
+
+        String xml = result.xml;
+        Metadata metadata = result.metadata;
+
+        assertEquals(
+                "application/msword",
+                metadata.get(Metadata.CONTENT_TYPE));
+
+        assertContains("<p>1. Organisering av vakten:</p>", xml);
+
+    }
 }
diff --git a/tika-parsers/src/test/resources/test-documents/test_TIKA-1251.doc b/tika-parsers/src/test/resources/test-documents/test_TIKA-1251.doc
new file mode 100644
index 000000000..eb48990e9
Binary files /dev/null and b/tika-parsers/src/test/resources/test-documents/test_TIKA-1251.doc differ
